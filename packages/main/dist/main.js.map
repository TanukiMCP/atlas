{
  "version": 3,
  "sources": ["../src/window.ts", "../src/database/schema.ts", "../../../node_modules/uuid/dist/esm-node/rng.js", "../../../node_modules/uuid/dist/esm-node/stringify.js", "../../../node_modules/uuid/dist/esm-node/native.js", "../../../node_modules/uuid/dist/esm-node/v4.js", "../../../node_modules/uuid/dist/esm-node/index.js", "../src/database/connection.ts", "../../llm-enhanced/src/router/types.ts", "../../llm-enhanced/src/router/complexityAssessor.ts", "../../llm-enhanced/src/router/tier1Processor.ts", "../../llm-enhanced/src/router/tier2Processor.ts", "../../llm-enhanced/src/router/tier3Processor.ts", "../../llm-enhanced/src/router/tier4Processor.ts", "../../llm-enhanced/src/router/router.ts", "../../llm-enhanced/src/services/llm-service.ts", "../../llm-enhanced/src/services/mcp-client-adapter.ts", "../../llm-enhanced/src/enhanced-llm-service.ts", "../../../node_modules/eventemitter3/index.js", "../../../node_modules/eventemitter3/index.mjs", "../../llm-enhanced/src/processors/base-processor.ts", "../../llm-enhanced/src/processors/atomic-processor.ts", "../../llm-enhanced/src/intervention/user-controls.ts", "../../llm-enhanced/src/analytics/performance-tracker.ts", "../../llm-enhanced/src/index.ts", "../../../node_modules/ws/lib/constants.js", "../../../node_modules/ws/lib/buffer-util.js", "../../../node_modules/ws/lib/limiter.js", "../../../node_modules/ws/lib/permessage-deflate.js", "../../../node_modules/ws/lib/validation.js", "../../../node_modules/ws/lib/receiver.js", "../../../node_modules/ws/lib/sender.js", "../../../node_modules/ws/lib/event-target.js", "../../../node_modules/ws/lib/extension.js", "../../../node_modules/ws/lib/websocket.js", "../../../node_modules/ws/lib/stream.js", "../../../node_modules/ws/lib/subprotocol.js", "../../../node_modules/ws/lib/websocket-server.js", "../../../node_modules/ws/wrapper.mjs", "../../../node_modules/qrcode/lib/can-promise.js", "../../../node_modules/qrcode/lib/core/utils.js", "../../../node_modules/qrcode/lib/core/error-correction-level.js", "../../../node_modules/qrcode/lib/core/bit-buffer.js", "../../../node_modules/qrcode/lib/core/bit-matrix.js", "../../../node_modules/qrcode/lib/core/alignment-pattern.js", "../../../node_modules/qrcode/lib/core/finder-pattern.js", "../../../node_modules/qrcode/lib/core/mask-pattern.js", "../../../node_modules/qrcode/lib/core/error-correction-code.js", "../../../node_modules/qrcode/lib/core/galois-field.js", "../../../node_modules/qrcode/lib/core/polynomial.js", "../../../node_modules/qrcode/lib/core/reed-solomon-encoder.js", "../../../node_modules/qrcode/lib/core/version-check.js", "../../../node_modules/qrcode/lib/core/regex.js", "../../../node_modules/qrcode/lib/core/mode.js", "../../../node_modules/qrcode/lib/core/version.js", "../../../node_modules/qrcode/lib/core/format-info.js", "../../../node_modules/qrcode/lib/core/numeric-data.js", "../../../node_modules/qrcode/lib/core/alphanumeric-data.js", "../../../node_modules/qrcode/lib/core/byte-data.js", "../../../node_modules/qrcode/lib/core/kanji-data.js", "../../../node_modules/dijkstrajs/dijkstra.js", "../../../node_modules/qrcode/lib/core/segments.js", "../../../node_modules/qrcode/lib/core/qrcode.js", "../../../node_modules/pngjs/lib/chunkstream.js", "../../../node_modules/pngjs/lib/interlace.js", "../../../node_modules/pngjs/lib/paeth-predictor.js", "../../../node_modules/pngjs/lib/filter-parse.js", "../../../node_modules/pngjs/lib/filter-parse-async.js", "../../../node_modules/pngjs/lib/constants.js", "../../../node_modules/pngjs/lib/crc.js", "../../../node_modules/pngjs/lib/parser.js", "../../../node_modules/pngjs/lib/bitmapper.js", "../../../node_modules/pngjs/lib/format-normaliser.js", "../../../node_modules/pngjs/lib/parser-async.js", "../../../node_modules/pngjs/lib/bitpacker.js", "../../../node_modules/pngjs/lib/filter-pack.js", "../../../node_modules/pngjs/lib/packer.js", "../../../node_modules/pngjs/lib/packer-async.js", "../../../node_modules/pngjs/lib/sync-inflate.js", "../../../node_modules/pngjs/lib/sync-reader.js", "../../../node_modules/pngjs/lib/filter-parse-sync.js", "../../../node_modules/pngjs/lib/parser-sync.js", "../../../node_modules/pngjs/lib/packer-sync.js", "../../../node_modules/pngjs/lib/png-sync.js", "../../../node_modules/pngjs/lib/png.js", "../../../node_modules/qrcode/lib/renderer/utils.js", "../../../node_modules/qrcode/lib/renderer/png.js", "../../../node_modules/qrcode/lib/renderer/utf8.js", "../../../node_modules/qrcode/lib/renderer/terminal/terminal.js", "../../../node_modules/qrcode/lib/renderer/terminal/terminal-small.js", "../../../node_modules/qrcode/lib/renderer/terminal.js", "../../../node_modules/qrcode/lib/renderer/svg-tag.js", "../../../node_modules/qrcode/lib/renderer/svg.js", "../../../node_modules/qrcode/lib/renderer/canvas.js", "../../../node_modules/qrcode/lib/browser.js", "../../../node_modules/qrcode/lib/server.js", "../../../node_modules/qrcode/lib/index.js", "../src/ProxyServer.ts", "../src/ipc/handlers.ts", "../src/services/openrouter-service.ts", "../src/services/system-monitor.ts", "../../mcp-hub/src/transports/base-transport.ts", "../../mcp-hub/src/transports/stdio-transport.ts", "../../mcp-hub/src/transports/sse-transport.ts", "../../mcp-hub/src/transports/websocket-transport.ts", "../../mcp-hub/src/transports/transport-factory.ts", "../../mcp-hub/src/health/health-monitor.ts", "../../mcp-hub/src/client-hub.ts", "../../mcp-hub/src/types.ts", "../../mcp-hub/src/index.ts", "../src/services/system-tray.ts", "../src/services/native-menu.ts", "../src/services/auto-updater.ts", "../src/services/notification-service.ts", "../src/services/crash-reporter.ts", "../src/services/protocol-handler.ts", "../src/main.ts"],
  "sourcesContent": ["import { BrowserWindow, screen, app } from 'electron';\r\nimport path from 'path';\r\n\r\nexport function createWindow(): BrowserWindow {\r\n  // Get display information\r\n  const { width, height } = screen.getPrimaryDisplay().workAreaSize;\r\n  \r\n  // Calculate optimal window size\r\n  const windowWidth = Math.min(1400, Math.floor(width * 0.9));\r\n  const windowHeight = Math.min(900, Math.floor(height * 0.9));\r\n  \r\n  // Create the browser window\r\n  const window = new BrowserWindow({\r\n    width: windowWidth,\r\n    height: windowHeight,\r\n    minWidth: 1024,\r\n    minHeight: 768,\r\n    center: true,\r\n    \r\n    // Window appearance\r\n    titleBarStyle: 'hidden', // Use hidden for all platforms to show custom frame\r\n    frame: false, // Hide default window frame\r\n    transparent: false,\r\n    backgroundColor: '#1a1a1a', // Dark theme background\r\n    vibrancy: process.platform === 'darwin' ? 'under-window' : undefined,\r\n    \r\n    // Security settings\r\n    webPreferences: {\r\n      nodeIntegration: false,           // Disable node integration in renderer\r\n      contextIsolation: true,           // Enable context isolation\r\n      sandbox: false,                   // Disable sandbox for better performance\r\n      preload: path.join(__dirname, 'preload.js'),\r\n      webSecurity: true,                // Enable web security\r\n      allowRunningInsecureContent: false,\r\n      experimentalFeatures: false,\r\n      \r\n      // Additional security\r\n      enableRemoteModule: false,\r\n      worldSafeExecuteJavaScript: true,\r\n      disableBlinkFeatures: 'Auxclick',\r\n    },\r\n    \r\n    // Performance settings\r\n    show: true, // Show immediately for debugging\r\n    paintWhenInitiallyHidden: false,\r\n    backgroundThrottling: false, // Keep app responsive when in background\r\n    \r\n    // Window behavior\r\n    autoHideMenuBar: false, // Keep menu bar visible for IDE functionality\r\n    fullscreenable: true,\r\n    maximizable: true,\r\n    minimizable: true,\r\n    resizable: true,\r\n    \r\n    // Icon (will be added later)\r\n    // icon: path.join(__dirname, '../assets/icon.png'),\r\n    \r\n    // Development\r\n    ...(process.env.NODE_ENV === 'development' && {\r\n      webPreferences: {\r\n        ...BrowserWindow.prototype.webPreferences,\r\n        devTools: true,\r\n      }\r\n    })\r\n  });\r\n\r\n  // Window event handlers\r\n  window.once('ready-to-show', () => {\r\n    console.log('\uD83E\uDE9F Window ready to show');\r\n    window.show();\r\n    \r\n    // Focus the window\r\n    if (process.env.NODE_ENV === 'development') {\r\n      window.focus();\r\n    }\r\n  });\r\n\r\n  // Handle window closed\r\n  window.on('closed', () => {\r\n    console.log('\uD83E\uDE9F Window closed');\r\n  });\r\n\r\n  // Handle window state changes\r\n  window.on('maximize', () => {\r\n    console.log('\uD83E\uDE9F Window maximized');\r\n  });\r\n\r\n  window.on('unmaximize', () => {\r\n    console.log('\uD83E\uDE9F Window unmaximized');\r\n  });\r\n\r\n  window.on('minimize', () => {\r\n    console.log('\uD83E\uDE9F Window minimized');\r\n  });\r\n\r\n  window.on('restore', () => {\r\n    console.log('\uD83E\uDE9F Window restored');\r\n  });\r\n\r\n  // Handle window focus\r\n  window.on('focus', () => {\r\n    // Window gained focus\r\n  });\r\n\r\n  window.on('blur', () => {\r\n    // Window lost focus\r\n  });\r\n\r\n  // Prevent navigation to external URLs\r\n  window.webContents.on('will-navigate', (event: any, navigationUrl: string) => {\r\n    const parsedUrl = new URL(navigationUrl);\r\n    \r\n    // Allow localhost navigation for development\r\n    if (parsedUrl.protocol === 'http:' && parsedUrl.hostname === 'localhost') {\r\n      return; // Allow localhost development server\r\n    }\r\n    \r\n    // Allow file protocol for loading local app files\r\n    if (parsedUrl.protocol === 'file:') {\r\n      // Only allow navigation to files within our app directory\r\n      const projectRoot = path.resolve(__dirname, '../../../');\r\n      const normalizedNavUrl = path.normalize(navigationUrl.replace('file:///', '').replace(/\\//g, path.sep));\r\n      const normalizedProjectRoot = path.normalize(projectRoot);\r\n      \r\n      if (normalizedNavUrl.startsWith(normalizedProjectRoot)) {\r\n        return; // Allow navigation to files within project\r\n      }\r\n    }\r\n    \r\n    // Block all other navigation attempts\r\n    console.warn('\uD83D\uDEAB Blocked navigation to external URL:', navigationUrl);\r\n    event.preventDefault();\r\n  });\r\n\r\n  // Prevent new window creation\r\n  window.webContents.setWindowOpenHandler(({ url }: { url: string }) => {\r\n    console.warn('\uD83D\uDEAB Blocked attempt to open new window:', url);\r\n    return { action: 'deny' };\r\n  });\r\n\r\n  // Handle console messages from renderer\r\n  window.webContents.on('console-message', (event: any, level: string, message: string, line: number, sourceId: string) => {\r\n    if (process.env.NODE_ENV === 'development') {\r\n      console.log(`Renderer [${level}]:`, message);\r\n    }\r\n  });\r\n\r\n  // Handle crashes\r\n  window.webContents.on('crashed', (event: any, killed: boolean) => {\r\n    console.error('\uD83D\uDCA5 Renderer process crashed:', { killed });\r\n    \r\n    // Optionally reload the window\r\n    if (!killed) {\r\n      window.reload();\r\n    }\r\n  });\r\n\r\n  // Handle unresponsive renderer\r\n  window.webContents.on('unresponsive', () => {\r\n    console.warn('\u26A0\uFE0F Renderer process became unresponsive');\r\n  });\r\n\r\n  window.webContents.on('responsive', () => {\r\n    console.log('\u2705 Renderer process became responsive again');\r\n  });\r\n\r\n  // Save window state for restoration\r\n  window.on('resize', () => {\r\n    saveWindowState(window);\r\n  });\r\n\r\n  window.on('move', () => {\r\n    saveWindowState(window);\r\n  });\r\n\r\n  // Restore previous window state if available\r\n  restoreWindowState(window);\r\n\r\n  return window;\r\n}\r\n\r\n// Helper functions for window state management\r\nfunction saveWindowState(window: BrowserWindow): void {\r\n  try {\r\n    const bounds = window.getBounds();\r\n    const state = {\r\n      x: bounds.x,\r\n      y: bounds.y,\r\n      width: bounds.width,\r\n      height: bounds.height,\r\n      isMaximized: window.isMaximized(),\r\n      isFullScreen: window.isFullScreen(),\r\n    };\r\n    \r\n    // Save to user data (will be implemented with proper storage later)\r\n    // For now, just store in memory\r\n    (global as any).windowState = state;\r\n  } catch (error) {\r\n    console.error('Failed to save window state:', error);\r\n  }\r\n}\r\n\r\nfunction restoreWindowState(window: BrowserWindow): void {\r\n  try {\r\n    const state = (global as any).windowState;\r\n    if (state) {\r\n      // Validate state bounds are within current screen\r\n      const { workArea } = screen.getPrimaryDisplay();\r\n      \r\n      if (state.x >= workArea.x && state.x < workArea.x + workArea.width &&\r\n          state.y >= workArea.y && state.y < workArea.y + workArea.height) {\r\n        window.setBounds({\r\n          x: state.x,\r\n          y: state.y,\r\n          width: Math.min(state.width, workArea.width),\r\n          height: Math.min(state.height, workArea.height)\r\n        });\r\n      }\r\n      \r\n      if (state.isMaximized) {\r\n        window.maximize();\r\n      }\r\n      \r\n      if (state.isFullScreen) {\r\n        window.setFullScreen(true);\r\n      }\r\n    }\r\n  } catch (error) {\r\n    console.error('Failed to restore window state:', error);\r\n  }\r\n} ", "import { sqliteTable, text, integer, blob, real } from 'drizzle-orm/sqlite-core';\r\nimport { relations } from 'drizzle-orm';\r\n\r\n// Projects table for workspace management\r\nexport const projects = sqliteTable('projects', {\r\n  id: text('id').primaryKey(),\r\n  name: text('name').notNull(),\r\n  path: text('path').notNull(),\r\n  description: text('description'),\r\n  language: text('language'), // Primary programming language\r\n  framework: text('framework'), // Framework or platform\r\n  created: integer('created', { mode: 'timestamp' }).notNull(),\r\n  updated: integer('updated', { mode: 'timestamp' }).notNull(),\r\n  lastOpened: integer('last_opened', { mode: 'timestamp' }),\r\n  isActive: integer('is_active', { mode: 'boolean' }).default(true),\r\n  settings: blob('settings', { mode: 'json' }) // Project-specific settings\r\n});\r\n\r\n// Enhanced chat system with CRUD operations\r\nexport const chatSessions = sqliteTable('chat_sessions', {\r\n  id: text('id').primaryKey(),\r\n  projectId: text('project_id').references(() => projects.id),\r\n  title: text('title').notNull(),\r\n  description: text('description'),\r\n  created: integer('created', { mode: 'timestamp' }).notNull(),\r\n  updated: integer('updated', { mode: 'timestamp' }).notNull(),\r\n  isArchived: integer('is_archived', { mode: 'boolean' }).default(false),\r\n  isFavorite: integer('is_favorite', { mode: 'boolean' }).default(false),\r\n  messageCount: integer('message_count').default(0),\r\n  tags: blob('tags', { mode: 'json' }),\r\n  subjectMode: text('subject_mode').default('general'), // mathematics, programming, etc.\r\n  modelUsed: text('model_used'), // Which LLM model was primarily used\r\n  totalTokens: integer('total_tokens').default(0),\r\n  executionTime: integer('execution_time_ms').default(0)\r\n});\r\n\r\nexport const chatHistory = sqliteTable('chat_history', {\r\n  id: text('id').primaryKey(),\r\n  sessionId: text('session_id').references(() => chatSessions.id, { onDelete: 'cascade' }),\r\n  role: text('role').notNull(), // 'user' | 'assistant' | 'system' | 'tool'\r\n  content: text('content').notNull(),\r\n  metadata: blob('metadata', { mode: 'json' }),\r\n  timestamp: integer('timestamp', { mode: 'timestamp' }).notNull(),\r\n  parentMessageId: text('parent_message_id'),\r\n  toolsUsed: blob('tools_used', { mode: 'json' }),\r\n  executionTime: integer('execution_time_ms'),\r\n  tokenCount: integer('token_count'),\r\n  model: text('model'), // Which model generated this message\r\n  temperature: real('temperature'), // Model parameters used\r\n  complexity: text('complexity'), // atomic | moderate | complex | expert\r\n  qualityScore: real('quality_score') // Quality assessment score\r\n});\r\n\r\n// Context management system for intelligent context handling\r\nexport const contextEntries = sqliteTable('context_entries', {\r\n  id: text('id').primaryKey(),\r\n  sessionId: text('session_id').references(() => chatSessions.id, { onDelete: 'cascade' }),\r\n  type: text('type').notNull(), // 'file', 'function', 'concept', 'memory', 'error', 'solution'\r\n  key: text('key').notNull(),\r\n  value: text('value').notNull(),\r\n  vectorEmbedding: blob('vector_embedding'), // For semantic search\r\n  importance: real('importance').default(1.0),\r\n  lastUsed: integer('last_used', { mode: 'timestamp' }).notNull(),\r\n  created: integer('created', { mode: 'timestamp' }).notNull(),\r\n  source: text('source'), // Where this context came from\r\n  expiry: integer('expiry', { mode: 'timestamp' }), // When to auto-remove\r\n  compressed: integer('compressed', { mode: 'boolean' }).default(false)\r\n});\r\n\r\n// Workflow system for saving and reusing chat patterns\r\nexport const workflows = sqliteTable('workflows', {\r\n  id: text('id').primaryKey(),\r\n  name: text('name').notNull(),\r\n  description: text('description'),\r\n  category: text('category').notNull(), // 'project-management', 'code-generation', etc.\r\n  definition: blob('definition', { mode: 'json' }).notNull(), // LangChain workflow definition\r\n  variables: blob('variables', { mode: 'json' }).notNull(), // Required/optional variables\r\n  metadata: blob('metadata', { mode: 'json' }).notNull(), // Additional metadata\r\n  isActive: integer('is_active', { mode: 'boolean' }).default(true),\r\n  isPublic: integer('is_public', { mode: 'boolean' }).default(false),\r\n  created: integer('created', { mode: 'timestamp' }).notNull(),\r\n  updated: integer('updated', { mode: 'timestamp' }).notNull(),\r\n  createdBy: text('created_by'), // User/source identification\r\n  version: text('version').default('1.0.0'),\r\n  tags: blob('tags', { mode: 'json' }),\r\n  estimatedTime: integer('estimated_time_ms'), // Expected execution time\r\n  successRate: real('success_rate'), // Historical success rate\r\n  usageCount: integer('usage_count').default(0)\r\n});\r\n\r\nexport const workflowExecutions = sqliteTable('workflow_executions', {\r\n  id: text('id').primaryKey(),\r\n  workflowId: text('workflow_id').references(() => workflows.id, { onDelete: 'cascade' }),\r\n  sessionId: text('session_id').references(() => chatSessions.id),\r\n  parameters: blob('parameters', { mode: 'json' }).notNull(),\r\n  status: text('status').notNull(), // 'pending' | 'running' | 'completed' | 'failed' | 'cancelled'\r\n  result: blob('result', { mode: 'json' }),\r\n  errorMessage: text('error_message'),\r\n  errorStack: text('error_stack'),\r\n  started: integer('started', { mode: 'timestamp' }).notNull(),\r\n  completed: integer('completed', { mode: 'timestamp' }),\r\n  executionTimeMs: integer('execution_time_ms'),\r\n  stepsCompleted: integer('steps_completed').default(0),\r\n  totalSteps: integer('total_steps'),\r\n  progress: real('progress').default(0.0) // 0.0 to 1.0\r\n});\r\n\r\n// MCP server management for external tool integration\r\nexport const mcpServers = sqliteTable('mcp_servers', {\r\n  id: text('id').primaryKey(),\r\n  name: text('name').notNull(),\r\n  description: text('description'),\r\n  transport: text('transport').notNull(), // 'stdio' | 'sse' | 'websocket'\r\n  config: blob('config', { mode: 'json' }).notNull(),\r\n  status: text('status').notNull(), // 'connected' | 'disconnected' | 'error' | 'unknown'\r\n  created: integer('created', { mode: 'timestamp' }).notNull(),\r\n  updated: integer('updated', { mode: 'timestamp' }).notNull(),\r\n  lastConnected: integer('last_connected', { mode: 'timestamp' }),\r\n  lastError: text('last_error'),\r\n  isAutoRestart: integer('is_auto_restart', { mode: 'boolean' }).default(true),\r\n  restartCount: integer('restart_count').default(0),\r\n  version: text('version'),\r\n  capabilities: blob('capabilities', { mode: 'json' }),\r\n  healthScore: real('health_score').default(1.0), // 0.0 to 1.0\r\n  responseTime: integer('response_time_ms'), // Average response time\r\n  uptime: integer('uptime_seconds').default(0)\r\n});\r\n\r\n// Model configurations and performance tracking\r\nexport const modelConfigurations = sqliteTable('model_configurations', {\r\n  id: text('id').primaryKey(),\r\n  modelName: text('model_name').notNull(),\r\n  displayName: text('display_name'),\r\n  parameters: blob('parameters', { mode: 'json' }).notNull(),\r\n  performance: blob('performance', { mode: 'json' }),\r\n  isDefault: integer('is_default', { mode: 'boolean' }).default(false),\r\n  isInstalled: integer('is_installed', { mode: 'boolean' }).default(false),\r\n  created: integer('created', { mode: 'timestamp' }).notNull(),\r\n  lastUsed: integer('last_used', { mode: 'timestamp' }),\r\n  usageCount: integer('usage_count').default(0),\r\n  averageTokensPerSecond: real('avg_tokens_per_second'),\r\n  averageResponseTime: integer('avg_response_time_ms'),\r\n  memoryUsage: integer('memory_usage_mb'),\r\n  diskSize: integer('disk_size_mb'),\r\n  downloadProgress: real('download_progress').default(0.0), // 0.0 to 1.0\r\n  lastBenchmark: integer('last_benchmark', { mode: 'timestamp' })\r\n});\r\n\r\n// Subject-specific tool configurations and modes\r\nexport const subjectModes = sqliteTable('subject_modes', {\r\n  id: text('id').primaryKey(),\r\n  name: text('name').notNull(),\r\n  displayName: text('display_name').notNull(),\r\n  description: text('description'),\r\n  icon: text('icon'), // Emoji or icon identifier\r\n  tools: blob('tools', { mode: 'json' }).notNull(), // Available tools in this mode\r\n  prompts: blob('prompts', { mode: 'json' }), // Mode-specific prompts\r\n  systemPrompt: text('system_prompt'), // Default system prompt for this mode\r\n  isActive: integer('is_active', { mode: 'boolean' }).default(true),\r\n  isBuiltIn: integer('is_built_in', { mode: 'boolean' }).default(false),\r\n  created: integer('created', { mode: 'timestamp' }).notNull(),\r\n  updated: integer('updated', { mode: 'timestamp' }).notNull(),\r\n  usageCount: integer('usage_count').default(0),\r\n  color: text('color'), // Theme color for UI\r\n  shortcuts: blob('shortcuts', { mode: 'json' }) // Keyboard shortcuts\r\n});\r\n\r\n// System settings and user preferences\r\nexport const settings = sqliteTable('settings', {\r\n  key: text('key').primaryKey(),\r\n  value: blob('value', { mode: 'json' }).notNull(),\r\n  category: text('category'), // 'ui', 'performance', 'models', etc.\r\n  description: text('description'),\r\n  isUserConfigurable: integer('is_user_configurable', { mode: 'boolean' }).default(true),\r\n  updated: integer('updated', { mode: 'timestamp' }).notNull()\r\n});\r\n\r\n// Performance and analytics tracking\r\nexport const analytics = sqliteTable('analytics', {\r\n  id: text('id').primaryKey(),\r\n  event: text('event').notNull(), // Event type\r\n  data: blob('data', { mode: 'json' }),\r\n  timestamp: integer('timestamp', { mode: 'timestamp' }).notNull(),\r\n  sessionId: text('session_id'),\r\n  modelUsed: text('model_used'),\r\n  executionTime: integer('execution_time_ms'),\r\n  memoryUsage: integer('memory_usage_mb'),\r\n  cpuUsage: real('cpu_usage_percent'),\r\n  success: integer('success', { mode: 'boolean' })\r\n});\r\n\r\n// Define relationships\r\nexport const projectsRelations = relations(projects, ({ many }) => ({\r\n  chatSessions: many(chatSessions)\r\n}));\r\n\r\nexport const chatSessionsRelations = relations(chatSessions, ({ one, many }) => ({\r\n  project: one(projects, {\r\n    fields: [chatSessions.projectId],\r\n    references: [projects.id]\r\n  }),\r\n  messages: many(chatHistory),\r\n  contextEntries: many(contextEntries),\r\n  workflowExecutions: many(workflowExecutions)\r\n}));\r\n\r\nexport const chatHistoryRelations = relations(chatHistory, ({ one }) => ({\r\n  session: one(chatSessions, {\r\n    fields: [chatHistory.sessionId],\r\n    references: [chatSessions.id]\r\n  })\r\n}));\r\n\r\nexport const workflowsRelations = relations(workflows, ({ many }) => ({\r\n  executions: many(workflowExecutions)\r\n}));\r\n\r\nexport const workflowExecutionsRelations = relations(workflowExecutions, ({ one }) => ({\r\n  workflow: one(workflows, {\r\n    fields: [workflowExecutions.workflowId],\r\n    references: [workflows.id]\r\n  }),\r\n  session: one(chatSessions, {\r\n    fields: [workflowExecutions.sessionId],\r\n    references: [chatSessions.id]\r\n  })\r\n}));\r\n\r\n// Type exports for use in application\r\nexport type Project = typeof projects.$inferSelect;\r\nexport type NewProject = typeof projects.$inferInsert;\r\nexport type ChatSession = typeof chatSessions.$inferSelect;\r\nexport type NewChatSession = typeof chatSessions.$inferInsert;\r\nexport type ChatMessage = typeof chatHistory.$inferSelect;\r\nexport type NewChatMessage = typeof chatHistory.$inferInsert;\r\nexport type ContextEntry = typeof contextEntries.$inferSelect;\r\nexport type NewContextEntry = typeof contextEntries.$inferInsert;\r\nexport type Workflow = typeof workflows.$inferSelect;\r\nexport type NewWorkflow = typeof workflows.$inferInsert;\r\nexport type WorkflowExecution = typeof workflowExecutions.$inferSelect;\r\nexport type NewWorkflowExecution = typeof workflowExecutions.$inferInsert;\r\nexport type MCPServer = typeof mcpServers.$inferSelect;\r\nexport type NewMCPServer = typeof mcpServers.$inferInsert;\r\nexport type ModelConfiguration = typeof modelConfigurations.$inferSelect;\r\nexport type NewModelConfiguration = typeof modelConfigurations.$inferInsert;\r\nexport type SubjectMode = typeof subjectModes.$inferSelect;\r\nexport type NewSubjectMode = typeof subjectModes.$inferInsert;\r\nexport type Setting = typeof settings.$inferSelect;\r\nexport type NewSetting = typeof settings.$inferInsert; ", "import crypto from 'crypto';\nconst rnds8Pool = new Uint8Array(256); // # of random values to pre-allocate\n\nlet poolPtr = rnds8Pool.length;\nexport default function rng() {\n  if (poolPtr > rnds8Pool.length - 16) {\n    crypto.randomFillSync(rnds8Pool);\n    poolPtr = 0;\n  }\n\n  return rnds8Pool.slice(poolPtr, poolPtr += 16);\n}", "import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nconst byteToHex = [];\n\nfor (let i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).slice(1));\n}\n\nexport function unsafeStringify(arr, offset = 0) {\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  return byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]];\n}\n\nfunction stringify(arr, offset = 0) {\n  const uuid = unsafeStringify(arr, offset); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;", "import crypto from 'crypto';\nexport default {\n  randomUUID: crypto.randomUUID\n};", "import native from './native.js';\nimport rng from './rng.js';\nimport { unsafeStringify } from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  if (native.randomUUID && !buf && !options) {\n    return native.randomUUID();\n  }\n\n  options = options || {};\n  const rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (let i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return unsafeStringify(rnds);\n}\n\nexport default v4;", "export { default as v1 } from './v1.js';\nexport { default as v3 } from './v3.js';\nexport { default as v4 } from './v4.js';\nexport { default as v5 } from './v5.js';\nexport { default as NIL } from './nil.js';\nexport { default as version } from './version.js';\nexport { default as validate } from './validate.js';\nexport { default as stringify } from './stringify.js';\nexport { default as parse } from './parse.js';", "import Database from 'better-sqlite3';\r\nimport { drizzle } from 'drizzle-orm/better-sqlite3';\r\nimport { migrate } from 'drizzle-orm/better-sqlite3/migrator';\r\nimport path from 'path';\r\nimport { app } from 'electron';\r\nimport * as schema from './schema';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nlet db: ReturnType<typeof drizzle>;\r\nlet sqlite: Database.Database;\r\n\r\nexport async function initializeDatabase(): Promise<void> {\r\n  try {\r\n    // Get database path in user data directory\r\n    const userDataPath = app.getPath('userData');\r\n    const dbPath = path.join(userDataPath, 'tanukimcp.db');\r\n    \r\n    console.log(`\uD83D\uDCCA Database path: ${dbPath}`);\r\n    \r\n    // Create SQLite connection\r\n    sqlite = new Database(dbPath);\r\n    \r\n    // Configure SQLite for optimal performance\r\n    configureDatabase(sqlite);\r\n    \r\n    // Create Drizzle instance\r\n    db = drizzle(sqlite, { schema });\r\n    \r\n    // Run migrations\r\n    console.log('\uD83D\uDD04 Running database migrations...');\r\n    await runMigrations();\r\n    \r\n    // Initialize default data\r\n    await initializeDefaultData();\r\n    \r\n    console.log('\u2705 Database initialized successfully');\r\n  } catch (error) {\r\n    console.error('\u274C Failed to initialize database:', error);\r\n    throw error;\r\n  }\r\n}\r\n\r\nfunction configureDatabase(sqlite: Database.Database): void {\r\n  // Enable WAL mode for better concurrency\r\n  sqlite.pragma('journal_mode = WAL');\r\n  \r\n  // Set synchronous mode for better performance while maintaining safety\r\n  sqlite.pragma('synchronous = NORMAL');\r\n  \r\n  // Increase cache size (1000 pages = ~4MB for default page size)\r\n  sqlite.pragma('cache_size = 1000000');\r\n  \r\n  // Enable foreign key constraints\r\n  sqlite.pragma('foreign_keys = ON');\r\n  \r\n  // Store temporary tables in memory for better performance\r\n  sqlite.pragma('temp_store = MEMORY');\r\n  \r\n  // Set busy timeout for concurrent access\r\n  sqlite.pragma('busy_timeout = 5000');\r\n  \r\n  // Optimize for performance\r\n  sqlite.pragma('optimize');\r\n  \r\n  console.log('\u2699\uFE0F Database configured with performance optimizations');\r\n}\r\n\r\nasync function runMigrations(): Promise<void> {\r\n  try {\r\n    // For now, we'll create the migrations directory structure\r\n    // In a real setup, we'd use drizzle-kit to generate migrations\r\n    const migrationsFolder = path.join(__dirname, '../../../drizzle');\r\n    \r\n    // Create basic tables if they don't exist (manual migration for Phase 1)\r\n    await createTablesIfNotExist();\r\n    \r\n    console.log('\u2705 Migrations completed');\r\n  } catch (error) {\r\n    console.error('\u274C Migration failed:', error);\r\n    throw error;\r\n  }\r\n}\r\n\r\nasync function createTablesIfNotExist(): Promise<void> {\r\n  // This is a simplified migration approach for Phase 1\r\n  // In later phases, we'll use proper Drizzle migrations\r\n  \r\n  const tables = [\r\n    `CREATE TABLE IF NOT EXISTS projects (\r\n      id TEXT PRIMARY KEY,\r\n      name TEXT NOT NULL,\r\n      path TEXT NOT NULL,\r\n      description TEXT,\r\n      language TEXT,\r\n      framework TEXT,\r\n      created INTEGER NOT NULL,\r\n      updated INTEGER NOT NULL,\r\n      last_opened INTEGER,\r\n      is_active INTEGER DEFAULT 1,\r\n      settings TEXT\r\n    )`,\r\n    \r\n    `CREATE TABLE IF NOT EXISTS chat_sessions (\r\n      id TEXT PRIMARY KEY,\r\n      project_id TEXT REFERENCES projects(id),\r\n      title TEXT NOT NULL,\r\n      description TEXT,\r\n      created INTEGER NOT NULL,\r\n      updated INTEGER NOT NULL,\r\n      is_archived INTEGER DEFAULT 0,\r\n      is_favorite INTEGER DEFAULT 0,\r\n      message_count INTEGER DEFAULT 0,\r\n      tags TEXT,\r\n      subject_mode TEXT DEFAULT 'general',\r\n      model_used TEXT,\r\n      total_tokens INTEGER DEFAULT 0,\r\n      execution_time_ms INTEGER DEFAULT 0\r\n    )`,\r\n    \r\n    `CREATE TABLE IF NOT EXISTS chat_history (\r\n      id TEXT PRIMARY KEY,\r\n      session_id TEXT REFERENCES chat_sessions(id) ON DELETE CASCADE,\r\n      role TEXT NOT NULL,\r\n      content TEXT NOT NULL,\r\n      metadata TEXT,\r\n      timestamp INTEGER NOT NULL,\r\n      parent_message_id TEXT,\r\n      tools_used TEXT,\r\n      execution_time_ms INTEGER,\r\n      token_count INTEGER,\r\n      model TEXT,\r\n      temperature REAL,\r\n      complexity TEXT,\r\n      quality_score REAL\r\n    )`,\r\n    \r\n    `CREATE TABLE IF NOT EXISTS settings (\r\n      key TEXT PRIMARY KEY,\r\n      value TEXT NOT NULL,\r\n      category TEXT,\r\n      description TEXT,\r\n      is_user_configurable INTEGER DEFAULT 1,\r\n      updated INTEGER NOT NULL\r\n    )`\r\n  ];\r\n  \r\n  for (const tableSQL of tables) {\r\n    sqlite.exec(tableSQL);\r\n  }\r\n  \r\n  // Create indices for better performance\r\n  const indices = [\r\n    'CREATE INDEX IF NOT EXISTS idx_chat_sessions_project_id ON chat_sessions(project_id)',\r\n    'CREATE INDEX IF NOT EXISTS idx_chat_sessions_created ON chat_sessions(created)',\r\n    'CREATE INDEX IF NOT EXISTS idx_chat_history_session_id ON chat_history(session_id)',\r\n    'CREATE INDEX IF NOT EXISTS idx_chat_history_timestamp ON chat_history(timestamp)',\r\n    'CREATE INDEX IF NOT EXISTS idx_settings_category ON settings(category)'\r\n  ];\r\n  \r\n  for (const indexSQL of indices) {\r\n    sqlite.exec(indexSQL);\r\n  }\r\n}\r\n\r\nasync function initializeDefaultData(): Promise<void> {\r\n  try {\r\n    // Check if we have any existing data\r\n    const settingsCount = sqlite.prepare('SELECT COUNT(*) as count FROM settings').get() as { count: number };\r\n    \r\n    if (settingsCount.count === 0) {\r\n      console.log('\uD83D\uDD27 Initializing default settings...');\r\n      \r\n      const defaultSettings = [\r\n        {\r\n          key: 'app.theme',\r\n          value: JSON.stringify('dark'),\r\n          category: 'ui',\r\n          description: 'Application theme (light/dark)',\r\n          updated: Date.now()\r\n        },\r\n        {\r\n          key: 'app.version',\r\n          value: JSON.stringify('1.0.0'),\r\n          category: 'system',\r\n          description: 'Application version',\r\n          updated: Date.now()\r\n        },\r\n        {\r\n          key: 'models.default',\r\n          value: JSON.stringify(''),\r\n          category: 'models',\r\n          description: 'Default LLM model',\r\n          updated: Date.now()\r\n        },\r\n        {\r\n          key: 'performance.max_context_entries',\r\n          value: JSON.stringify(1000),\r\n          category: 'performance',\r\n          description: 'Maximum context entries to maintain',\r\n          updated: Date.now()\r\n        },\r\n        {\r\n          key: 'ui.show_welcome',\r\n          value: JSON.stringify(true),\r\n          category: 'ui',\r\n          description: 'Show welcome screen on startup',\r\n          updated: Date.now()\r\n        }\r\n      ];\r\n      \r\n      const insertSetting = sqlite.prepare(`\r\n        INSERT INTO settings (key, value, category, description, updated)\r\n        VALUES (?, ?, ?, ?, ?)\r\n      `);\r\n      \r\n      for (const setting of defaultSettings) {\r\n        insertSetting.run(\r\n          setting.key,\r\n          setting.value,\r\n          setting.category,\r\n          setting.description,\r\n          setting.updated\r\n        );\r\n      }\r\n      \r\n      console.log('\u2705 Default settings initialized');\r\n    }\r\n    \r\n    // Initialize default subject modes\r\n    await initializeDefaultSubjectModes();\r\n    \r\n  } catch (error) {\r\n    console.error('\u274C Failed to initialize default data:', error);\r\n    throw error;\r\n  }\r\n}\r\n\r\nasync function initializeDefaultSubjectModes(): Promise<void> {\r\n  // Create subject_modes table if it doesn't exist\r\n  sqlite.exec(`\r\n    CREATE TABLE IF NOT EXISTS subject_modes (\r\n      id TEXT PRIMARY KEY,\r\n      name TEXT NOT NULL,\r\n      display_name TEXT NOT NULL,\r\n      description TEXT,\r\n      icon TEXT,\r\n      tools TEXT NOT NULL,\r\n      prompts TEXT,\r\n      system_prompt TEXT,\r\n      is_active INTEGER DEFAULT 1,\r\n      is_built_in INTEGER DEFAULT 0,\r\n      created INTEGER NOT NULL,\r\n      updated INTEGER NOT NULL,\r\n      usage_count INTEGER DEFAULT 0,\r\n      color TEXT,\r\n      shortcuts TEXT\r\n    )\r\n  `);\r\n  \r\n  // Check if subject modes already exist\r\n  const modesCount = sqlite.prepare('SELECT COUNT(*) as count FROM subject_modes').get() as { count: number };\r\n  \r\n  if (modesCount.count === 0) {\r\n    console.log('\uD83E\uDDE0 Initializing default subject modes...');\r\n    \r\n    const defaultModes = [\r\n      {\r\n        id: uuidv4(),\r\n        name: 'general',\r\n        displayName: 'General',\r\n        description: 'General purpose AI assistance',\r\n        icon: '\uD83D\uDCAC',\r\n        tools: JSON.stringify(['read_file', 'write_file', 'create_todolist']),\r\n        systemPrompt: 'You are a helpful AI assistant. Be concise, accurate, and helpful.',\r\n        isBuiltIn: 1,\r\n        color: '#6366f1'\r\n      },\r\n      {\r\n        id: uuidv4(),\r\n        name: 'programming',\r\n        displayName: 'Programming',\r\n        description: 'Code analysis, debugging, and development assistance',\r\n        icon: '\uD83D\uDCBB',\r\n        tools: JSON.stringify(['read_file', 'write_file', 'analyze_code', 'generate_tests']),\r\n        systemPrompt: 'You are an expert programmer. Focus on code quality, best practices, and clear explanations.',\r\n        isBuiltIn: 1,\r\n        color: '#10b981'\r\n      },\r\n      {\r\n        id: uuidv4(),\r\n        name: 'mathematics',\r\n        displayName: 'Mathematics',\r\n        description: 'Mathematical problem solving and analysis',\r\n        icon: '\uD83C\uDFAF',\r\n        tools: JSON.stringify(['solve_equation', 'plot_function', 'read_file', 'write_file']),\r\n        systemPrompt: 'You are a mathematics expert. Show step-by-step solutions and use mathematical notation when appropriate.',\r\n        isBuiltIn: 1,\r\n        color: '#f59e0b'\r\n      }\r\n    ];\r\n    \r\n    const insertMode = sqlite.prepare(`\r\n      INSERT INTO subject_modes (\r\n        id, name, display_name, description, icon, tools, system_prompt, \r\n        is_built_in, created, updated, color\r\n      ) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)\r\n    `);\r\n    \r\n    const now = Date.now();\r\n    for (const mode of defaultModes) {\r\n      insertMode.run(\r\n        mode.id,\r\n        mode.name,\r\n        mode.displayName,\r\n        mode.description,\r\n        mode.icon,\r\n        mode.tools,\r\n        mode.systemPrompt,\r\n        mode.isBuiltIn,\r\n        now,\r\n        now,\r\n        mode.color\r\n      );\r\n    }\r\n    \r\n    console.log('\u2705 Default subject modes initialized');\r\n  }\r\n}\r\n\r\nexport function getDatabase() {\r\n  if (!db) {\r\n    throw new Error('Database not initialized. Call initializeDatabase() first.');\r\n  }\r\n  return db;\r\n}\r\n\r\nexport function getRawDatabase(): Database.Database {\r\n  if (!sqlite) {\r\n    throw new Error('Database not initialized. Call initializeDatabase() first.');\r\n  }\r\n  return sqlite;\r\n}\r\n\r\n// Database health check\r\nexport function checkDatabaseHealth(): { isHealthy: boolean; details: any } {\r\n  try {\r\n    // Test basic database operations\r\n    const result = sqlite.prepare('SELECT 1 as test').get();\r\n    \r\n    // Get database size\r\n    const dbSize = sqlite.prepare(\"SELECT page_count * page_size as size FROM pragma_page_count(), pragma_page_size()\").get() as { size: number };\r\n    \r\n    // Get table count\r\n    const tableCount = sqlite.prepare(\"SELECT COUNT(*) as count FROM sqlite_master WHERE type='table'\").get() as { count: number };\r\n    \r\n    return {\r\n      isHealthy: true,\r\n      details: {\r\n        testQuery: result,\r\n        databaseSize: dbSize.size,\r\n        tableCount: tableCount.count,\r\n        walMode: sqlite.pragma('journal_mode', { simple: true }),\r\n        foreignKeys: sqlite.pragma('foreign_keys', { simple: true })\r\n      }\r\n    };\r\n  } catch (error) {\r\n    return {\r\n      isHealthy: false,\r\n      details: { error: error instanceof Error ? error.message : String(error) }\r\n    };\r\n  }\r\n}\r\n\r\n// Cleanup function for graceful shutdown\r\nexport function closeDatabase(): void {\r\n  if (sqlite) {\r\n    try {\r\n      sqlite.close();\r\n      console.log('\uD83D\uDCCA Database connection closed');\r\n    } catch (error) {\r\n      console.error('\u274C Error closing database:', error);\r\n    }\r\n  }\r\n}\r\n\r\n// Handle app shutdown\r\napp.on('before-quit', () => {\r\n  closeDatabase();\r\n}); ", "export enum RequestComplexity {\r\n  DIRECT_RESPONSE = 'DIRECT_RESPONSE',\r\n  ATOMIC = 'ATOMIC',\r\n  MODERATE = 'MODERATE',\r\n  COMPLEX = 'COMPLEX',\r\n  EXPERT = 'EXPERT',\r\n}\r\n\r\nexport interface LLMRequest {\r\n  id: string;\r\n  query: string;\r\n  userId: string;\r\n  timestamp: number;\r\n  metadata?: Record<string, any>;\r\n}\r\n\r\nexport interface LLMResponse {\r\n  requestId: string;\r\n  tierUsed: RequestComplexity;\r\n  content: string;\r\n  qualityScore?: number;\r\n  metrics?: Record<string, any>;\r\n  error?: string;\r\n}\r\n\r\nexport interface TierProcessor {\r\n  process(request: LLMRequest): Promise<LLMResponse>;\r\n}\r\n\r\nexport interface ComplexityAssessment {\r\n  complexity: RequestComplexity;\r\n  estimatedTimeMs: number;\r\n  reasoning: string;\r\n} ", "import { LLMRequest, ComplexityAssessment, RequestComplexity } from './types';\nimport { LLMService } from '../services/llm-service';\n\nexport class ComplexityAssessor {\n  private llmService: LLMService | null = null;\n  \n  constructor(llmService?: LLMService) {\n    this.llmService = llmService || null;\n  }\n\n  setLLMService(llmService: LLMService): void {\n    this.llmService = llmService;\n  }\n\n  async assess(request: LLMRequest): Promise<ComplexityAssessment> {\n    // If LLM service is not available, fall back to rule-based assessment\n    if (!this.llmService) {\n      return this.fallbackAssessment(request);\n    }\n\n    try {\n      // Use LLM to assess complexity\n      return await this.llmDrivenAssessment(request);\n    } catch (error) {\n      console.error('LLM-driven complexity assessment failed:', error);\n      // Fall back to rule-based assessment on error\n      return this.fallbackAssessment(request);\n    }\n  }\n\n  private async llmDrivenAssessment(request: LLMRequest): Promise<ComplexityAssessment> {\n    const prompt = this.buildComplexityAssessmentPrompt(request);\n    \n    const response = await this.llmService!.generate(prompt, {\n      temperature: 0.1, // Low temperature for more deterministic results\n      max_tokens: 500\n    });\n\n    return this.parseComplexityResponse(response);\n  }\n\n  private buildComplexityAssessmentPrompt(request: LLMRequest): string {\n    return `\nYou are an AI task complexity analyzer. Your job is to analyze user queries and determine their complexity level.\nPlease assess the complexity of the following query:\n\n\"${request.query}\"\n\nAnalyze the query and determine its complexity level based on these categories:\n1. DIRECT_RESPONSE: Simple acknowledgments, yes/no questions, or very basic informational queries.\n2. ATOMIC: Simple, straightforward tasks that can be completed in a single step or response.\n3. MODERATE: Tasks requiring multiple steps, basic reasoning, or integration of a few concepts.\n4. COMPLEX: Tasks requiring sophisticated reasoning, planning, or coordination between multiple components.\n5. EXPERT: Tasks demanding specialized knowledge, extensive planning, or complex problem-solving approaches.\n\nPlease respond in JSON format with the following structure:\n{\n  \"complexity\": \"COMPLEXITY_LEVEL\",\n  \"estimatedTimeMs\": ESTIMATED_TIME_IN_MS,\n  \"reasoning\": \"Brief explanation of your assessment\"\n}\n\nWhere:\n- COMPLEXITY_LEVEL is one of: DIRECT_RESPONSE, ATOMIC, MODERATE, COMPLEX, EXPERT\n- ESTIMATED_TIME_IN_MS is your estimate of processing time in milliseconds\n- reasoning explains your assessment rationale\n\nRespond with ONLY the JSON object, no other text.\n`;\n  }\n\n  private parseComplexityResponse(response: string): ComplexityAssessment {\n    try {\n      // Extract JSON from the response (in case the LLM includes other text)\n      const jsonMatch = response.match(/\\{[\\s\\S]*\\}/);\n      const jsonString = jsonMatch ? jsonMatch[0] : response;\n      \n      const result = JSON.parse(jsonString);\n      \n      // Validate the complexity level\n      if (!Object.values(RequestComplexity).includes(result.complexity as RequestComplexity)) {\n        throw new Error(`Invalid complexity level: ${result.complexity}`);\n      }\n      \n      // Validate and normalize estimated time\n      const estimatedTimeMs = typeof result.estimatedTimeMs === 'number' \n        ? result.estimatedTimeMs \n        : parseInt(result.estimatedTimeMs);\n      \n      if (isNaN(estimatedTimeMs)) {\n        throw new Error('Invalid estimatedTimeMs value');\n      }\n      \n      return {\n        complexity: result.complexity as RequestComplexity,\n        estimatedTimeMs,\n        reasoning: result.reasoning || 'No reasoning provided'\n      };\n    } catch (error) {\n      console.error('Failed to parse complexity assessment response:', error);\n      console.log('Raw response:', response);\n      \n      // Return a default assessment if parsing fails\n      return {\n        complexity: RequestComplexity.MODERATE,\n        estimatedTimeMs: 30000,\n        reasoning: 'Default assessment due to response parsing failure.'\n      };\n    }\n  }\n\n  // Fallback rule-based assessment when LLM is not available\n  private fallbackAssessment(request: LLMRequest): ComplexityAssessment {\n    const query = request.query.toLowerCase();\n\n    if (query.includes('thank you') || query.includes('yes') || query.includes('no')) {\n      return {\n        complexity: RequestComplexity.DIRECT_RESPONSE,\n        estimatedTimeMs: 2000,\n        reasoning: 'Simple acknowledgement or affirmative/negative.'\n      };\n    }\n\n    if (query.split(' ').length < 10 && !query.includes('clear-thought')) {\n      return {\n        complexity: RequestComplexity.ATOMIC,\n        estimatedTimeMs: 10000,\n        reasoning: 'Short query, likely a single step.'\n      };\n    }\n\n    if (query.includes('clear-thought') || query.includes('analyze') || query.includes('plan')) {\n      return {\n        complexity: RequestComplexity.COMPLEX,\n        estimatedTimeMs: 180000, // 3 minutes\n        reasoning: 'Query indicates need for advanced reasoning or clear-thought tools.'\n      };\n    }\n    \n    // Default to MODERATE for now\n    return {\n      complexity: RequestComplexity.MODERATE,\n      estimatedTimeMs: 30000,\n      reasoning: 'Defaulting to moderate complexity.'\n    };\n  }\n} ", "import { LLMRequest, LLMResponse, RequestComplexity, TierProcessor } from './types';\r\n\r\nexport class Tier1Processor implements TierProcessor {\r\n  async process(request: LLMRequest): Promise<LLMResponse> {\r\n    // Simple, direct response. E.g., canned responses or very simple LLM call.\r\n    let content = 'Acknowledged.';\r\n    if (request.query.toLowerCase().includes('thank you')) {\r\n        content = 'You are welcome!';\r\n    }\r\n    // Add more direct responses as needed\r\n\r\n    return {\r\n      requestId: request.id,\r\n      tierUsed: RequestComplexity.DIRECT_RESPONSE,\r\n      content,\r\n      metrics: { processingTimeMs: 50 + Math.random() * 100 }, // Simulate fast processing\r\n    };\r\n  }\r\n} ", "import { LLMRequest, LLMResponse, RequestComplexity, TierProcessor } from './types';\r\nimport { LLMService } from '../services/llm-service';\r\n\r\nexport class Tier2Processor implements TierProcessor {\r\n  private llmService: LLMService;\r\n\r\n  constructor(llmService: LLMService) {\r\n    this.llmService = llmService;\r\n  }\r\n\r\n  async process(request: LLMRequest): Promise<LLMResponse> {\r\n    const startTime = Date.now();\r\n    try {\r\n      // For Tier 2, we expect a relatively straightforward query\r\n      // Use the LLM service directly with optimized parameters for quick responses\r\n      const prompt = `You are a helpful AI assistant. Please provide a clear, concise response to the following query:\r\n\r\n${request.query}\r\n\r\nKeep your response focused and direct.`;\r\n\r\n      const content = await this.llmService.generate(prompt, {\r\n        temperature: 0.3, // Lower temperature for more focused responses\r\n        top_p: 0.8,\r\n        top_k: 30\r\n      });\r\n\r\n      const processingTime = Date.now() - startTime;\r\n\r\n      return {\r\n        requestId: request.id,\r\n        tierUsed: RequestComplexity.ATOMIC,\r\n        content,\r\n        qualityScore: 0.8, // Good quality for atomic responses\r\n        metrics: { \r\n          processingTimeMs: processingTime,\r\n          modelUsed: this.llmService.getCurrentModel(),\r\n          tokensEstimate: Math.ceil(content.length / 4) // Rough token estimate\r\n        }\r\n      };\r\n    } catch (error) {\r\n      const processingTime = Date.now() - startTime;\r\n      return {\r\n        requestId: request.id,\r\n        tierUsed: RequestComplexity.ATOMIC,\r\n        content: 'I apologize, but I encountered an error processing your request. Please try again.',\r\n        error: error instanceof Error ? error.message : 'Unknown error',\r\n        metrics: { \r\n          processingTimeMs: processingTime,\r\n          failed: true\r\n        }\r\n      };\r\n    }\r\n  }\r\n} ", "import { LLMRequest, LLMResponse, RequestComplexity, TierProcessor } from './types';\r\nimport { LLMService } from '../services/llm-service';\r\nimport { MCPToolCall } from '../services/mcp-client-adapter';\r\n\r\nexport class Tier3Processor implements TierProcessor {\r\n  private llmService: LLMService;\r\n\r\n  constructor(llmService: LLMService) {\r\n    this.llmService = llmService;\r\n  }\r\n\r\n  async process(request: LLMRequest): Promise<LLMResponse> {\r\n    const startTime = Date.now();\r\n    try {\r\n      // Tier 3 handles moderate complexity with clear-thought tools\r\n      const shouldUseSequentialThinking = this.shouldUseSequentialThinking(request.query);\r\n      const shouldUseMentalModel = this.shouldUseMentalModel(request.query);\r\n\r\n      let content = '';\r\n      let toolsUsed: string[] = [];\r\n\r\n      if (shouldUseSequentialThinking) {\r\n        const thinkingResult = await this.useSequentialThinking(request.query);\r\n        if (thinkingResult.success) {\r\n          content += `**Structured Analysis:**\\n${thinkingResult.content}\\n\\n`;\r\n          toolsUsed.push('sequential-thinking');\r\n        }\r\n      }\r\n\r\n      if (shouldUseMentalModel) {\r\n        const mentalModelResult = await this.useMentalModel(request.query);\r\n        if (mentalModelResult.success) {\r\n          content += `**Mental Model Analysis:**\\n${mentalModelResult.content}\\n\\n`;\r\n          toolsUsed.push('mental-model');\r\n        }\r\n      }\r\n\r\n      // Generate final response using LLM with context from tools\r\n      const finalPrompt = `You are an expert assistant. Based on the following analysis and the original query, provide a comprehensive response.\r\n\r\n${content ? `Previous Analysis:\\n${content}` : ''}\r\n\r\nOriginal Query: ${request.query}\r\n\r\nPlease provide a well-structured, thoughtful response that builds upon any analysis provided above.`;\r\n\r\n      const llmResponse = await this.llmService.generate(finalPrompt, {\r\n        temperature: 0.6,\r\n        top_p: 0.9,\r\n        top_k: 40\r\n      });\r\n\r\n      content += `**Final Response:**\\n${llmResponse}`;\r\n\r\n      const processingTime = Date.now() - startTime;\r\n\r\n      return {\r\n        requestId: request.id,\r\n        tierUsed: RequestComplexity.MODERATE,\r\n        content,\r\n        qualityScore: 0.85,\r\n        metrics: {\r\n          processingTimeMs: processingTime,\r\n          modelUsed: this.llmService.getCurrentModel(),\r\n          toolsUsed,\r\n          tokensEstimate: Math.ceil(content.length / 4)\r\n        }\r\n      };\r\n    } catch (error) {\r\n      const processingTime = Date.now() - startTime;\r\n      return {\r\n        requestId: request.id,\r\n        tierUsed: RequestComplexity.MODERATE,\r\n        content: 'I encountered an error while processing your request with enhanced reasoning tools. Let me provide a direct response instead.',\r\n        error: error instanceof Error ? error.message : 'Unknown error',\r\n        metrics: {\r\n          processingTimeMs: processingTime,\r\n          failed: true\r\n        }\r\n      };\r\n    }\r\n  }\r\n\r\n  private shouldUseSequentialThinking(query: string): boolean {\r\n    const indicators = [\r\n      'step by step', 'analyze', 'break down', 'process', 'methodology',\r\n      'approach', 'strategy', 'plan', 'solve', 'problem'\r\n    ];\r\n    const lowerQuery = query.toLowerCase();\r\n    return indicators.some(indicator => lowerQuery.includes(indicator));\r\n  }\r\n\r\n  private shouldUseMentalModel(query: string): boolean {\r\n    const indicators = [\r\n      'first principles', 'fundamental', 'root cause', 'why', 'principle',\r\n      'framework', 'model', 'theory', 'concept', 'understand'\r\n    ];\r\n    const lowerQuery = query.toLowerCase();\r\n    return indicators.some(indicator => lowerQuery.includes(indicator));\r\n  }\r\n\r\n  private async useSequentialThinking(query: string) {\r\n    const toolCall: MCPToolCall = {\r\n      name: 'sequentialthinking',\r\n      arguments: {\r\n        thought: `I need to analyze this query systematically: ${query}`,\r\n        thoughtNumber: 1,\r\n        totalThoughts: 3,\r\n        nextThoughtNeeded: true\r\n      }\r\n    };\r\n\r\n    return await this.llmService.executeMCPTool(toolCall);\r\n  }\r\n\r\n  private async useMentalModel(query: string) {\r\n    // Determine appropriate mental model based on query content\r\n    let modelName = 'first_principles';\r\n    \r\n    if (query.toLowerCase().includes('decision') || query.toLowerCase().includes('choose')) {\r\n      modelName = 'opportunity_cost';\r\n    } else if (query.toLowerCase().includes('simple') || query.toLowerCase().includes('complex')) {\r\n      modelName = 'occams_razor';\r\n    }\r\n\r\n    const toolCall: MCPToolCall = {\r\n      name: 'mentalmodel',\r\n      arguments: {\r\n        modelName,\r\n        problem: query\r\n      }\r\n    };\r\n\r\n    return await this.llmService.executeMCPTool(toolCall);\r\n  }\r\n} ", "import { LLMRequest, LLMResponse, RequestComplexity, TierProcessor } from './types';\r\nimport { LLMService } from '../services/llm-service';\r\nimport { MCPToolCall } from '../services/mcp-client-adapter';\r\n\r\nexport class Tier4Processor implements TierProcessor {\r\n  private llmService: LLMService;\r\n\r\n  constructor(llmService: LLMService) {\r\n    this.llmService = llmService;\r\n  }\r\n\r\n  async process(request: LLMRequest): Promise<LLMResponse> {\r\n    const startTime = Date.now();\r\n    try {\r\n      // Tier 4: Complex/Expert level processing with full clear-thought integration\r\n      const analysisResults = await this.performComprehensiveAnalysis(request.query);\r\n      \r\n      // Generate final expert response\r\n      const finalPrompt = this.buildExpertPrompt(request.query, analysisResults);\r\n      const expertResponse = await this.llmService.generate(finalPrompt, {\r\n        temperature: 0.7,\r\n        top_p: 0.95,\r\n        top_k: 50\r\n      });\r\n\r\n      const content = this.formatExpertResponse(analysisResults, expertResponse);\r\n      const processingTime = Date.now() - startTime;\r\n\r\n      return {\r\n        requestId: request.id,\r\n        tierUsed: request.query.toLowerCase().includes('expert') ? RequestComplexity.EXPERT : RequestComplexity.COMPLEX,\r\n        content,\r\n        qualityScore: 0.95,\r\n        metrics: {\r\n          processingTimeMs: processingTime,\r\n          modelUsed: this.llmService.getCurrentModel(),\r\n          toolsUsed: analysisResults.toolsUsed,\r\n          analysisDepth: 'comprehensive',\r\n          tokensEstimate: Math.ceil(content.length / 4)\r\n        }\r\n      };\r\n    } catch (error) {\r\n      const processingTime = Date.now() - startTime;\r\n      return {\r\n        requestId: request.id,\r\n        tierUsed: RequestComplexity.COMPLEX,\r\n        content: 'I encountered an error during comprehensive analysis. Let me provide a detailed response based on available information.',\r\n        error: error instanceof Error ? error.message : 'Unknown error',\r\n        metrics: {\r\n          processingTimeMs: processingTime,\r\n          failed: true\r\n        }\r\n      };\r\n    }\r\n  }\r\n\r\n  private async performComprehensiveAnalysis(query: string) {\r\n    const results = {\r\n      sequentialThinking: null as any,\r\n      mentalModel: null as any,\r\n      designPattern: null as any,\r\n      scientificMethod: null as any,\r\n      collaborativeReasoning: null as any,\r\n      toolsUsed: [] as string[]\r\n    };\r\n\r\n    // Sequential thinking for structured analysis\r\n    try {\r\n      const thinkingResult = await this.useSequentialThinking(query);\r\n      if (thinkingResult.success) {\r\n        results.sequentialThinking = thinkingResult;\r\n        results.toolsUsed.push('sequential-thinking');\r\n      }\r\n    } catch (error) {\r\n      console.warn('Sequential thinking failed:', error);\r\n    }\r\n\r\n    // Mental model analysis\r\n    try {\r\n      const mentalModelResult = await this.useMentalModel(query);\r\n      if (mentalModelResult.success) {\r\n        results.mentalModel = mentalModelResult;\r\n        results.toolsUsed.push('mental-model');\r\n      }\r\n    } catch (error) {\r\n      console.warn('Mental model analysis failed:', error);\r\n    }\r\n\r\n    // Design pattern analysis (if applicable)\r\n    if (this.isDesignRelated(query)) {\r\n      try {\r\n        const designResult = await this.useDesignPattern(query);\r\n        if (designResult.success) {\r\n          results.designPattern = designResult;\r\n          results.toolsUsed.push('design-pattern');\r\n        }\r\n      } catch (error) {\r\n        console.warn('Design pattern analysis failed:', error);\r\n      }\r\n    }\r\n\r\n    // Scientific method (for hypothesis-driven queries)\r\n    if (this.isScientificInquiry(query)) {\r\n      try {\r\n        const scientificResult = await this.useScientificMethod(query);\r\n        if (scientificResult.success) {\r\n          results.scientificMethod = scientificResult;\r\n          results.toolsUsed.push('scientific-method');\r\n        }\r\n      } catch (error) {\r\n        console.warn('Scientific method analysis failed:', error);\r\n      }\r\n    }\r\n\r\n    // Collaborative reasoning for complex problems\r\n    if (this.requiresMultiplePerspectives(query)) {\r\n      try {\r\n        const collaborativeResult = await this.useCollaborativeReasoning(query);\r\n        if (collaborativeResult.success) {\r\n          results.collaborativeReasoning = collaborativeResult;\r\n          results.toolsUsed.push('collaborative-reasoning');\r\n        }\r\n      } catch (error) {\r\n        console.warn('Collaborative reasoning failed:', error);\r\n      }\r\n    }\r\n\r\n    return results;\r\n  }\r\n\r\n  private buildExpertPrompt(query: string, analysisResults: any): string {\r\n    let prompt = `You are an expert AI assistant with access to comprehensive analytical tools. Based on the following multi-faceted analysis, provide an authoritative, well-structured response.\r\n\r\nOriginal Query: ${query}\r\n\r\n`;\r\n\r\n    if (analysisResults.sequentialThinking) {\r\n      prompt += `**Structured Analysis:**\r\n${analysisResults.sequentialThinking.content}\r\n\r\n`;\r\n    }\r\n\r\n    if (analysisResults.mentalModel) {\r\n      prompt += `**Mental Model Framework:**\r\n${analysisResults.mentalModel.content}\r\n\r\n`;\r\n    }\r\n\r\n    if (analysisResults.designPattern) {\r\n      prompt += `**Design Pattern Analysis:**\r\n${analysisResults.designPattern.content}\r\n\r\n`;\r\n    }\r\n\r\n    if (analysisResults.scientificMethod) {\r\n      prompt += `**Scientific Method Application:**\r\n${analysisResults.scientificMethod.content}\r\n\r\n`;\r\n    }\r\n\r\n    if (analysisResults.collaborativeReasoning) {\r\n      prompt += `**Multi-Perspective Analysis:**\r\n${analysisResults.collaborativeReasoning.content}\r\n\r\n`;\r\n    }\r\n\r\n    prompt += `Please synthesize all the above analyses into a comprehensive, expert-level response that addresses the original query with depth, nuance, and practical insights.`;\r\n\r\n    return prompt;\r\n  }\r\n\r\n  private formatExpertResponse(analysisResults: any, expertResponse: string): string {\r\n    let content = '# Expert Analysis\\n\\n';\r\n\r\n    if (analysisResults.toolsUsed.length > 0) {\r\n      content += `*Analysis conducted using: ${analysisResults.toolsUsed.join(', ')}*\\n\\n`;\r\n    }\r\n\r\n    content += expertResponse;\r\n\r\n    if (analysisResults.toolsUsed.length > 1) {\r\n      content += '\\n\\n---\\n\\n## Analytical Framework Summary\\n\\n';\r\n      \r\n      if (analysisResults.sequentialThinking) {\r\n        content += '**Structured Thinking:** Applied systematic reasoning process\\n';\r\n      }\r\n      if (analysisResults.mentalModel) {\r\n        content += '**Mental Models:** Leveraged cognitive frameworks for deeper understanding\\n';\r\n      }\r\n      if (analysisResults.designPattern) {\r\n        content += '**Design Patterns:** Applied proven architectural solutions\\n';\r\n      }\r\n      if (analysisResults.scientificMethod) {\r\n        content += '**Scientific Method:** Used hypothesis-driven analysis\\n';\r\n      }\r\n      if (analysisResults.collaborativeReasoning) {\r\n        content += '**Multi-Perspective Analysis:** Considered diverse viewpoints\\n';\r\n      }\r\n    }\r\n\r\n    return content;\r\n  }\r\n\r\n  private async useSequentialThinking(query: string) {\r\n    const toolCall: MCPToolCall = {\r\n      name: 'sequentialthinking',\r\n      arguments: {\r\n        thought: `I need to perform a comprehensive analysis of this complex query: ${query}`,\r\n        thoughtNumber: 1,\r\n        totalThoughts: 5,\r\n        nextThoughtNeeded: true\r\n      }\r\n    };\r\n\r\n    return await this.llmService.executeMCPTool(toolCall);\r\n  }\r\n\r\n  private async useMentalModel(query: string) {\r\n    // Select appropriate mental model based on query analysis\r\n    let modelName = 'first_principles';\r\n    \r\n    if (query.toLowerCase().includes('decision') || query.toLowerCase().includes('choose')) {\r\n      modelName = 'opportunity_cost';\r\n    } else if (query.toLowerCase().includes('error') || query.toLowerCase().includes('debug')) {\r\n      modelName = 'error_propagation';\r\n    } else if (query.toLowerCase().includes('priority') || query.toLowerCase().includes('important')) {\r\n      modelName = 'pareto_principle';\r\n    }\r\n\r\n    const toolCall: MCPToolCall = {\r\n      name: 'mentalmodel',\r\n      arguments: {\r\n        modelName,\r\n        problem: query\r\n      }\r\n    };\r\n\r\n    return await this.llmService.executeMCPTool(toolCall);\r\n  }\r\n\r\n  private async useDesignPattern(query: string) {\r\n    let patternName = 'modular_architecture';\r\n    \r\n    if (query.toLowerCase().includes('api') || query.toLowerCase().includes('integration')) {\r\n      patternName = 'api_integration';\r\n    } else if (query.toLowerCase().includes('state') || query.toLowerCase().includes('data')) {\r\n      patternName = 'state_management';\r\n    } else if (query.toLowerCase().includes('async') || query.toLowerCase().includes('concurrent')) {\r\n      patternName = 'async_processing';\r\n    } else if (query.toLowerCase().includes('scale') || query.toLowerCase().includes('performance')) {\r\n      patternName = 'scalability';\r\n    } else if (query.toLowerCase().includes('security') || query.toLowerCase().includes('auth')) {\r\n      patternName = 'security';\r\n    }\r\n\r\n    const toolCall: MCPToolCall = {\r\n      name: 'designpattern',\r\n      arguments: {\r\n        patternName,\r\n        context: query\r\n      }\r\n    };\r\n\r\n    return await this.llmService.executeMCPTool(toolCall);\r\n  }\r\n\r\n  private async useScientificMethod(query: string) {\r\n    const toolCall: MCPToolCall = {\r\n      name: 'scientificmethod',\r\n      arguments: {\r\n        stage: 'observation',\r\n        observation: query,\r\n        inquiryId: `inquiry_${Date.now()}`,\r\n        iteration: 0,\r\n        nextStageNeeded: true\r\n      }\r\n    };\r\n\r\n    return await this.llmService.executeMCPTool(toolCall);\r\n  }\r\n\r\n  private async useCollaborativeReasoning(query: string) {\r\n    const toolCall: MCPToolCall = {\r\n      name: 'collaborativereasoning',\r\n      arguments: {\r\n        topic: query,\r\n        personas: [\r\n          {\r\n            id: 'analyst',\r\n            name: 'Systems Analyst',\r\n            expertise: ['systems thinking', 'analysis', 'problem solving'],\r\n            background: 'Expert in breaking down complex problems',\r\n            perspective: 'Analytical and methodical',\r\n            biases: ['over-analysis'],\r\n            communication: { style: 'structured', tone: 'professional' }\r\n          },\r\n          {\r\n            id: 'creative',\r\n            name: 'Creative Strategist',\r\n            expertise: ['innovation', 'creative thinking', 'ideation'],\r\n            background: 'Specialist in novel approaches and solutions',\r\n            perspective: 'Creative and unconventional',\r\n            biases: ['novelty bias'],\r\n            communication: { style: 'inspirational', tone: 'enthusiastic' }\r\n          }\r\n        ],\r\n        contributions: [],\r\n        stage: 'problem-definition',\r\n        activePersonaId: 'analyst',\r\n        sessionId: `session_${Date.now()}`,\r\n        iteration: 0,\r\n        nextContributionNeeded: true\r\n      }\r\n    };\r\n\r\n    return await this.llmService.executeMCPTool(toolCall);\r\n  }\r\n\r\n  private isDesignRelated(query: string): boolean {\r\n    const designKeywords = [\r\n      'architecture', 'design', 'pattern', 'structure', 'system',\r\n      'api', 'interface', 'module', 'component', 'framework'\r\n    ];\r\n    const lowerQuery = query.toLowerCase();\r\n    return designKeywords.some(keyword => lowerQuery.includes(keyword));\r\n  }\r\n\r\n  private isScientificInquiry(query: string): boolean {\r\n    const scientificKeywords = [\r\n      'hypothesis', 'test', 'experiment', 'research', 'study',\r\n      'evidence', 'prove', 'validate', 'investigate', 'analyze'\r\n    ];\r\n    const lowerQuery = query.toLowerCase();\r\n    return scientificKeywords.some(keyword => lowerQuery.includes(keyword));\r\n  }\r\n\r\n  private requiresMultiplePerspectives(query: string): boolean {\r\n    const complexityIndicators = [\r\n      'complex', 'complicated', 'multifaceted', 'various', 'different',\r\n      'perspective', 'viewpoint', 'opinion', 'debate', 'controversial'\r\n    ];\r\n    const lowerQuery = query.toLowerCase();\r\n    return complexityIndicators.some(indicator => lowerQuery.includes(indicator)) || query.length > 200;\r\n  }\r\n} ", "import { LLMRequest, LLMResponse, RequestComplexity, TierProcessor } from './types';\nimport { ComplexityAssessor } from './complexityAssessor';\nimport { Tier1Processor } from './tier1Processor';\nimport { Tier2Processor } from './tier2Processor';\nimport { Tier3Processor } from './tier3Processor';\nimport { Tier4Processor } from './tier4Processor';\nimport { LLMService } from '../services/llm-service';\n\nexport class LLMRouter {\n  private complexityAssessor: ComplexityAssessor;\n  private tier1Processor: Tier1Processor;\n  private tier2Processor: Tier2Processor;\n  private tier3Processor: Tier3Processor;\n  private tier4Processor: Tier4Processor;\n  private llmService: LLMService;\n\n  constructor(llmService: LLMService) {\n    this.llmService = llmService;\n    this.complexityAssessor = new ComplexityAssessor(llmService);\n    this.tier1Processor = new Tier1Processor();\n    this.tier2Processor = new Tier2Processor(llmService);\n    this.tier3Processor = new Tier3Processor(llmService);\n    this.tier4Processor = new Tier4Processor(llmService);\n  }\n\n  async routeRequest(request: LLMRequest): Promise<LLMResponse> {\n    try {\n      // Assess complexity using LLM-driven assessment\n      const assessment = await this.complexityAssessor.assess(request);\n      \n      // Route to appropriate tier\n      const processor = this.getProcessor(assessment.complexity);\n      \n      // Process request\n      const response = await processor.process(request);\n      \n      // Add routing metadata\n      response.metrics = {\n        ...response.metrics,\n        complexityAssessment: assessment,\n        routingDecision: assessment.complexity,\n        estimatedTimeMs: assessment.estimatedTimeMs\n      };\n\n      return response;\n    } catch (error) {\n      // Fallback to basic response\n      return {\n        requestId: request.id,\n        tierUsed: RequestComplexity.ATOMIC,\n        content: 'I apologize, but I encountered an error processing your request. Please try again.',\n        error: error instanceof Error ? error.message : 'Unknown routing error',\n        metrics: {\n          failed: true,\n          routingError: true\n        }\n      };\n    }\n  }\n\n  private getProcessor(complexity: RequestComplexity): TierProcessor {\n    switch (complexity) {\n      case RequestComplexity.DIRECT_RESPONSE:\n        return this.tier1Processor;\n      case RequestComplexity.ATOMIC:\n        return this.tier2Processor;\n      case RequestComplexity.MODERATE:\n        return this.tier3Processor;\n      case RequestComplexity.COMPLEX:\n      case RequestComplexity.EXPERT:\n        return this.tier4Processor;\n      default:\n        return this.tier2Processor; // Default fallback\n    }\n  }\n\n  async getRouterStatus(): Promise<{\n    llmServiceStatus: { isHealthy: boolean; currentModel: string; availableModels: string[] };\n    mcpConnected: boolean;\n    availableTools: string[];\n  }> {\n    const llmServiceStatus = await this.llmService.getStatus();\n    const mcpConnected = this.llmService.isMCPConnected();\n    const availableTools = mcpConnected ? await this.llmService.getAvailableMCPTools() : [];\n    \n    return {\n      llmServiceStatus,\n      mcpConnected,\n      availableTools\n    };\n  }\n\n  async testComplexityAssessment(query: string) {\n    const request: LLMRequest = {\n      id: `test_${Date.now()}`,\n      query,\n      userId: 'test_user',\n      timestamp: Date.now()\n    };\n\n    const assessment = await this.complexityAssessor.assess(request);\n    return {\n      query,\n      assessment,\n      selectedTier: assessment.complexity,\n      processor: this.getProcessor(assessment.complexity).constructor.name\n    };\n  }\n} ", "import { MCPClientInterface, MCPToolCall, MCPToolResult } from './mcp-client-adapter';\n\nexport interface LLMServiceConfig {\n  defaultModel?: string;\n  baseUrl?: string;\n  timeout?: number;\n}\n\nexport interface ChatMessage {\n  role: 'user' | 'assistant' | 'system';\n  content: string;\n}\n\nexport interface GenerationOptions {\n  temperature?: number;\n  top_p?: number;\n  max_tokens?: number;\n}\n\nexport class LLMService {\n  private defaultModel: string;\n  private mcpClient: MCPClientInterface | null = null;\n  private isInitialized = false;\n  private openRouterService: any;\n\n  constructor(config: LLMServiceConfig = {}) {\n    this.defaultModel = config.defaultModel || 'meta-llama/llama-3.1-8b-instruct:free';\n  }\n\n  setOpenRouterService(service: any): void {\n    this.openRouterService = service;\n    console.log('OpenRouter service configured in LLMService');\n  }\n\n  async initialize(): Promise<void> {\n    // OpenRouter initialization placeholder\n    this.isInitialized = true;\n    console.log('LLM Service initialized with OpenRouter');\n  }\n\n  async chat(messages: ChatMessage[], options: GenerationOptions = {}): Promise<string> {\n    if (!this.openRouterService) {\n      throw new Error('OpenRouterService not configured');\n    }\n    // Use OpenRouter chat-like interface\n    const request = {\n      model: this.defaultModel,\n      messages,\n      temperature: options.temperature,\n      max_tokens: options.max_tokens,\n      stream: false\n    };\n    const response = await this.openRouterService.generate(request);\n    return response.content;\n  }\n\n  async generate(prompt: string, options: GenerationOptions = {}): Promise<string> {\n    if (!this.openRouterService) {\n      throw new Error('OpenRouterService not configured');\n    }\n    // Transform prompt to user message\n    const messages: ChatMessage[] = [{ role: 'user', content: prompt }];\n    const request = {\n      model: this.defaultModel,\n      messages,\n      temperature: options.temperature,\n      max_tokens: options.max_tokens,\n      stream: false\n    };\n    const response = await this.openRouterService.generate(request);\n    return response.content;\n  }\n\n  setMCPClient(client: MCPClientInterface): void {\n    this.mcpClient = client;\n  }\n\n  async getStatus(): Promise<{ isHealthy: boolean; currentModel: string; availableModels: string[] }> {\n    return {\n      isHealthy: this.openRouterService !== null,\n      currentModel: this.defaultModel,\n      availableModels: await this.getAvailableModels()\n    };\n  }\n\n  isHealthy(): boolean {\n    return this.openRouterService !== null;\n  }\n\n  getCurrentModel(): string {\n    return this.defaultModel;\n  }\n\n  async getAvailableModels(): Promise<string[]> {\n    if (!this.openRouterService) {\n      return [this.defaultModel];\n    }\n    \n    try {\n      const models = await this.openRouterService.getAvailableModels();\n      return models.map((m: any) => m.id || m);\n    } catch (error) {\n      console.error('Failed to get available models:', error);\n      return [this.defaultModel];\n    }\n  }\n\n  setModel(modelName: string): void {\n    this.defaultModel = modelName;\n  }\n\n  async executeMCPTool(toolCall: MCPToolCall): Promise<MCPToolResult> {\n    if (!this.mcpClient) {\n      return {\n        success: false,\n        error: 'MCP client not configured'\n      };\n    }\n\n    return await this.mcpClient.executeToolCall(toolCall);\n  }\n\n  isMCPConnected(): boolean {\n    return this.mcpClient?.isConnected() || false;\n  }\n\n  async getAvailableMCPTools(): Promise<string[]> {\n    if (!this.mcpClient) {\n      return [];\n    }\n    return await this.mcpClient.getAvailableTools();\n  }\n}\n\n// Singleton instance\nexport const llmService = new LLMService(); ", "export interface MCPToolCall {\r\n  name: string;\r\n  arguments: Record<string, any>;\r\n}\r\n\r\nexport interface MCPToolResult {\r\n  success: boolean;\r\n  content?: string;\r\n  error?: string;\r\n  metadata?: Record<string, any>;\r\n}\r\n\r\nexport interface MCPClientInterface {\r\n  executeToolCall(toolCall: MCPToolCall): Promise<MCPToolResult>;\r\n  isConnected(): boolean;\r\n  getAvailableTools(): Promise<string[]>;\r\n}\r\n\r\n// This adapter will be injected with the actual MCP hub service\r\nexport class MCPClientAdapter implements MCPClientInterface {\r\n  private mcpHubService: any = null;\r\n\r\n  setMCPHubService(service: any): void {\r\n    this.mcpHubService = service;\r\n  }\r\n\r\n  async executeToolCall(toolCall: MCPToolCall): Promise<MCPToolResult> {\r\n    if (!this.mcpHubService) {\r\n      return {\r\n        success: false,\r\n        error: 'MCP hub service not configured'\r\n      };\r\n    }\r\n\r\n    try {\r\n      // Execute the tool call through the MCP hub\r\n      const result = await this.mcpHubService.executeTool(toolCall.name, toolCall.arguments);\r\n      \r\n      return {\r\n        success: true,\r\n        content: typeof result === 'string' ? result : JSON.stringify(result),\r\n        metadata: { toolName: toolCall.name }\r\n      };\r\n    } catch (error) {\r\n      return {\r\n        success: false,\r\n        error: error instanceof Error ? error.message : 'Unknown error',\r\n        metadata: { toolName: toolCall.name }\r\n      };\r\n    }\r\n  }\r\n\r\n  isConnected(): boolean {\r\n    return this.mcpHubService !== null;\r\n  }\r\n\r\n  async getAvailableTools(): Promise<string[]> {\r\n    if (!this.mcpHubService) {\r\n      return [];\r\n    }\r\n\r\n    try {\r\n      const tools = await this.mcpHubService.getAvailableTools();\r\n      return tools.map((tool: any) => tool.name || tool.id);\r\n    } catch (error) {\r\n      console.error('Failed to get available MCP tools:', error);\r\n      return [];\r\n    }\r\n  }\r\n}\r\n\r\nexport const mcpClientAdapter = new MCPClientAdapter(); ", "import { LLMRouter } from './router/router';\nimport { LLMService } from './services/llm-service';\nimport { mcpClientAdapter } from './services/mcp-client-adapter';\nimport { LLMRequest, LLMResponse } from './router/types';\nimport { ComplexityAssessor } from './router/complexityAssessor';\n\nexport interface EnhancedLLMConfig {\n  baseUrl?: string;\n  defaultModel?: string;\n  enableClearThought?: boolean;\n  useLLMDrivenComplexity?: boolean;\n}\n\nexport class EnhancedLLMService {\n  private router: LLMRouter;\n  private llmService: LLMService;\n  private complexityAssessor: ComplexityAssessor;\n  private isInitialized = false;\n  private useLLMDrivenComplexity: boolean;\n\n  constructor(config: EnhancedLLMConfig = {}) {\n    this.llmService = new LLMService(config);\n    this.complexityAssessor = new ComplexityAssessor(this.llmService);\n    this.router = new LLMRouter(this.llmService);\n    this.useLLMDrivenComplexity = config.useLLMDrivenComplexity !== false; // Enable by default\n  }\n\n  async initialize(openRouterService?: any, mcpHubService?: any): Promise<void> {\n    console.log('Enhanced LLM Service initializing...');\n    // Wire OpenRouter integration\n    if (openRouterService) {\n      this.llmService.setOpenRouterService(openRouterService);\n      console.log('Enhanced LLM Service: OpenRouterService wired into LLMService');\n      \n      if (this.useLLMDrivenComplexity) {\n        console.log('Enhanced LLM Service: LLM-driven complexity assessment enabled');\n      } else {\n        console.log('Enhanced LLM Service: Using rule-based complexity assessment');\n      }\n    } else {\n      // If no OpenRouter service, disable LLM-driven complexity\n      this.useLLMDrivenComplexity = false;\n      console.log('Enhanced LLM Service: No OpenRouter service, using rule-based complexity assessment');\n    }\n    \n    // Wire MCP hub integration\n    if (mcpHubService) {\n      mcpClientAdapter.setMCPHubService(mcpHubService);\n      this.llmService.setMCPClient(mcpClientAdapter);\n      console.log('Enhanced LLM Service: MCP Hub wired into LLMService');\n    }\n    \n    // Initialize underlying LLMService\n    await this.llmService.initialize();\n    this.isInitialized = true;\n    console.log('Enhanced LLM Service initialized and ready');\n  }\n\n  async generateResponse(query: string, userId: string = 'default', metadata?: Record<string, any>): Promise<LLMResponse> {\n    if (!this.isInitialized) {\n      throw new Error('Enhanced LLM Service not initialized. Call initialize() first.');\n    }\n\n    const request: LLMRequest = {\n      id: `req_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`,\n      query,\n      userId,\n      timestamp: Date.now(),\n      metadata\n    };\n\n    return await this.router.routeRequest(request);\n  }\n\n  async getStatus() {\n    if (!this.isInitialized) {\n      return {\n        initialized: false,\n        error: 'Service not initialized'\n      };\n    }\n\n    const routerStatus = await this.router.getRouterStatus();\n    return {\n      initialized: true,\n      useLLMDrivenComplexity: this.useLLMDrivenComplexity,\n      ...routerStatus\n    };\n  }\n\n  async testComplexityAssessment(query: string) {\n    if (!this.isInitialized) {\n      throw new Error('Enhanced LLM Service not initialized');\n    }\n\n    return await this.router.testComplexityAssessment(query);\n  }\n\n  // Enable or disable LLM-driven complexity assessment\n  setLLMDrivenComplexity(enabled: boolean): void {\n    this.useLLMDrivenComplexity = enabled;\n    console.log(`Enhanced LLM Service: LLM-driven complexity assessment ${enabled ? 'enabled' : 'disabled'}`);\n  }\n\n  // Direct access to basic LLM functionality for backward compatibility\n  async generateBasic(prompt: string, options?: any): Promise<string> {\n    if (!this.isInitialized) {\n      throw new Error('Enhanced LLM Service not initialized');\n    }\n\n    return await this.llmService.generate(prompt, options);\n  }\n\n  isReady(): boolean {\n    return this.isInitialized;\n  }\n\n  getCurrentModel(): string {\n    return this.llmService.getCurrentModel();\n  }\n\n  async setModel(modelName: string): Promise<void> {\n    this.llmService.setModel(modelName);\n  }\n}\n\n// Export singleton instance\nexport const enhancedLLMService = new EnhancedLLMService({ useLLMDrivenComplexity: true }); ", "'use strict';\n\nvar has = Object.prototype.hasOwnProperty\n  , prefix = '~';\n\n/**\n * Constructor to create a storage for our `EE` objects.\n * An `Events` instance is a plain object whose properties are event names.\n *\n * @constructor\n * @private\n */\nfunction Events() {}\n\n//\n// We try to not inherit from `Object.prototype`. In some engines creating an\n// instance in this way is faster than calling `Object.create(null)` directly.\n// If `Object.create(null)` is not supported we prefix the event names with a\n// character to make sure that the built-in object properties are not\n// overridden or used as an attack vector.\n//\nif (Object.create) {\n  Events.prototype = Object.create(null);\n\n  //\n  // This hack is needed because the `__proto__` property is still inherited in\n  // some old browsers like Android 4, iPhone 5.1, Opera 11 and Safari 5.\n  //\n  if (!new Events().__proto__) prefix = false;\n}\n\n/**\n * Representation of a single event listener.\n *\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} [once=false] Specify if the listener is a one-time listener.\n * @constructor\n * @private\n */\nfunction EE(fn, context, once) {\n  this.fn = fn;\n  this.context = context;\n  this.once = once || false;\n}\n\n/**\n * Add a listener for a given event.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} once Specify if the listener is a one-time listener.\n * @returns {EventEmitter}\n * @private\n */\nfunction addListener(emitter, event, fn, context, once) {\n  if (typeof fn !== 'function') {\n    throw new TypeError('The listener must be a function');\n  }\n\n  var listener = new EE(fn, context || emitter, once)\n    , evt = prefix ? prefix + event : event;\n\n  if (!emitter._events[evt]) emitter._events[evt] = listener, emitter._eventsCount++;\n  else if (!emitter._events[evt].fn) emitter._events[evt].push(listener);\n  else emitter._events[evt] = [emitter._events[evt], listener];\n\n  return emitter;\n}\n\n/**\n * Clear event by name.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} evt The Event name.\n * @private\n */\nfunction clearEvent(emitter, evt) {\n  if (--emitter._eventsCount === 0) emitter._events = new Events();\n  else delete emitter._events[evt];\n}\n\n/**\n * Minimal `EventEmitter` interface that is molded against the Node.js\n * `EventEmitter` interface.\n *\n * @constructor\n * @public\n */\nfunction EventEmitter() {\n  this._events = new Events();\n  this._eventsCount = 0;\n}\n\n/**\n * Return an array listing the events for which the emitter has registered\n * listeners.\n *\n * @returns {Array}\n * @public\n */\nEventEmitter.prototype.eventNames = function eventNames() {\n  var names = []\n    , events\n    , name;\n\n  if (this._eventsCount === 0) return names;\n\n  for (name in (events = this._events)) {\n    if (has.call(events, name)) names.push(prefix ? name.slice(1) : name);\n  }\n\n  if (Object.getOwnPropertySymbols) {\n    return names.concat(Object.getOwnPropertySymbols(events));\n  }\n\n  return names;\n};\n\n/**\n * Return the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Array} The registered listeners.\n * @public\n */\nEventEmitter.prototype.listeners = function listeners(event) {\n  var evt = prefix ? prefix + event : event\n    , handlers = this._events[evt];\n\n  if (!handlers) return [];\n  if (handlers.fn) return [handlers.fn];\n\n  for (var i = 0, l = handlers.length, ee = new Array(l); i < l; i++) {\n    ee[i] = handlers[i].fn;\n  }\n\n  return ee;\n};\n\n/**\n * Return the number of listeners listening to a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Number} The number of listeners.\n * @public\n */\nEventEmitter.prototype.listenerCount = function listenerCount(event) {\n  var evt = prefix ? prefix + event : event\n    , listeners = this._events[evt];\n\n  if (!listeners) return 0;\n  if (listeners.fn) return 1;\n  return listeners.length;\n};\n\n/**\n * Calls each of the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Boolean} `true` if the event had listeners, else `false`.\n * @public\n */\nEventEmitter.prototype.emit = function emit(event, a1, a2, a3, a4, a5) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return false;\n\n  var listeners = this._events[evt]\n    , len = arguments.length\n    , args\n    , i;\n\n  if (listeners.fn) {\n    if (listeners.once) this.removeListener(event, listeners.fn, undefined, true);\n\n    switch (len) {\n      case 1: return listeners.fn.call(listeners.context), true;\n      case 2: return listeners.fn.call(listeners.context, a1), true;\n      case 3: return listeners.fn.call(listeners.context, a1, a2), true;\n      case 4: return listeners.fn.call(listeners.context, a1, a2, a3), true;\n      case 5: return listeners.fn.call(listeners.context, a1, a2, a3, a4), true;\n      case 6: return listeners.fn.call(listeners.context, a1, a2, a3, a4, a5), true;\n    }\n\n    for (i = 1, args = new Array(len -1); i < len; i++) {\n      args[i - 1] = arguments[i];\n    }\n\n    listeners.fn.apply(listeners.context, args);\n  } else {\n    var length = listeners.length\n      , j;\n\n    for (i = 0; i < length; i++) {\n      if (listeners[i].once) this.removeListener(event, listeners[i].fn, undefined, true);\n\n      switch (len) {\n        case 1: listeners[i].fn.call(listeners[i].context); break;\n        case 2: listeners[i].fn.call(listeners[i].context, a1); break;\n        case 3: listeners[i].fn.call(listeners[i].context, a1, a2); break;\n        case 4: listeners[i].fn.call(listeners[i].context, a1, a2, a3); break;\n        default:\n          if (!args) for (j = 1, args = new Array(len -1); j < len; j++) {\n            args[j - 1] = arguments[j];\n          }\n\n          listeners[i].fn.apply(listeners[i].context, args);\n      }\n    }\n  }\n\n  return true;\n};\n\n/**\n * Add a listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.on = function on(event, fn, context) {\n  return addListener(this, event, fn, context, false);\n};\n\n/**\n * Add a one-time listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.once = function once(event, fn, context) {\n  return addListener(this, event, fn, context, true);\n};\n\n/**\n * Remove the listeners of a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn Only remove the listeners that match this function.\n * @param {*} context Only remove the listeners that have this context.\n * @param {Boolean} once Only remove one-time listeners.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeListener = function removeListener(event, fn, context, once) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return this;\n  if (!fn) {\n    clearEvent(this, evt);\n    return this;\n  }\n\n  var listeners = this._events[evt];\n\n  if (listeners.fn) {\n    if (\n      listeners.fn === fn &&\n      (!once || listeners.once) &&\n      (!context || listeners.context === context)\n    ) {\n      clearEvent(this, evt);\n    }\n  } else {\n    for (var i = 0, events = [], length = listeners.length; i < length; i++) {\n      if (\n        listeners[i].fn !== fn ||\n        (once && !listeners[i].once) ||\n        (context && listeners[i].context !== context)\n      ) {\n        events.push(listeners[i]);\n      }\n    }\n\n    //\n    // Reset the array, or remove it completely if we have no more listeners.\n    //\n    if (events.length) this._events[evt] = events.length === 1 ? events[0] : events;\n    else clearEvent(this, evt);\n  }\n\n  return this;\n};\n\n/**\n * Remove all listeners, or those of the specified event.\n *\n * @param {(String|Symbol)} [event] The event name.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeAllListeners = function removeAllListeners(event) {\n  var evt;\n\n  if (event) {\n    evt = prefix ? prefix + event : event;\n    if (this._events[evt]) clearEvent(this, evt);\n  } else {\n    this._events = new Events();\n    this._eventsCount = 0;\n  }\n\n  return this;\n};\n\n//\n// Alias methods names because people roll like that.\n//\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\nEventEmitter.prototype.addListener = EventEmitter.prototype.on;\n\n//\n// Expose the prefix.\n//\nEventEmitter.prefixed = prefix;\n\n//\n// Allow `EventEmitter` to be imported as module namespace.\n//\nEventEmitter.EventEmitter = EventEmitter;\n\n//\n// Expose the module.\n//\nif ('undefined' !== typeof module) {\n  module.exports = EventEmitter;\n}\n", "import EventEmitter from './index.js'\n\nexport { EventEmitter }\nexport default EventEmitter\n", "import { EventEmitter } from 'eventemitter3';\r\nimport { ProcessingRequest, ProcessingResponse, ProcessingTier, QualityMetrics } from '../types/llm-types';\r\n\r\nexport interface ProcessorEvents {\r\n  'processing:started': (requestId: string) => void;\r\n  'processing:progress': (requestId: string, progress: number) => void;\r\n  'processing:completed': (requestId: string, response: ProcessingResponse) => void;\r\n  'processing:error': (requestId: string, error: Error) => void;\r\n  'quality:calculated': (requestId: string, metrics: QualityMetrics) => void;\r\n}\r\n\r\nexport abstract class BaseProcessor extends EventEmitter<ProcessorEvents> {\r\n  protected tier: ProcessingTier;\r\n  protected isProcessing: boolean = false;\r\n  protected activeRequests: Map<string, AbortController> = new Map();\r\n\r\n  constructor(tier: ProcessingTier) {\r\n    super();\r\n    this.tier = tier;\r\n  }\r\n\r\n  abstract process(request: ProcessingRequest): Promise<ProcessingResponse>;\r\n\r\n  protected abstract generateResponse(request: ProcessingRequest): Promise<string>;\r\n  protected abstract calculateQuality(response: string, request: ProcessingRequest): Promise<QualityMetrics>;\r\n\r\n  protected async processWithTimeout(\r\n    request: ProcessingRequest,\r\n    timeoutMs: number = this.getDefaultTimeout()\r\n  ): Promise<ProcessingResponse> {\r\n    const abortController = new AbortController();\r\n    this.activeRequests.set(request.id, abortController);\r\n\r\n    try {\r\n      this.emit('processing:started', request.id);\r\n      \r\n      const startTime = Date.now();\r\n      \r\n      // Generate response with timeout\r\n      const responsePromise = this.generateResponse(request);\r\n      const timeoutPromise = new Promise<never>((_, reject) => {\r\n        setTimeout(() => reject(new Error('Processing timeout')), timeoutMs);\r\n      });\r\n\r\n      const content = await Promise.race([responsePromise, timeoutPromise]);\r\n      \r\n      // Calculate quality metrics\r\n      const qualityMetrics = await this.calculateQuality(content, request);\r\n      this.emit('quality:calculated', request.id, qualityMetrics);\r\n\r\n      const processingTime = Date.now() - startTime;\r\n\r\n      const response: ProcessingResponse = {\r\n        id: crypto.randomUUID(),\r\n        requestId: request.id,\r\n        content,\r\n        tier: this.tier,\r\n        qualityScore: qualityMetrics.overallScore,\r\n        confidence: this.calculateConfidence(qualityMetrics),\r\n        processingTime,\r\n        model: this.getModelName(),\r\n        reasoning: this.extractReasoning(content),\r\n        citations: this.extractCitations(content),\r\n        metadata: {\r\n          tokensUsed: this.estimateTokenCount(content),\r\n          modelsInvolved: [this.getModelName()],\r\n          processingSteps: this.getProcessingSteps(request),\r\n          qualityMetrics,\r\n          userInterventions: []\r\n        }\r\n      };\r\n\r\n      this.emit('processing:completed', request.id, response);\r\n      return response;\r\n\r\n    } catch (error) {\r\n      this.emit('processing:error', request.id, error as Error);\r\n      throw error;\r\n    } finally {\r\n      this.activeRequests.delete(request.id);\r\n    }\r\n  }\r\n\r\n  async cancelRequest(requestId: string): Promise<void> {\r\n    const controller = this.activeRequests.get(requestId);\r\n    if (controller) {\r\n      controller.abort();\r\n      this.activeRequests.delete(requestId);\r\n    }\r\n  }\r\n\r\n  protected getDefaultTimeout(): number {\r\n    const timeouts: Record<ProcessingTier, number> = {\r\n      atomic: 1000,     // 1s\r\n      moderate: 5000,   // 5s  \r\n      complex: 15000,   // 15s\r\n      expert: 45000     // 45s\r\n    };\r\n    return timeouts[this.tier];\r\n  }\r\n\r\n  protected calculateConfidence(metrics: QualityMetrics): number {\r\n    // Weighted confidence calculation\r\n    return (\r\n      metrics.coherence * 0.3 +\r\n      metrics.relevance * 0.3 +\r\n      metrics.accuracy * 0.2 +\r\n      metrics.completeness * 0.2\r\n    );\r\n  }\r\n\r\n  protected extractReasoning(content: string): string[] {\r\n    // Extract reasoning steps from content\r\n    const reasoningPattern = /(?:step \\d+|first|second|third|finally|therefore|because|since)[\\s\\S]*?(?=\\n\\n|\\n[A-Z]|$)/gi;\r\n    return content.match(reasoningPattern) || [];\r\n  }\r\n\r\n  protected extractCitations(content: string): string[] {\r\n    // Extract citations and sources\r\n    const citationPattern = /\\[.*?\\]|\\(.*?\\)|source:.*$/gim;\r\n    return content.match(citationPattern) || [];\r\n  }\r\n\r\n  protected estimateTokenCount(content: string): number {\r\n    // Rough token estimation (4 characters per token average)\r\n    return Math.ceil(content.length / 4);\r\n  }\r\n\r\n  protected abstract getModelName(): string;\r\n  protected abstract getProcessingSteps(request: ProcessingRequest): any[];\r\n\r\n  async getHealth(): Promise<ProcessorHealth> {\r\n    return {\r\n      tier: this.tier,\r\n      isHealthy: !this.isProcessing || this.activeRequests.size < 5,\r\n      activeRequests: this.activeRequests.size,\r\n      averageProcessingTime: await this.getAverageProcessingTime(),\r\n      successRate: await this.getSuccessRate()\r\n    };\r\n  }\r\n\r\n  protected async getAverageProcessingTime(): Promise<number> {\r\n    // Implement based on historical data\r\n    return 0;\r\n  }\r\n\r\n  protected async getSuccessRate(): Promise<number> {\r\n    // Implement based on historical data\r\n    return 100;\r\n  }\r\n}\r\n\r\nexport interface ProcessorHealth {\r\n  tier: ProcessingTier;\r\n  isHealthy: boolean;\r\n  activeRequests: number;\r\n  averageProcessingTime: number;\r\n  successRate: number;\r\n} ", "import { BaseProcessor } from './base-processor';\r\nimport { ProcessingRequest, ProcessingResponse, QualityMetrics } from '../types/llm-types';\r\n\r\nexport class AtomicProcessor extends BaseProcessor {\r\n  private responseCache: Map<string, string> = new Map();\r\n  private modelName: string = 'llama3.2:1b'; // Lightweight model for instant responses\r\n\r\n  constructor() {\r\n    super('atomic');\r\n    this.initializeCache();\r\n  }\r\n\r\n  async process(request: ProcessingRequest): Promise<ProcessingResponse> {\r\n    return this.processWithTimeout(request, 1000); // Hard 1s timeout\r\n  }\r\n\r\n  protected async generateResponse(request: ProcessingRequest): Promise<string> {\r\n    // Check cache first for instant responses\r\n    const cacheKey = this.generateCacheKey(request);\r\n    const cachedResponse = this.responseCache.get(cacheKey);\r\n    \r\n    if (cachedResponse) {\r\n      return cachedResponse;\r\n    }\r\n\r\n    // Generate quick response using lightweight model\r\n    const prompt = this.buildAtomicPrompt(request);\r\n    \r\n    try {\r\n      const response = await this.callOpenRouterModel(prompt, {\r\n        temperature: 0.7,\r\n        maxTokens: 1000,\r\n        top_p: 0.9,\r\n        stream: false\r\n      });\r\n\r\n      // Cache the response for future use\r\n      this.responseCache.set(cacheKey, response);\r\n      \r\n      return response;\r\n    } catch (error) {\r\n      // Fallback to template response\r\n      return this.generateTemplateResponse(request);\r\n    }\r\n  }\r\n\r\n  protected async calculateQuality(response: string, request: ProcessingRequest): Promise<QualityMetrics> {\r\n    // Fast quality assessment for atomic responses\r\n    const wordCount = response.split(/\\s+/).length;\r\n    const hasDirectAnswer = this.containsDirectAnswer(response, request.content);\r\n    const isCoherent = this.assessCoherence(response);\r\n    \r\n    return {\r\n      coherence: isCoherent ? 85 : 60,\r\n      relevance: hasDirectAnswer ? 90 : 70,\r\n      accuracy: 75, // Conservative estimate for speed\r\n      completeness: Math.min(wordCount / 20 * 100, 90), // Based on response length\r\n      clarity: 85,\r\n      creativity: 40, // Atomic responses prioritize speed over creativity\r\n      overallScore: hasDirectAnswer && isCoherent ? 80 : 65\r\n    };\r\n  }\r\n\r\n  protected getModelName(): string {\r\n    return this.modelName;\r\n  }\r\n\r\n  protected getProcessingSteps(request: ProcessingRequest): any[] {\r\n    return [\r\n      {\r\n        step: 1,\r\n        description: 'Cache lookup',\r\n        tier: 'atomic',\r\n        model: this.modelName,\r\n        startTime: new Date(),\r\n        endTime: new Date(),\r\n        result: 'Cache check completed',\r\n        confidence: 1.0\r\n      },\r\n      {\r\n        step: 2,\r\n        description: 'Lightweight model generation',\r\n        tier: 'atomic',\r\n        model: this.modelName,\r\n        startTime: new Date(),\r\n        endTime: new Date(),\r\n        result: 'Response generated',\r\n        confidence: 0.8\r\n      }\r\n    ];\r\n  }\r\n\r\n  private initializeCache(): void {\r\n    // Pre-populate cache with common responses\r\n    const commonResponses = [\r\n      { key: 'greeting', response: 'Hello! How can I assist you today?' },\r\n      { key: 'thanks', response: 'You\\'re welcome! Is there anything else I can help you with?' },\r\n      { key: 'help', response: 'I\\'m here to help! Please describe what you need assistance with.' },\r\n      { key: 'unclear', response: 'Could you please clarify or provide more details about what you\\'re looking for?' }\r\n    ];\r\n\r\n    commonResponses.forEach(({ key, response }) => {\r\n      this.responseCache.set(key, response);\r\n    });\r\n  }\r\n\r\n  private generateCacheKey(request: ProcessingRequest): string {\r\n    // Create a hash-like key for caching\r\n    const content = request.content.toLowerCase().trim();\r\n    const words = content.split(/\\s+/).slice(0, 5).join(' '); // First 5 words\r\n    return btoa(words).slice(0, 16); // Base64 encode and truncate\r\n  }\r\n\r\n  private buildAtomicPrompt(request: ProcessingRequest): string {\r\n    // Simple, direct prompt for atomic responses\r\n    const context = request.context.subjectMode !== 'general' \r\n      ? `Context: ${request.context.subjectMode} mode. ` \r\n      : '';\r\n    \r\n    return `${context}Provide a brief, direct answer to: ${request.content}\r\n\r\nKeep your response concise (under 50 words) and focus on the most important information.`;\r\n  }\r\n\r\n  private async callOpenRouterModel(prompt: string, options: any): Promise<string> {\r\n    // This would integrate with the OpenRouter service from Phase 2\r\n    // For now, return a placeholder that will be replaced with actual OpenRouter integration\r\n    \r\n    const response = await fetch('http://localhost:11434/api/generate', {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({\r\n        model: this.modelName,\r\n        prompt: prompt,\r\n        stream: false,\r\n        options: {\r\n          temperature: options.temperature,\r\n          num_predict: options.maxTokens,\r\n          top_p: options.top_p\r\n        }\r\n      })\r\n    });\r\n\r\n    if (!response.ok) {\r\n      throw new Error(`OpenRouter request failed: ${response.statusText}`);\r\n    }\r\n\r\n    const data = await response.json() as { response?: string };\r\n    return data.response || '';\r\n  }\r\n\r\n  private generateTemplateResponse(request: ProcessingRequest): string {\r\n    // Fallback template responses when model fails\r\n    const content = request.content.toLowerCase();\r\n    \r\n    if (content.includes('hello') || content.includes('hi')) {\r\n      return 'Hello! How can I help you today?';\r\n    }\r\n    \r\n    if (content.includes('thank')) {\r\n      return 'You\\'re welcome!';\r\n    }\r\n    \r\n    if (content.includes('help')) {\r\n      return 'I\\'d be happy to help! Please provide more details about what you need.';\r\n    }\r\n    \r\n    if (content.includes('?')) {\r\n      return 'I understand you have a question. Could you provide more context so I can give you a helpful answer?';\r\n    }\r\n    \r\n    return 'I received your message. Please provide more details so I can assist you better.';\r\n  }\r\n\r\n  private containsDirectAnswer(response: string, question: string): boolean {\r\n    const questionWords = question.toLowerCase().split(/\\s+/).filter(word => word.length > 3);\r\n    const responseWords = response.toLowerCase().split(/\\s+/);\r\n    \r\n    const overlap = questionWords.filter(word => responseWords.includes(word));\r\n    return overlap.length >= Math.min(2, questionWords.length * 0.3);\r\n  }\r\n\r\n  private assessCoherence(response: string): boolean {\r\n    // Simple coherence check\r\n    const sentences = response.split(/[.!?]+/).filter(s => s.trim().length > 0);\r\n    \r\n    if (sentences.length === 0) return false;\r\n    if (sentences.length === 1) return true;\r\n    \r\n    // Check for basic sentence structure and word count\r\n    const avgWordsPerSentence = response.split(/\\s+/).length / sentences.length;\r\n    return avgWordsPerSentence >= 3 && avgWordsPerSentence <= 25;\r\n  }\r\n\r\n  // Cache management\r\n  clearCache(): void {\r\n    this.responseCache.clear();\r\n    this.initializeCache();\r\n  }\r\n\r\n  getCacheSize(): number {\r\n    return this.responseCache.size;\r\n  }\r\n\r\n  getCacheHitRate(): number {\r\n    // This would be tracked with actual metrics in production\r\n    return 0.3; // Placeholder 30% hit rate\r\n  }\r\n} ", "import { EventEmitter } from 'eventemitter3';\r\nimport { ProcessingRequest, ProcessingTier, UserChoice, UserIntervention } from '../types/llm-types';\r\n\r\nexport interface UserControlsEvents {\r\n  'intervention:stop': (requestId: string) => void;\r\n  'intervention:pause': (requestId: string) => void;\r\n  'intervention:resume': (requestId: string) => void;\r\n  'intervention:redirect': (requestId: string, newTier: ProcessingTier) => void;\r\n  'intervention:override': (requestId: string, overrides: any) => void;\r\n  'guidance:requested': (request: ProcessingRequest, suggestedTier: ProcessingTier) => void;\r\n  'guidance:received': (requestId: string, choice: UserChoice) => void;\r\n}\r\n\r\nexport interface InterventionStatus {\r\n  requestId: string;\r\n  status: 'active' | 'paused' | 'stopped' | 'completed';\r\n  interventions: UserIntervention[];\r\n  pausedAt?: Date;\r\n  canRedirect: boolean;\r\n  availableTiers: ProcessingTier[];\r\n}\r\n\r\nexport class UserControls extends EventEmitter<UserControlsEvents> {\r\n  private activeInterventions: Map<string, InterventionStatus> = new Map();\r\n  private guidanceRequests: Map<string, PendingGuidance> = new Map();\r\n  private interventionCallbacks: Map<string, InterventionCallbacks> = new Map();\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  // Request user guidance for processing decisions\r\n  async requestGuidance(\r\n    request: ProcessingRequest, \r\n    suggestedTier: ProcessingTier\r\n  ): Promise<UserChoice> {\r\n    const guidanceId = crypto.randomUUID();\r\n    \r\n    return new Promise((resolve, reject) => {\r\n      const timeout = setTimeout(() => {\r\n        this.guidanceRequests.delete(guidanceId);\r\n        // Default choice if user doesn't respond\r\n        resolve({\r\n          override: false,\r\n          selectedTier: suggestedTier,\r\n          reason: 'No user response - using suggested tier'\r\n        });\r\n      }, request.userPreferences.maxWaitTime || 30000);\r\n\r\n      this.guidanceRequests.set(guidanceId, {\r\n        request,\r\n        suggestedTier,\r\n        resolve,\r\n        reject,\r\n        timeout,\r\n        timestamp: new Date()\r\n      });\r\n\r\n      this.emit('guidance:requested', request, suggestedTier);\r\n    });\r\n  }\r\n\r\n  // User provides guidance response\r\n  provideGuidance(requestId: string, choice: UserChoice): void {\r\n    const guidance = this.guidanceRequests.get(requestId);\r\n    if (guidance) {\r\n      clearTimeout(guidance.timeout);\r\n      guidance.resolve(choice);\r\n      this.guidanceRequests.delete(requestId);\r\n      this.emit('guidance:received', requestId, choice);\r\n    }\r\n  }\r\n\r\n  // Initialize intervention tracking for a request\r\n  initializeIntervention(requestId: string, availableTiers: ProcessingTier[] = []): void {\r\n    this.activeInterventions.set(requestId, {\r\n      requestId,\r\n      status: 'active',\r\n      interventions: [],\r\n      canRedirect: availableTiers.length > 1,\r\n      availableTiers\r\n    });\r\n  }\r\n\r\n  // Stop processing immediately\r\n  stopProcessing(requestId: string, reason: string = 'User requested stop'): void {\r\n    const intervention = this.recordIntervention(requestId, 'stop', reason);\r\n    if (intervention) {\r\n      intervention.status = 'stopped';\r\n      this.emit('intervention:stop', requestId);\r\n    }\r\n  }\r\n\r\n  // Pause processing for user input\r\n  pauseProcessing(requestId: string, reason: string = 'User requested pause'): void {\r\n    const intervention = this.recordIntervention(requestId, 'pause', reason);\r\n    if (intervention) {\r\n      intervention.status = 'paused';\r\n      intervention.pausedAt = new Date();\r\n      this.emit('intervention:pause', requestId);\r\n    }\r\n  }\r\n\r\n  // Resume paused processing\r\n  resumeProcessing(requestId: string, reason: string = 'User resumed processing'): void {\r\n    const intervention = this.activeInterventions.get(requestId);\r\n    if (intervention && intervention.status === 'paused') {\r\n      this.recordIntervention(requestId, 'resume', reason);\r\n      intervention.status = 'active';\r\n      intervention.pausedAt = undefined;\r\n      this.emit('intervention:resume', requestId);\r\n    }\r\n  }\r\n\r\n  // Redirect to different processing tier\r\n  redirectProcessing(\r\n    requestId: string, \r\n    newTier: ProcessingTier, \r\n    reason: string = 'User redirected to different tier'\r\n  ): void {\r\n    const intervention = this.activeInterventions.get(requestId);\r\n    if (intervention && intervention.canRedirect) {\r\n      this.recordIntervention(requestId, 'redirect', `${reason} -> ${newTier}`);\r\n      this.emit('intervention:redirect', requestId, newTier);\r\n    }\r\n  }\r\n\r\n  // Override processing parameters\r\n  overrideParameters(\r\n    requestId: string, \r\n    overrides: any, \r\n    reason: string = 'User overrode parameters'\r\n  ): void {\r\n    this.recordIntervention(requestId, 'override', reason);\r\n    this.emit('intervention:override', requestId, overrides);\r\n  }\r\n\r\n  // Get intervention status for a request\r\n  getInterventionStatus(requestId: string): InterventionStatus | undefined {\r\n    return this.activeInterventions.get(requestId);\r\n  }\r\n\r\n  // Check if request can be intervened\r\n  canIntervene(requestId: string): boolean {\r\n    const intervention = this.activeInterventions.get(requestId);\r\n    return intervention ? intervention.status === 'active' || intervention.status === 'paused' : false;\r\n  }\r\n\r\n  // Get all active interventions\r\n  getActiveInterventions(): InterventionStatus[] {\r\n    return Array.from(this.activeInterventions.values())\r\n      .filter(i => i.status === 'active' || i.status === 'paused');\r\n  }\r\n\r\n  // Mark processing as completed\r\n  completeProcessing(requestId: string): void {\r\n    const intervention = this.activeInterventions.get(requestId);\r\n    if (intervention) {\r\n      intervention.status = 'completed';\r\n      // Keep for a short time for history, then clean up\r\n      setTimeout(() => {\r\n        this.activeInterventions.delete(requestId);\r\n      }, 60000); // 1 minute\r\n    }\r\n  }\r\n\r\n  // Set intervention callbacks for UI integration\r\n  setInterventionCallbacks(requestId: string, callbacks: InterventionCallbacks): void {\r\n    this.interventionCallbacks.set(requestId, callbacks);\r\n  }\r\n\r\n  // Clean up expired guidance requests\r\n  cleanupExpiredGuidance(): void {\r\n    const now = Date.now();\r\n    for (const [id, guidance] of this.guidanceRequests.entries()) {\r\n      if (now - guidance.timestamp.getTime() > 300000) { // 5 minutes\r\n        clearTimeout(guidance.timeout);\r\n        guidance.reject(new Error('Guidance request expired'));\r\n        this.guidanceRequests.delete(id);\r\n      }\r\n    }\r\n  }\r\n\r\n  // Record intervention in history\r\n  private recordIntervention(\r\n    requestId: string, \r\n    type: UserIntervention['type'], \r\n    description: string\r\n  ): InterventionStatus | undefined {\r\n    const intervention = this.activeInterventions.get(requestId);\r\n    if (intervention) {\r\n      const userIntervention: UserIntervention = {\r\n        timestamp: new Date(),\r\n        type,\r\n        description,\r\n        impact: this.calculateInterventionImpact(type, intervention)\r\n      };\r\n      \r\n      intervention.interventions.push(userIntervention);\r\n      return intervention;\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  private calculateInterventionImpact(\r\n    type: UserIntervention['type'], \r\n    intervention: InterventionStatus\r\n  ): string {\r\n    switch (type) {\r\n      case 'stop':\r\n        return 'Processing terminated early';\r\n      case 'pause':\r\n        return 'Processing paused for user input';\r\n      case 'resume':\r\n        return 'Processing resumed after pause';\r\n      case 'redirect':\r\n        return 'Processing tier changed mid-execution';\r\n      case 'override':\r\n        return 'Processing parameters modified';\r\n      case 'feedback':\r\n        return 'User provided feedback for future optimization';\r\n      default:\r\n        return 'Unknown impact';\r\n    }\r\n  }\r\n\r\n  // Get intervention statistics\r\n  getInterventionStats(): InterventionStats {\r\n    const allInterventions = Array.from(this.activeInterventions.values());\r\n    const totalInterventions = allInterventions.reduce(\r\n      (sum, status) => sum + status.interventions.length, 0\r\n    );\r\n\r\n    const interventionTypes = allInterventions.flatMap(s => s.interventions)\r\n      .reduce((counts, intervention) => {\r\n        counts[intervention.type] = (counts[intervention.type] || 0) + 1;\r\n        return counts;\r\n      }, {} as Record<string, number>);\r\n\r\n    return {\r\n      totalRequests: allInterventions.length,\r\n      totalInterventions,\r\n      interventionRate: totalInterventions / Math.max(allInterventions.length, 1),\r\n      interventionTypes,\r\n      averageInterventionsPerRequest: totalInterventions / Math.max(allInterventions.length, 1)\r\n    };\r\n  }\r\n\r\n  // Clean up all data\r\n  shutdown(): void {\r\n    // Clear all pending guidance requests\r\n    for (const guidance of this.guidanceRequests.values()) {\r\n      clearTimeout(guidance.timeout);\r\n      guidance.reject(new Error('System shutting down'));\r\n    }\r\n    \r\n    this.guidanceRequests.clear();\r\n    this.activeInterventions.clear();\r\n    this.interventionCallbacks.clear();\r\n    this.removeAllListeners();\r\n  }\r\n}\r\n\r\n// Supporting interfaces\r\ninterface PendingGuidance {\r\n  request: ProcessingRequest;\r\n  suggestedTier: ProcessingTier;\r\n  resolve: (choice: UserChoice) => void;\r\n  reject: (error: Error) => void;\r\n  timeout: NodeJS.Timeout;\r\n  timestamp: Date;\r\n}\r\n\r\ninterface InterventionCallbacks {\r\n  onStop?: () => void;\r\n  onPause?: () => void;\r\n  onResume?: () => void;\r\n  onRedirect?: (newTier: ProcessingTier) => void;\r\n  onOverride?: (overrides: any) => void;\r\n}\r\n\r\ninterface InterventionStats {\r\n  totalRequests: number;\r\n  totalInterventions: number;\r\n  interventionRate: number;\r\n  interventionTypes: Record<string, number>;\r\n  averageInterventionsPerRequest: number;\r\n} ", "import { EventEmitter } from 'eventemitter3';\r\nimport { ProcessingRequest, ProcessingResponse, ProcessingTier, OptimizationSuggestion } from '../types/llm-types';\r\n\r\nexport interface PerformanceTrackerEvents {\r\n  'optimization:suggestion': (suggestion: OptimizationSuggestion) => void;\r\n  'performance:degraded': (tier: ProcessingTier, metrics: PerformanceMetrics) => void;\r\n  'performance:improved': (tier: ProcessingTier, improvement: number) => void;\r\n}\r\n\r\nexport interface PerformanceMetrics {\r\n  tier: ProcessingTier;\r\n  averageResponseTime: number;\r\n  averageQualityScore: number;\r\n  successRate: number;\r\n  userSatisfactionScore: number;\r\n  resourceEfficiency: number;\r\n  throughput: number; // requests per minute\r\n  errorRate: number;\r\n  timestamp: Date;\r\n}\r\n\r\nexport interface ProcessingRecord {\r\n  requestId: string;\r\n  tier: ProcessingTier;\r\n  startTime: Date;\r\n  endTime: Date;\r\n  duration: number;\r\n  qualityScore: number;\r\n  success: boolean;\r\n  userSatisfaction?: number;\r\n  resourceUsage: ResourceUsage;\r\n  errorType?: string;\r\n}\r\n\r\nexport interface ResourceUsage {\r\n  cpuUsage: number;\r\n  memoryUsage: number;\r\n  modelLoadTime: number;\r\n  tokensProcessed: number;\r\n}\r\n\r\nexport class PerformanceTracker extends EventEmitter<PerformanceTrackerEvents> {\r\n  private processingHistory: ProcessingRecord[] = [];\r\n  private performanceMetrics: Map<ProcessingTier, PerformanceMetrics[]> = new Map();\r\n  private optimizationRules: OptimizationRule[] = [];\r\n  private metricsWindow: number = 1000; // Keep last 1000 records per tier\r\n  private analysisInterval?: NodeJS.Timeout;\r\n\r\n  constructor() {\r\n    super();\r\n    this.initializeOptimizationRules();\r\n    this.startPeriodicAnalysis();\r\n  }\r\n\r\n  // Record processing execution for analysis\r\n  recordProcessing(request: ProcessingRequest, response: ProcessingResponse): void {\r\n    const record: ProcessingRecord = {\r\n      requestId: request.id,\r\n      tier: response.tier,\r\n      startTime: new Date(Date.now() - response.processingTime),\r\n      endTime: new Date(),\r\n      duration: response.processingTime,\r\n      qualityScore: response.qualityScore,\r\n      success: true,\r\n      resourceUsage: this.estimateResourceUsage(request, response)\r\n    };\r\n\r\n    this.processingHistory.push(record);\r\n    \r\n    // Maintain window size\r\n    if (this.processingHistory.length > this.metricsWindow * 4) {\r\n      this.processingHistory = this.processingHistory.slice(-this.metricsWindow * 4);\r\n    }\r\n\r\n    // Update metrics for this tier\r\n    this.updateTierMetrics(response.tier);\r\n    \r\n    // Check for optimization opportunities\r\n    this.analyzeOptimizationOpportunities(response.tier);\r\n  }\r\n\r\n  // Record processing failure\r\n  recordFailure(request: ProcessingRequest, tier: ProcessingTier, error: Error): void {\r\n    const record: ProcessingRecord = {\r\n      requestId: request.id,\r\n      tier,\r\n      startTime: new Date(),\r\n      endTime: new Date(),\r\n      duration: 0,\r\n      qualityScore: 0,\r\n      success: false,\r\n      errorType: error.name,\r\n      resourceUsage: {\r\n        cpuUsage: 0,\r\n        memoryUsage: 0,\r\n        modelLoadTime: 0,\r\n        tokensProcessed: 0\r\n      }\r\n    };\r\n\r\n    this.processingHistory.push(record);\r\n    this.updateTierMetrics(tier);\r\n  }\r\n\r\n  // Record user satisfaction feedback\r\n  recordUserSatisfaction(requestId: string, satisfaction: number): void {\r\n    const record = this.processingHistory.find(r => r.requestId === requestId);\r\n    if (record) {\r\n      record.userSatisfaction = satisfaction;\r\n      this.updateTierMetrics(record.tier);\r\n    }\r\n  }\r\n\r\n  // Get current performance metrics for a tier\r\n  getCurrentMetrics(tier: ProcessingTier): PerformanceMetrics | undefined {\r\n    const tierMetrics = this.performanceMetrics.get(tier);\r\n    return tierMetrics ? tierMetrics[tierMetrics.length - 1] : undefined;\r\n  }\r\n\r\n  // Get performance trends over time\r\n  getPerformanceTrends(tier: ProcessingTier, timeWindow: number = 3600000): PerformanceMetrics[] {\r\n    const cutoff = new Date(Date.now() - timeWindow);\r\n    const tierMetrics = this.performanceMetrics.get(tier) || [];\r\n    \r\n    return tierMetrics.filter(m => m.timestamp >= cutoff);\r\n  }\r\n\r\n  // Get optimization suggestions\r\n  async getOptimizationSuggestions(): Promise<OptimizationSuggestion[]> {\r\n    const suggestions: OptimizationSuggestion[] = [];\r\n    \r\n    for (const rule of this.optimizationRules) {\r\n      const suggestion = await rule.analyze(this.processingHistory, this.performanceMetrics);\r\n      if (suggestion) {\r\n        suggestions.push(suggestion);\r\n      }\r\n    }\r\n    \r\n    return suggestions.sort((a, b) => b.expectedImprovement - a.expectedImprovement);\r\n  }\r\n\r\n  // Analyze routing accuracy\r\n  analyzeRoutingAccuracy(): RoutingAnalysis {\r\n    const recentRecords = this.processingHistory.slice(-100); // Last 100 records\r\n    let correctRouting = 0;\r\n    let totalRouted = 0;\r\n\r\n    for (const record of recentRecords) {\r\n      if (record.success) {\r\n        totalRouted++;\r\n        \r\n        // Determine if routing was optimal based on quality vs time trade-off\r\n        const isOptimal = this.wasRoutingOptimal(record);\r\n        if (isOptimal) {\r\n          correctRouting++;\r\n        }\r\n      }\r\n    }\r\n\r\n    return {\r\n      accuracy: totalRouted > 0 ? correctRouting / totalRouted : 0,\r\n      totalRequests: totalRouted,\r\n      correctlyRouted: correctRouting,\r\n      suggestions: this.generateRoutingImprovement(recentRecords)\r\n    };\r\n  }\r\n\r\n  // Get tier utilization statistics\r\n  getTierUtilization(): Record<ProcessingTier, TierUtilization> {\r\n    const recentRecords = this.processingHistory.slice(-200);\r\n    const utilization: Record<ProcessingTier, TierUtilization> = {\r\n      atomic: { usage: 0, avgDuration: 0, avgQuality: 0 },\r\n      moderate: { usage: 0, avgDuration: 0, avgQuality: 0 },\r\n      complex: { usage: 0, avgDuration: 0, avgQuality: 0 },\r\n      expert: { usage: 0, avgDuration: 0, avgQuality: 0 }\r\n    };\r\n\r\n    const tierCounts: Record<ProcessingTier, number> = {\r\n      atomic: 0, moderate: 0, complex: 0, expert: 0\r\n    };\r\n\r\n    for (const record of recentRecords) {\r\n      if (record.success) {\r\n        tierCounts[record.tier]++;\r\n        utilization[record.tier].avgDuration += record.duration;\r\n        utilization[record.tier].avgQuality += record.qualityScore;\r\n      }\r\n    }\r\n\r\n    for (const tier of Object.keys(utilization) as ProcessingTier[]) {\r\n      const count = tierCounts[tier];\r\n      if (count > 0) {\r\n        utilization[tier].usage = count / recentRecords.length;\r\n        utilization[tier].avgDuration /= count;\r\n        utilization[tier].avgQuality /= count;\r\n      }\r\n    }\r\n\r\n    return utilization;\r\n  }\r\n\r\n  // Private methods\r\n  private updateTierMetrics(tier: ProcessingTier): void {\r\n    const recentRecords = this.processingHistory\r\n      .filter(r => r.tier === tier)\r\n      .slice(-50); // Last 50 records for this tier\r\n\r\n    if (recentRecords.length === 0) return;\r\n\r\n    const successfulRecords = recentRecords.filter(r => r.success);\r\n    const now = new Date();\r\n    \r\n    const metrics: PerformanceMetrics = {\r\n      tier,\r\n      averageResponseTime: this.calculateAverage(successfulRecords.map(r => r.duration)),\r\n      averageQualityScore: this.calculateAverage(successfulRecords.map(r => r.qualityScore)),\r\n      successRate: successfulRecords.length / recentRecords.length,\r\n      userSatisfactionScore: this.calculateAverage(\r\n        successfulRecords.map(r => r.userSatisfaction).filter(s => s !== undefined) as number[]\r\n      ),\r\n      resourceEfficiency: this.calculateResourceEfficiency(successfulRecords),\r\n      throughput: this.calculateThroughput(recentRecords),\r\n      errorRate: (recentRecords.length - successfulRecords.length) / recentRecords.length,\r\n      timestamp: now\r\n    };\r\n\r\n    let tierMetrics = this.performanceMetrics.get(tier) || [];\r\n    tierMetrics.push(metrics);\r\n    \r\n    // Keep only recent metrics\r\n    if (tierMetrics.length > 100) {\r\n      tierMetrics = tierMetrics.slice(-100);\r\n    }\r\n    \r\n    this.performanceMetrics.set(tier, tierMetrics);\r\n  }\r\n\r\n  private analyzeOptimizationOpportunities(tier: ProcessingTier): void {\r\n    const metrics = this.getCurrentMetrics(tier);\r\n    if (!metrics) return;\r\n\r\n    // Check for performance degradation\r\n    if (metrics.successRate < 0.8 || metrics.averageQualityScore < 70) {\r\n      this.emit('performance:degraded', tier, metrics);\r\n    }\r\n\r\n    // Check for improvement opportunities\r\n    const previousMetrics = this.performanceMetrics.get(tier);\r\n    if (previousMetrics && previousMetrics.length > 1) {\r\n      const previous = previousMetrics[previousMetrics.length - 2];\r\n      const improvement = metrics.averageQualityScore - previous.averageQualityScore;\r\n      \r\n      if (improvement > 5) {\r\n        this.emit('performance:improved', tier, improvement);\r\n      }\r\n    }\r\n  }\r\n\r\n  private estimateResourceUsage(request: ProcessingRequest, response: ProcessingResponse): ResourceUsage {\r\n    // Estimate resource usage based on processing time and complexity\r\n    const baseUsage = {\r\n      atomic: { cpu: 10, memory: 50, loadTime: 0 },\r\n      moderate: { cpu: 30, memory: 150, loadTime: 100 },\r\n      complex: { cpu: 60, memory: 300, loadTime: 500 },\r\n      expert: { cpu: 90, memory: 600, loadTime: 1000 }\r\n    };\r\n\r\n    const base = baseUsage[response.tier];\r\n    const tokensProcessed = response.metadata.tokensUsed;\r\n    \r\n    return {\r\n      cpuUsage: base.cpu + (tokensProcessed * 0.1),\r\n      memoryUsage: base.memory + (tokensProcessed * 0.5),\r\n      modelLoadTime: base.loadTime,\r\n      tokensProcessed\r\n    };\r\n  }\r\n\r\n  private wasRoutingOptimal(record: ProcessingRecord): boolean {\r\n    // Determine if the tier choice was optimal based on quality/time trade-off\r\n    // This is a simplified heuristic - could be more sophisticated\r\n    \r\n    if (record.tier === 'atomic') {\r\n      return record.duration < 2000 && record.qualityScore > 60;\r\n    } else if (record.tier === 'moderate') {\r\n      return record.duration < 8000 && record.qualityScore > 75;\r\n    } else if (record.tier === 'complex') {\r\n      return record.duration < 20000 && record.qualityScore > 85;\r\n    } else { // expert\r\n      return record.qualityScore > 90;\r\n    }\r\n  }\r\n\r\n  private calculateAverage(values: number[]): number {\r\n    if (values.length === 0) return 0;\r\n    return values.reduce((sum, val) => sum + val, 0) / values.length;\r\n  }\r\n\r\n  private calculateResourceEfficiency(records: ProcessingRecord[]): number {\r\n    if (records.length === 0) return 0;\r\n    \r\n    // Quality per unit resource used\r\n    const efficiency = records.map(r => \r\n      r.qualityScore / (r.resourceUsage.cpuUsage + r.resourceUsage.memoryUsage / 100)\r\n    );\r\n    \r\n    return this.calculateAverage(efficiency);\r\n  }\r\n\r\n  private calculateThroughput(records: ProcessingRecord[]): number {\r\n    if (records.length < 2) return 0;\r\n    \r\n    const timeSpan = records[records.length - 1].endTime.getTime() - records[0].startTime.getTime();\r\n    return (records.length / timeSpan) * 60000; // requests per minute\r\n  }\r\n\r\n  private generateRoutingImprovement(records: ProcessingRecord[]): string[] {\r\n    const suggestions: string[] = [];\r\n    \r\n    // Analyze patterns and suggest improvements\r\n    const overQualified = records.filter(r => \r\n      r.tier === 'expert' && r.qualityScore < 85\r\n    ).length;\r\n    \r\n    if (overQualified > records.length * 0.2) {\r\n      suggestions.push('Consider routing simple requests to lower tiers');\r\n    }\r\n    \r\n    const underQualified = records.filter(r => \r\n      r.tier === 'atomic' && r.qualityScore < 70\r\n    ).length;\r\n    \r\n    if (underQualified > records.length * 0.3) {\r\n      suggestions.push('Route complex requests to higher tiers for better quality');\r\n    }\r\n    \r\n    return suggestions;\r\n  }\r\n\r\n  private initializeOptimizationRules(): void {\r\n    // Initialize optimization analysis rules\r\n    this.optimizationRules = [\r\n      {\r\n        name: 'Tier Rebalancing',\r\n        analyze: async (history, metrics) => {\r\n          const utilization = this.getTierUtilization();\r\n          \r\n          if (utilization.expert.usage > 0.4) {\r\n            return {\r\n              type: 'tier_rebalancing',\r\n              description: 'Expert tier is overutilized. Consider improving lower tiers.',\r\n              expectedImprovement: 15,\r\n              autoApplicable: false,\r\n              parameters: { targetTier: 'complex' }\r\n            };\r\n          }\r\n          return null;\r\n        }\r\n      },\r\n      {\r\n        name: 'Cache Optimization',\r\n        analyze: async (history, metrics) => {\r\n          const atomicRecords = history.filter(r => r.tier === 'atomic').slice(-50);\r\n          const cacheableRequests = atomicRecords.length * 0.3; // Estimate\r\n          \r\n          if (cacheableRequests > 10) {\r\n            return {\r\n              type: 'cache_optimization',\r\n              description: 'Increase atomic tier cache size for better performance.',\r\n              expectedImprovement: 8,\r\n              autoApplicable: true,\r\n              parameters: { newCacheSize: Math.ceil(cacheableRequests * 1.5) }\r\n            };\r\n          }\r\n          return null;\r\n        }\r\n      }\r\n    ];\r\n  }\r\n\r\n  private startPeriodicAnalysis(): void {\r\n    this.analysisInterval = setInterval(() => {\r\n      this.performPeriodicAnalysis();\r\n    }, 60000); // Every minute\r\n  }\r\n\r\n  private performPeriodicAnalysis(): void {\r\n    // Clean old data\r\n    const cutoff = new Date(Date.now() - 24 * 60 * 60 * 1000); // 24 hours\r\n    this.processingHistory = this.processingHistory.filter(r => r.endTime >= cutoff);\r\n    \r\n    // Generate optimization suggestions\r\n    this.getOptimizationSuggestions().then(suggestions => {\r\n      suggestions.forEach(suggestion => {\r\n        this.emit('optimization:suggestion', suggestion);\r\n      });\r\n    });\r\n  }\r\n\r\n  shutdown(): void {\r\n    if (this.analysisInterval) {\r\n      clearInterval(this.analysisInterval);\r\n    }\r\n    this.removeAllListeners();\r\n  }\r\n}\r\n\r\n// Supporting interfaces\r\ninterface OptimizationRule {\r\n  name: string;\r\n  analyze: (\r\n    history: ProcessingRecord[], \r\n    metrics: Map<ProcessingTier, PerformanceMetrics[]>\r\n  ) => Promise<OptimizationSuggestion | null>;\r\n}\r\n\r\ninterface RoutingAnalysis {\r\n  accuracy: number;\r\n  totalRequests: number;\r\n  correctlyRouted: number;\r\n  suggestions: string[];\r\n}\r\n\r\ninterface TierUtilization {\r\n  usage: number; // 0-1\r\n  avgDuration: number;\r\n  avgQuality: number;\r\n} ", "// Main enhanced LLM service\r\nimport { EnhancedLLMService, enhancedLLMService } from './enhanced-llm-service';\r\nimport type { EnhancedLLMConfig } from './enhanced-llm-service';\r\nexport { EnhancedLLMService, enhancedLLMService };\r\nexport type { EnhancedLLMConfig };\r\n\r\n// Domain types for helper constants\r\nimport type { ProcessingRequirements, UserPreferences, Message } from './types/llm-types';\r\n\r\n// Router and types\r\nimport { LLMRouter } from './router/router';\r\nexport { ComplexityAssessor } from './router/complexityAssessor';\r\nexport type { \r\n  RequestComplexity, \r\n  LLMRequest, \r\n  LLMResponse, \r\n  TierProcessor, \r\n  ComplexityAssessment \r\n} from './router/types';\r\n\r\n// Services\r\nimport { llmService } from './services/llm-service';\r\nexport { MCPClientAdapter, mcpClientAdapter } from './services/mcp-client-adapter';\r\nexport type { \r\n  MCPClientInterface, \r\n  MCPToolCall, \r\n  MCPToolResult\r\n} from './services/mcp-client-adapter';\r\nexport type {\r\n  LLMServiceConfig,\r\n  GenerationOptions\r\n} from './services/llm-service';\r\n\r\n// Tier processors\r\nexport { Tier1Processor } from './router/tier1Processor';\r\nexport { Tier2Processor } from './router/tier2Processor';\r\nexport { Tier3Processor } from './router/tier3Processor';\r\nexport { Tier4Processor } from './router/tier4Processor';\r\n\r\n// Base Processor Architecture\r\nexport { BaseProcessor } from './processors/base-processor';\r\nexport { AtomicProcessor } from './processors/atomic-processor';\r\n\r\n// User Intervention System\r\nexport { UserControls } from './intervention/user-controls';\r\n\r\n// Performance Tracking\r\nexport { PerformanceTracker } from './analytics/performance-tracker';\r\n\r\n// Type Definitions\r\nexport type {\r\n  ProcessingTier,\r\n  QualityMetrics,\r\n  ProcessingRequest,\r\n  ProcessingResponse,\r\n  ProcessingStep,\r\n  ProcessingRequirements,\r\n  UserPreferences,\r\n  Message\r\n} from './types/llm-types';\r\n\r\n// Re-export processor events for external listening\r\nexport type { ProcessorEvents } from './processors/base-processor';\r\nexport type { UserControlsEvents } from './intervention/user-controls';\r\nexport type { PerformanceTrackerEvents } from './analytics/performance-tracker';\r\n\r\n// Helper function to create a configured Enhanced LLM Service\r\nexport function createEnhancedLLMService(config?: EnhancedLLMConfig): EnhancedLLMService {\r\n  return new EnhancedLLMService(config);\r\n}\r\n\r\n// Constants for tier configurations\r\nexport const TIER_CONFIGURATIONS = {\r\n  DIRECT_RESPONSE: {\r\n    timeout: 500,\r\n    description: 'Simple acknowledgments and direct responses'\r\n  },\r\n  ATOMIC: {\r\n    timeout: 10000,\r\n    description: 'Single-step LLM responses'\r\n  },\r\n  MODERATE: {\r\n    timeout: 30000,\r\n    description: 'Multi-step with clear-thought tools'\r\n  },\r\n  COMPLEX: {\r\n    timeout: 60000,\r\n    description: 'Comprehensive analysis with multiple tools'\r\n  },\r\n  EXPERT: {\r\n    timeout: 120000,\r\n    description: 'Full expert-level analysis with all available tools'\r\n  }\r\n} as const;\r\n\r\nexport const DEFAULT_USER_PREFERENCES: UserPreferences = {\r\n  qualityVsSpeed: 50,\r\n  allowExpertProcessing: false,\r\n  enableQualityAssurance: true,\r\n  maxWaitTime: 30000,\r\n  interventionLevel: 'balanced'\r\n};\r\n\r\nexport const DEFAULT_PROCESSING_REQUIREMENTS: ProcessingRequirements = {\r\n  minQuality: 75,\r\n  maxLatency: 10000,\r\n  requiresReasoning: false,\r\n  requiresCreativity: false,\r\n  requiresFactualAccuracy: true,\r\n  requiresCodeGeneration: false,\r\n  requiresMathematics: false,\r\n  requiresMultiStep: false\r\n};\r\n\r\n// Declare router variable\r\nlet router: LLMRouter;\r\n\r\n/**\r\n * Process a request through the LLM router\r\n * This is the main entry point for the LLM enhanced service\r\n */\r\nexport async function processRequest(request: LLMRequest): Promise<LLMResponse> {\r\n  if (!router) {\r\n    throw new Error('LLMRouter not initialized. Call initialize() first.');\r\n  }\r\n  return router.routeRequest(request);\r\n}\r\n\r\n/**\r\n * Set the OpenRouter service for the LLM service\r\n * This should be called during initialization with the OpenRouter service instance\r\n */\r\nexport function setOpenRouterService(service: any): void {\r\n  llmService.setOpenRouterService(service);\r\n}\r\n\r\n/**\r\n * Test the complexity assessment for a given query\r\n * Useful for debugging and understanding how the router works\r\n */\r\nexport async function testComplexityAssessment(query: string): Promise<any> {\r\n  if (!router) {\r\n    throw new Error('LLMRouter not initialized. Call initialize() first.');\r\n  }\r\n  return router.testComplexityAssessment(query);\r\n}\r\n\r\n/**\r\n * Initialize the LLM enhanced service\r\n * This should be called during application startup\r\n */\r\nexport async function initialize(): Promise<void> {\r\n  await llmService.initialize();\r\n  router = new LLMRouter(llmService);\r\n}\r\n\r\n/**\r\n * Sets whether complexity assessment should be LLM-driven.\r\n */\r\nexport function setLLMDrivenComplexity(enabled: boolean): void {\r\n  if (!router) {\r\n    throw new Error('LLMRouter not initialized. Call initialize() first.');\r\n  }\r\n  // Assuming ComplexityAssessor has a method to toggle this\r\n  // router.getComplexityAssessor().setLLMDriven(enabled);\r\n  // For now, let's log, this needs implementation in ComplexityAssessor and exposed via LLMRouter\r\n  console.log(`LLM-driven complexity assessment set to: ${enabled} (needs full implementation)`);\r\n}\r\n\r\n/**\r\n * Gets the status of the Enhanced LLM service.\r\n */\r\nexport async function getStatus(): Promise<any> {\r\n  if (!router) {\r\n    return {\r\n      initialized: false,\r\n      routerStatus: null,\r\n      error: 'LLMRouter not initialized. Call initialize() first.'\r\n    };\r\n  }\r\n  try {\r\n    return {\r\n      initialized: true,\r\n      routerStatus: await router.getRouterStatus(),\r\n    };\r\n  } catch (error) {\r\n    console.error('Error getting LLM Router status:', error);\r\n    return {\r\n      initialized: true, // Router object exists but method failed\r\n      routerStatus: null,\r\n      error: error instanceof Error ? error.message : 'Unknown error getting status'\r\n    };\r\n  }\r\n}\r\n\r\n// Export the singleton instance of llmService and other necessary exports\r\nexport { llmService };\r\n// Re-export LLMRouter if it's intended to be used externally as a class/type\r\nexport { LLMRouter } from './router/router';\r\n// Re-export LLMService class if needed\r\nexport { LLMService } from './services/llm-service';\r\n\r\n// Type re-exports for the module's public API.\r\n// These were already exported earlier using `export type { ... } from './types/llm-types'` \r\n// and `export type { ... } from './router/types'` which also makes them available for internal use.\r\n// The duplicate identifier errors suggest the final re-export block was problematic.\r\n// We ensure that types used internally (like LLMRequest, LLMResponse for processRequest function signature)\r\n// are available from their initial `export type ... from ...` or direct `import type` statements.\r\n\r\n// The following block was causing duplicate identifier errors and is removed:\r\n/*\r\nexport type { \r\n  ProcessingRequirements, \r\n  UserPreferences, \r\n  Message \r\n} from './types/llm-types'; \r\n*/ ", "'use strict';\n\nconst BINARY_TYPES = ['nodebuffer', 'arraybuffer', 'fragments'];\nconst hasBlob = typeof Blob !== 'undefined';\n\nif (hasBlob) BINARY_TYPES.push('blob');\n\nmodule.exports = {\n  BINARY_TYPES,\n  EMPTY_BUFFER: Buffer.alloc(0),\n  GUID: '258EAFA5-E914-47DA-95CA-C5AB0DC85B11',\n  hasBlob,\n  kForOnEventAttribute: Symbol('kIsForOnEventAttribute'),\n  kListener: Symbol('kListener'),\n  kStatusCode: Symbol('status-code'),\n  kWebSocket: Symbol('websocket'),\n  NOOP: () => {}\n};\n", "'use strict';\n\nconst { EMPTY_BUFFER } = require('./constants');\n\nconst FastBuffer = Buffer[Symbol.species];\n\n/**\n * Merges an array of buffers into a new buffer.\n *\n * @param {Buffer[]} list The array of buffers to concat\n * @param {Number} totalLength The total length of buffers in the list\n * @return {Buffer} The resulting buffer\n * @public\n */\nfunction concat(list, totalLength) {\n  if (list.length === 0) return EMPTY_BUFFER;\n  if (list.length === 1) return list[0];\n\n  const target = Buffer.allocUnsafe(totalLength);\n  let offset = 0;\n\n  for (let i = 0; i < list.length; i++) {\n    const buf = list[i];\n    target.set(buf, offset);\n    offset += buf.length;\n  }\n\n  if (offset < totalLength) {\n    return new FastBuffer(target.buffer, target.byteOffset, offset);\n  }\n\n  return target;\n}\n\n/**\n * Masks a buffer using the given mask.\n *\n * @param {Buffer} source The buffer to mask\n * @param {Buffer} mask The mask to use\n * @param {Buffer} output The buffer where to store the result\n * @param {Number} offset The offset at which to start writing\n * @param {Number} length The number of bytes to mask.\n * @public\n */\nfunction _mask(source, mask, output, offset, length) {\n  for (let i = 0; i < length; i++) {\n    output[offset + i] = source[i] ^ mask[i & 3];\n  }\n}\n\n/**\n * Unmasks a buffer using the given mask.\n *\n * @param {Buffer} buffer The buffer to unmask\n * @param {Buffer} mask The mask to use\n * @public\n */\nfunction _unmask(buffer, mask) {\n  for (let i = 0; i < buffer.length; i++) {\n    buffer[i] ^= mask[i & 3];\n  }\n}\n\n/**\n * Converts a buffer to an `ArrayBuffer`.\n *\n * @param {Buffer} buf The buffer to convert\n * @return {ArrayBuffer} Converted buffer\n * @public\n */\nfunction toArrayBuffer(buf) {\n  if (buf.length === buf.buffer.byteLength) {\n    return buf.buffer;\n  }\n\n  return buf.buffer.slice(buf.byteOffset, buf.byteOffset + buf.length);\n}\n\n/**\n * Converts `data` to a `Buffer`.\n *\n * @param {*} data The data to convert\n * @return {Buffer} The buffer\n * @throws {TypeError}\n * @public\n */\nfunction toBuffer(data) {\n  toBuffer.readOnly = true;\n\n  if (Buffer.isBuffer(data)) return data;\n\n  let buf;\n\n  if (data instanceof ArrayBuffer) {\n    buf = new FastBuffer(data);\n  } else if (ArrayBuffer.isView(data)) {\n    buf = new FastBuffer(data.buffer, data.byteOffset, data.byteLength);\n  } else {\n    buf = Buffer.from(data);\n    toBuffer.readOnly = false;\n  }\n\n  return buf;\n}\n\nmodule.exports = {\n  concat,\n  mask: _mask,\n  toArrayBuffer,\n  toBuffer,\n  unmask: _unmask\n};\n\n/* istanbul ignore else  */\nif (!process.env.WS_NO_BUFFER_UTIL) {\n  try {\n    const bufferUtil = require('bufferutil');\n\n    module.exports.mask = function (source, mask, output, offset, length) {\n      if (length < 48) _mask(source, mask, output, offset, length);\n      else bufferUtil.mask(source, mask, output, offset, length);\n    };\n\n    module.exports.unmask = function (buffer, mask) {\n      if (buffer.length < 32) _unmask(buffer, mask);\n      else bufferUtil.unmask(buffer, mask);\n    };\n  } catch (e) {\n    // Continue regardless of the error.\n  }\n}\n", "'use strict';\n\nconst kDone = Symbol('kDone');\nconst kRun = Symbol('kRun');\n\n/**\n * A very simple job queue with adjustable concurrency. Adapted from\n * https://github.com/STRML/async-limiter\n */\nclass Limiter {\n  /**\n   * Creates a new `Limiter`.\n   *\n   * @param {Number} [concurrency=Infinity] The maximum number of jobs allowed\n   *     to run concurrently\n   */\n  constructor(concurrency) {\n    this[kDone] = () => {\n      this.pending--;\n      this[kRun]();\n    };\n    this.concurrency = concurrency || Infinity;\n    this.jobs = [];\n    this.pending = 0;\n  }\n\n  /**\n   * Adds a job to the queue.\n   *\n   * @param {Function} job The job to run\n   * @public\n   */\n  add(job) {\n    this.jobs.push(job);\n    this[kRun]();\n  }\n\n  /**\n   * Removes a job from the queue and runs it if possible.\n   *\n   * @private\n   */\n  [kRun]() {\n    if (this.pending === this.concurrency) return;\n\n    if (this.jobs.length) {\n      const job = this.jobs.shift();\n\n      this.pending++;\n      job(this[kDone]);\n    }\n  }\n}\n\nmodule.exports = Limiter;\n", "'use strict';\n\nconst zlib = require('zlib');\n\nconst bufferUtil = require('./buffer-util');\nconst Limiter = require('./limiter');\nconst { kStatusCode } = require('./constants');\n\nconst FastBuffer = Buffer[Symbol.species];\nconst TRAILER = Buffer.from([0x00, 0x00, 0xff, 0xff]);\nconst kPerMessageDeflate = Symbol('permessage-deflate');\nconst kTotalLength = Symbol('total-length');\nconst kCallback = Symbol('callback');\nconst kBuffers = Symbol('buffers');\nconst kError = Symbol('error');\n\n//\n// We limit zlib concurrency, which prevents severe memory fragmentation\n// as documented in https://github.com/nodejs/node/issues/8871#issuecomment-250915913\n// and https://github.com/websockets/ws/issues/1202\n//\n// Intentionally global; it's the global thread pool that's an issue.\n//\nlet zlibLimiter;\n\n/**\n * permessage-deflate implementation.\n */\nclass PerMessageDeflate {\n  /**\n   * Creates a PerMessageDeflate instance.\n   *\n   * @param {Object} [options] Configuration options\n   * @param {(Boolean|Number)} [options.clientMaxWindowBits] Advertise support\n   *     for, or request, a custom client window size\n   * @param {Boolean} [options.clientNoContextTakeover=false] Advertise/\n   *     acknowledge disabling of client context takeover\n   * @param {Number} [options.concurrencyLimit=10] The number of concurrent\n   *     calls to zlib\n   * @param {(Boolean|Number)} [options.serverMaxWindowBits] Request/confirm the\n   *     use of a custom server window size\n   * @param {Boolean} [options.serverNoContextTakeover=false] Request/accept\n   *     disabling of server context takeover\n   * @param {Number} [options.threshold=1024] Size (in bytes) below which\n   *     messages should not be compressed if context takeover is disabled\n   * @param {Object} [options.zlibDeflateOptions] Options to pass to zlib on\n   *     deflate\n   * @param {Object} [options.zlibInflateOptions] Options to pass to zlib on\n   *     inflate\n   * @param {Boolean} [isServer=false] Create the instance in either server or\n   *     client mode\n   * @param {Number} [maxPayload=0] The maximum allowed message length\n   */\n  constructor(options, isServer, maxPayload) {\n    this._maxPayload = maxPayload | 0;\n    this._options = options || {};\n    this._threshold =\n      this._options.threshold !== undefined ? this._options.threshold : 1024;\n    this._isServer = !!isServer;\n    this._deflate = null;\n    this._inflate = null;\n\n    this.params = null;\n\n    if (!zlibLimiter) {\n      const concurrency =\n        this._options.concurrencyLimit !== undefined\n          ? this._options.concurrencyLimit\n          : 10;\n      zlibLimiter = new Limiter(concurrency);\n    }\n  }\n\n  /**\n   * @type {String}\n   */\n  static get extensionName() {\n    return 'permessage-deflate';\n  }\n\n  /**\n   * Create an extension negotiation offer.\n   *\n   * @return {Object} Extension parameters\n   * @public\n   */\n  offer() {\n    const params = {};\n\n    if (this._options.serverNoContextTakeover) {\n      params.server_no_context_takeover = true;\n    }\n    if (this._options.clientNoContextTakeover) {\n      params.client_no_context_takeover = true;\n    }\n    if (this._options.serverMaxWindowBits) {\n      params.server_max_window_bits = this._options.serverMaxWindowBits;\n    }\n    if (this._options.clientMaxWindowBits) {\n      params.client_max_window_bits = this._options.clientMaxWindowBits;\n    } else if (this._options.clientMaxWindowBits == null) {\n      params.client_max_window_bits = true;\n    }\n\n    return params;\n  }\n\n  /**\n   * Accept an extension negotiation offer/response.\n   *\n   * @param {Array} configurations The extension negotiation offers/reponse\n   * @return {Object} Accepted configuration\n   * @public\n   */\n  accept(configurations) {\n    configurations = this.normalizeParams(configurations);\n\n    this.params = this._isServer\n      ? this.acceptAsServer(configurations)\n      : this.acceptAsClient(configurations);\n\n    return this.params;\n  }\n\n  /**\n   * Releases all resources used by the extension.\n   *\n   * @public\n   */\n  cleanup() {\n    if (this._inflate) {\n      this._inflate.close();\n      this._inflate = null;\n    }\n\n    if (this._deflate) {\n      const callback = this._deflate[kCallback];\n\n      this._deflate.close();\n      this._deflate = null;\n\n      if (callback) {\n        callback(\n          new Error(\n            'The deflate stream was closed while data was being processed'\n          )\n        );\n      }\n    }\n  }\n\n  /**\n   *  Accept an extension negotiation offer.\n   *\n   * @param {Array} offers The extension negotiation offers\n   * @return {Object} Accepted configuration\n   * @private\n   */\n  acceptAsServer(offers) {\n    const opts = this._options;\n    const accepted = offers.find((params) => {\n      if (\n        (opts.serverNoContextTakeover === false &&\n          params.server_no_context_takeover) ||\n        (params.server_max_window_bits &&\n          (opts.serverMaxWindowBits === false ||\n            (typeof opts.serverMaxWindowBits === 'number' &&\n              opts.serverMaxWindowBits > params.server_max_window_bits))) ||\n        (typeof opts.clientMaxWindowBits === 'number' &&\n          !params.client_max_window_bits)\n      ) {\n        return false;\n      }\n\n      return true;\n    });\n\n    if (!accepted) {\n      throw new Error('None of the extension offers can be accepted');\n    }\n\n    if (opts.serverNoContextTakeover) {\n      accepted.server_no_context_takeover = true;\n    }\n    if (opts.clientNoContextTakeover) {\n      accepted.client_no_context_takeover = true;\n    }\n    if (typeof opts.serverMaxWindowBits === 'number') {\n      accepted.server_max_window_bits = opts.serverMaxWindowBits;\n    }\n    if (typeof opts.clientMaxWindowBits === 'number') {\n      accepted.client_max_window_bits = opts.clientMaxWindowBits;\n    } else if (\n      accepted.client_max_window_bits === true ||\n      opts.clientMaxWindowBits === false\n    ) {\n      delete accepted.client_max_window_bits;\n    }\n\n    return accepted;\n  }\n\n  /**\n   * Accept the extension negotiation response.\n   *\n   * @param {Array} response The extension negotiation response\n   * @return {Object} Accepted configuration\n   * @private\n   */\n  acceptAsClient(response) {\n    const params = response[0];\n\n    if (\n      this._options.clientNoContextTakeover === false &&\n      params.client_no_context_takeover\n    ) {\n      throw new Error('Unexpected parameter \"client_no_context_takeover\"');\n    }\n\n    if (!params.client_max_window_bits) {\n      if (typeof this._options.clientMaxWindowBits === 'number') {\n        params.client_max_window_bits = this._options.clientMaxWindowBits;\n      }\n    } else if (\n      this._options.clientMaxWindowBits === false ||\n      (typeof this._options.clientMaxWindowBits === 'number' &&\n        params.client_max_window_bits > this._options.clientMaxWindowBits)\n    ) {\n      throw new Error(\n        'Unexpected or invalid parameter \"client_max_window_bits\"'\n      );\n    }\n\n    return params;\n  }\n\n  /**\n   * Normalize parameters.\n   *\n   * @param {Array} configurations The extension negotiation offers/reponse\n   * @return {Array} The offers/response with normalized parameters\n   * @private\n   */\n  normalizeParams(configurations) {\n    configurations.forEach((params) => {\n      Object.keys(params).forEach((key) => {\n        let value = params[key];\n\n        if (value.length > 1) {\n          throw new Error(`Parameter \"${key}\" must have only a single value`);\n        }\n\n        value = value[0];\n\n        if (key === 'client_max_window_bits') {\n          if (value !== true) {\n            const num = +value;\n            if (!Number.isInteger(num) || num < 8 || num > 15) {\n              throw new TypeError(\n                `Invalid value for parameter \"${key}\": ${value}`\n              );\n            }\n            value = num;\n          } else if (!this._isServer) {\n            throw new TypeError(\n              `Invalid value for parameter \"${key}\": ${value}`\n            );\n          }\n        } else if (key === 'server_max_window_bits') {\n          const num = +value;\n          if (!Number.isInteger(num) || num < 8 || num > 15) {\n            throw new TypeError(\n              `Invalid value for parameter \"${key}\": ${value}`\n            );\n          }\n          value = num;\n        } else if (\n          key === 'client_no_context_takeover' ||\n          key === 'server_no_context_takeover'\n        ) {\n          if (value !== true) {\n            throw new TypeError(\n              `Invalid value for parameter \"${key}\": ${value}`\n            );\n          }\n        } else {\n          throw new Error(`Unknown parameter \"${key}\"`);\n        }\n\n        params[key] = value;\n      });\n    });\n\n    return configurations;\n  }\n\n  /**\n   * Decompress data. Concurrency limited.\n   *\n   * @param {Buffer} data Compressed data\n   * @param {Boolean} fin Specifies whether or not this is the last fragment\n   * @param {Function} callback Callback\n   * @public\n   */\n  decompress(data, fin, callback) {\n    zlibLimiter.add((done) => {\n      this._decompress(data, fin, (err, result) => {\n        done();\n        callback(err, result);\n      });\n    });\n  }\n\n  /**\n   * Compress data. Concurrency limited.\n   *\n   * @param {(Buffer|String)} data Data to compress\n   * @param {Boolean} fin Specifies whether or not this is the last fragment\n   * @param {Function} callback Callback\n   * @public\n   */\n  compress(data, fin, callback) {\n    zlibLimiter.add((done) => {\n      this._compress(data, fin, (err, result) => {\n        done();\n        callback(err, result);\n      });\n    });\n  }\n\n  /**\n   * Decompress data.\n   *\n   * @param {Buffer} data Compressed data\n   * @param {Boolean} fin Specifies whether or not this is the last fragment\n   * @param {Function} callback Callback\n   * @private\n   */\n  _decompress(data, fin, callback) {\n    const endpoint = this._isServer ? 'client' : 'server';\n\n    if (!this._inflate) {\n      const key = `${endpoint}_max_window_bits`;\n      const windowBits =\n        typeof this.params[key] !== 'number'\n          ? zlib.Z_DEFAULT_WINDOWBITS\n          : this.params[key];\n\n      this._inflate = zlib.createInflateRaw({\n        ...this._options.zlibInflateOptions,\n        windowBits\n      });\n      this._inflate[kPerMessageDeflate] = this;\n      this._inflate[kTotalLength] = 0;\n      this._inflate[kBuffers] = [];\n      this._inflate.on('error', inflateOnError);\n      this._inflate.on('data', inflateOnData);\n    }\n\n    this._inflate[kCallback] = callback;\n\n    this._inflate.write(data);\n    if (fin) this._inflate.write(TRAILER);\n\n    this._inflate.flush(() => {\n      const err = this._inflate[kError];\n\n      if (err) {\n        this._inflate.close();\n        this._inflate = null;\n        callback(err);\n        return;\n      }\n\n      const data = bufferUtil.concat(\n        this._inflate[kBuffers],\n        this._inflate[kTotalLength]\n      );\n\n      if (this._inflate._readableState.endEmitted) {\n        this._inflate.close();\n        this._inflate = null;\n      } else {\n        this._inflate[kTotalLength] = 0;\n        this._inflate[kBuffers] = [];\n\n        if (fin && this.params[`${endpoint}_no_context_takeover`]) {\n          this._inflate.reset();\n        }\n      }\n\n      callback(null, data);\n    });\n  }\n\n  /**\n   * Compress data.\n   *\n   * @param {(Buffer|String)} data Data to compress\n   * @param {Boolean} fin Specifies whether or not this is the last fragment\n   * @param {Function} callback Callback\n   * @private\n   */\n  _compress(data, fin, callback) {\n    const endpoint = this._isServer ? 'server' : 'client';\n\n    if (!this._deflate) {\n      const key = `${endpoint}_max_window_bits`;\n      const windowBits =\n        typeof this.params[key] !== 'number'\n          ? zlib.Z_DEFAULT_WINDOWBITS\n          : this.params[key];\n\n      this._deflate = zlib.createDeflateRaw({\n        ...this._options.zlibDeflateOptions,\n        windowBits\n      });\n\n      this._deflate[kTotalLength] = 0;\n      this._deflate[kBuffers] = [];\n\n      this._deflate.on('data', deflateOnData);\n    }\n\n    this._deflate[kCallback] = callback;\n\n    this._deflate.write(data);\n    this._deflate.flush(zlib.Z_SYNC_FLUSH, () => {\n      if (!this._deflate) {\n        //\n        // The deflate stream was closed while data was being processed.\n        //\n        return;\n      }\n\n      let data = bufferUtil.concat(\n        this._deflate[kBuffers],\n        this._deflate[kTotalLength]\n      );\n\n      if (fin) {\n        data = new FastBuffer(data.buffer, data.byteOffset, data.length - 4);\n      }\n\n      //\n      // Ensure that the callback will not be called again in\n      // `PerMessageDeflate#cleanup()`.\n      //\n      this._deflate[kCallback] = null;\n\n      this._deflate[kTotalLength] = 0;\n      this._deflate[kBuffers] = [];\n\n      if (fin && this.params[`${endpoint}_no_context_takeover`]) {\n        this._deflate.reset();\n      }\n\n      callback(null, data);\n    });\n  }\n}\n\nmodule.exports = PerMessageDeflate;\n\n/**\n * The listener of the `zlib.DeflateRaw` stream `'data'` event.\n *\n * @param {Buffer} chunk A chunk of data\n * @private\n */\nfunction deflateOnData(chunk) {\n  this[kBuffers].push(chunk);\n  this[kTotalLength] += chunk.length;\n}\n\n/**\n * The listener of the `zlib.InflateRaw` stream `'data'` event.\n *\n * @param {Buffer} chunk A chunk of data\n * @private\n */\nfunction inflateOnData(chunk) {\n  this[kTotalLength] += chunk.length;\n\n  if (\n    this[kPerMessageDeflate]._maxPayload < 1 ||\n    this[kTotalLength] <= this[kPerMessageDeflate]._maxPayload\n  ) {\n    this[kBuffers].push(chunk);\n    return;\n  }\n\n  this[kError] = new RangeError('Max payload size exceeded');\n  this[kError].code = 'WS_ERR_UNSUPPORTED_MESSAGE_LENGTH';\n  this[kError][kStatusCode] = 1009;\n  this.removeListener('data', inflateOnData);\n\n  //\n  // The choice to employ `zlib.reset()` over `zlib.close()` is dictated by the\n  // fact that in Node.js versions prior to 13.10.0, the callback for\n  // `zlib.flush()` is not called if `zlib.close()` is used. Utilizing\n  // `zlib.reset()` ensures that either the callback is invoked or an error is\n  // emitted.\n  //\n  this.reset();\n}\n\n/**\n * The listener of the `zlib.InflateRaw` stream `'error'` event.\n *\n * @param {Error} err The emitted error\n * @private\n */\nfunction inflateOnError(err) {\n  //\n  // There is no need to call `Zlib#close()` as the handle is automatically\n  // closed when an error is emitted.\n  //\n  this[kPerMessageDeflate]._inflate = null;\n\n  if (this[kError]) {\n    this[kCallback](this[kError]);\n    return;\n  }\n\n  err[kStatusCode] = 1007;\n  this[kCallback](err);\n}\n", "'use strict';\n\nconst { isUtf8 } = require('buffer');\n\nconst { hasBlob } = require('./constants');\n\n//\n// Allowed token characters:\n//\n// '!', '#', '$', '%', '&', ''', '*', '+', '-',\n// '.', 0-9, A-Z, '^', '_', '`', a-z, '|', '~'\n//\n// tokenChars[32] === 0 // ' '\n// tokenChars[33] === 1 // '!'\n// tokenChars[34] === 0 // '\"'\n// ...\n//\n// prettier-ignore\nconst tokenChars = [\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, // 0 - 15\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, // 16 - 31\n  0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, // 32 - 47\n  1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, // 48 - 63\n  0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, // 64 - 79\n  1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, // 80 - 95\n  1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, // 96 - 111\n  1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0 // 112 - 127\n];\n\n/**\n * Checks if a status code is allowed in a close frame.\n *\n * @param {Number} code The status code\n * @return {Boolean} `true` if the status code is valid, else `false`\n * @public\n */\nfunction isValidStatusCode(code) {\n  return (\n    (code >= 1000 &&\n      code <= 1014 &&\n      code !== 1004 &&\n      code !== 1005 &&\n      code !== 1006) ||\n    (code >= 3000 && code <= 4999)\n  );\n}\n\n/**\n * Checks if a given buffer contains only correct UTF-8.\n * Ported from https://www.cl.cam.ac.uk/%7Emgk25/ucs/utf8_check.c by\n * Markus Kuhn.\n *\n * @param {Buffer} buf The buffer to check\n * @return {Boolean} `true` if `buf` contains only correct UTF-8, else `false`\n * @public\n */\nfunction _isValidUTF8(buf) {\n  const len = buf.length;\n  let i = 0;\n\n  while (i < len) {\n    if ((buf[i] & 0x80) === 0) {\n      // 0xxxxxxx\n      i++;\n    } else if ((buf[i] & 0xe0) === 0xc0) {\n      // 110xxxxx 10xxxxxx\n      if (\n        i + 1 === len ||\n        (buf[i + 1] & 0xc0) !== 0x80 ||\n        (buf[i] & 0xfe) === 0xc0 // Overlong\n      ) {\n        return false;\n      }\n\n      i += 2;\n    } else if ((buf[i] & 0xf0) === 0xe0) {\n      // 1110xxxx 10xxxxxx 10xxxxxx\n      if (\n        i + 2 >= len ||\n        (buf[i + 1] & 0xc0) !== 0x80 ||\n        (buf[i + 2] & 0xc0) !== 0x80 ||\n        (buf[i] === 0xe0 && (buf[i + 1] & 0xe0) === 0x80) || // Overlong\n        (buf[i] === 0xed && (buf[i + 1] & 0xe0) === 0xa0) // Surrogate (U+D800 - U+DFFF)\n      ) {\n        return false;\n      }\n\n      i += 3;\n    } else if ((buf[i] & 0xf8) === 0xf0) {\n      // 11110xxx 10xxxxxx 10xxxxxx 10xxxxxx\n      if (\n        i + 3 >= len ||\n        (buf[i + 1] & 0xc0) !== 0x80 ||\n        (buf[i + 2] & 0xc0) !== 0x80 ||\n        (buf[i + 3] & 0xc0) !== 0x80 ||\n        (buf[i] === 0xf0 && (buf[i + 1] & 0xf0) === 0x80) || // Overlong\n        (buf[i] === 0xf4 && buf[i + 1] > 0x8f) ||\n        buf[i] > 0xf4 // > U+10FFFF\n      ) {\n        return false;\n      }\n\n      i += 4;\n    } else {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n/**\n * Determines whether a value is a `Blob`.\n *\n * @param {*} value The value to be tested\n * @return {Boolean} `true` if `value` is a `Blob`, else `false`\n * @private\n */\nfunction isBlob(value) {\n  return (\n    hasBlob &&\n    typeof value === 'object' &&\n    typeof value.arrayBuffer === 'function' &&\n    typeof value.type === 'string' &&\n    typeof value.stream === 'function' &&\n    (value[Symbol.toStringTag] === 'Blob' ||\n      value[Symbol.toStringTag] === 'File')\n  );\n}\n\nmodule.exports = {\n  isBlob,\n  isValidStatusCode,\n  isValidUTF8: _isValidUTF8,\n  tokenChars\n};\n\nif (isUtf8) {\n  module.exports.isValidUTF8 = function (buf) {\n    return buf.length < 24 ? _isValidUTF8(buf) : isUtf8(buf);\n  };\n} /* istanbul ignore else  */ else if (!process.env.WS_NO_UTF_8_VALIDATE) {\n  try {\n    const isValidUTF8 = require('utf-8-validate');\n\n    module.exports.isValidUTF8 = function (buf) {\n      return buf.length < 32 ? _isValidUTF8(buf) : isValidUTF8(buf);\n    };\n  } catch (e) {\n    // Continue regardless of the error.\n  }\n}\n", "'use strict';\n\nconst { Writable } = require('stream');\n\nconst PerMessageDeflate = require('./permessage-deflate');\nconst {\n  BINARY_TYPES,\n  EMPTY_BUFFER,\n  kStatusCode,\n  kWebSocket\n} = require('./constants');\nconst { concat, toArrayBuffer, unmask } = require('./buffer-util');\nconst { isValidStatusCode, isValidUTF8 } = require('./validation');\n\nconst FastBuffer = Buffer[Symbol.species];\n\nconst GET_INFO = 0;\nconst GET_PAYLOAD_LENGTH_16 = 1;\nconst GET_PAYLOAD_LENGTH_64 = 2;\nconst GET_MASK = 3;\nconst GET_DATA = 4;\nconst INFLATING = 5;\nconst DEFER_EVENT = 6;\n\n/**\n * HyBi Receiver implementation.\n *\n * @extends Writable\n */\nclass Receiver extends Writable {\n  /**\n   * Creates a Receiver instance.\n   *\n   * @param {Object} [options] Options object\n   * @param {Boolean} [options.allowSynchronousEvents=true] Specifies whether\n   *     any of the `'message'`, `'ping'`, and `'pong'` events can be emitted\n   *     multiple times in the same tick\n   * @param {String} [options.binaryType=nodebuffer] The type for binary data\n   * @param {Object} [options.extensions] An object containing the negotiated\n   *     extensions\n   * @param {Boolean} [options.isServer=false] Specifies whether to operate in\n   *     client or server mode\n   * @param {Number} [options.maxPayload=0] The maximum allowed message length\n   * @param {Boolean} [options.skipUTF8Validation=false] Specifies whether or\n   *     not to skip UTF-8 validation for text and close messages\n   */\n  constructor(options = {}) {\n    super();\n\n    this._allowSynchronousEvents =\n      options.allowSynchronousEvents !== undefined\n        ? options.allowSynchronousEvents\n        : true;\n    this._binaryType = options.binaryType || BINARY_TYPES[0];\n    this._extensions = options.extensions || {};\n    this._isServer = !!options.isServer;\n    this._maxPayload = options.maxPayload | 0;\n    this._skipUTF8Validation = !!options.skipUTF8Validation;\n    this[kWebSocket] = undefined;\n\n    this._bufferedBytes = 0;\n    this._buffers = [];\n\n    this._compressed = false;\n    this._payloadLength = 0;\n    this._mask = undefined;\n    this._fragmented = 0;\n    this._masked = false;\n    this._fin = false;\n    this._opcode = 0;\n\n    this._totalPayloadLength = 0;\n    this._messageLength = 0;\n    this._fragments = [];\n\n    this._errored = false;\n    this._loop = false;\n    this._state = GET_INFO;\n  }\n\n  /**\n   * Implements `Writable.prototype._write()`.\n   *\n   * @param {Buffer} chunk The chunk of data to write\n   * @param {String} encoding The character encoding of `chunk`\n   * @param {Function} cb Callback\n   * @private\n   */\n  _write(chunk, encoding, cb) {\n    if (this._opcode === 0x08 && this._state == GET_INFO) return cb();\n\n    this._bufferedBytes += chunk.length;\n    this._buffers.push(chunk);\n    this.startLoop(cb);\n  }\n\n  /**\n   * Consumes `n` bytes from the buffered data.\n   *\n   * @param {Number} n The number of bytes to consume\n   * @return {Buffer} The consumed bytes\n   * @private\n   */\n  consume(n) {\n    this._bufferedBytes -= n;\n\n    if (n === this._buffers[0].length) return this._buffers.shift();\n\n    if (n < this._buffers[0].length) {\n      const buf = this._buffers[0];\n      this._buffers[0] = new FastBuffer(\n        buf.buffer,\n        buf.byteOffset + n,\n        buf.length - n\n      );\n\n      return new FastBuffer(buf.buffer, buf.byteOffset, n);\n    }\n\n    const dst = Buffer.allocUnsafe(n);\n\n    do {\n      const buf = this._buffers[0];\n      const offset = dst.length - n;\n\n      if (n >= buf.length) {\n        dst.set(this._buffers.shift(), offset);\n      } else {\n        dst.set(new Uint8Array(buf.buffer, buf.byteOffset, n), offset);\n        this._buffers[0] = new FastBuffer(\n          buf.buffer,\n          buf.byteOffset + n,\n          buf.length - n\n        );\n      }\n\n      n -= buf.length;\n    } while (n > 0);\n\n    return dst;\n  }\n\n  /**\n   * Starts the parsing loop.\n   *\n   * @param {Function} cb Callback\n   * @private\n   */\n  startLoop(cb) {\n    this._loop = true;\n\n    do {\n      switch (this._state) {\n        case GET_INFO:\n          this.getInfo(cb);\n          break;\n        case GET_PAYLOAD_LENGTH_16:\n          this.getPayloadLength16(cb);\n          break;\n        case GET_PAYLOAD_LENGTH_64:\n          this.getPayloadLength64(cb);\n          break;\n        case GET_MASK:\n          this.getMask();\n          break;\n        case GET_DATA:\n          this.getData(cb);\n          break;\n        case INFLATING:\n        case DEFER_EVENT:\n          this._loop = false;\n          return;\n      }\n    } while (this._loop);\n\n    if (!this._errored) cb();\n  }\n\n  /**\n   * Reads the first two bytes of a frame.\n   *\n   * @param {Function} cb Callback\n   * @private\n   */\n  getInfo(cb) {\n    if (this._bufferedBytes < 2) {\n      this._loop = false;\n      return;\n    }\n\n    const buf = this.consume(2);\n\n    if ((buf[0] & 0x30) !== 0x00) {\n      const error = this.createError(\n        RangeError,\n        'RSV2 and RSV3 must be clear',\n        true,\n        1002,\n        'WS_ERR_UNEXPECTED_RSV_2_3'\n      );\n\n      cb(error);\n      return;\n    }\n\n    const compressed = (buf[0] & 0x40) === 0x40;\n\n    if (compressed && !this._extensions[PerMessageDeflate.extensionName]) {\n      const error = this.createError(\n        RangeError,\n        'RSV1 must be clear',\n        true,\n        1002,\n        'WS_ERR_UNEXPECTED_RSV_1'\n      );\n\n      cb(error);\n      return;\n    }\n\n    this._fin = (buf[0] & 0x80) === 0x80;\n    this._opcode = buf[0] & 0x0f;\n    this._payloadLength = buf[1] & 0x7f;\n\n    if (this._opcode === 0x00) {\n      if (compressed) {\n        const error = this.createError(\n          RangeError,\n          'RSV1 must be clear',\n          true,\n          1002,\n          'WS_ERR_UNEXPECTED_RSV_1'\n        );\n\n        cb(error);\n        return;\n      }\n\n      if (!this._fragmented) {\n        const error = this.createError(\n          RangeError,\n          'invalid opcode 0',\n          true,\n          1002,\n          'WS_ERR_INVALID_OPCODE'\n        );\n\n        cb(error);\n        return;\n      }\n\n      this._opcode = this._fragmented;\n    } else if (this._opcode === 0x01 || this._opcode === 0x02) {\n      if (this._fragmented) {\n        const error = this.createError(\n          RangeError,\n          `invalid opcode ${this._opcode}`,\n          true,\n          1002,\n          'WS_ERR_INVALID_OPCODE'\n        );\n\n        cb(error);\n        return;\n      }\n\n      this._compressed = compressed;\n    } else if (this._opcode > 0x07 && this._opcode < 0x0b) {\n      if (!this._fin) {\n        const error = this.createError(\n          RangeError,\n          'FIN must be set',\n          true,\n          1002,\n          'WS_ERR_EXPECTED_FIN'\n        );\n\n        cb(error);\n        return;\n      }\n\n      if (compressed) {\n        const error = this.createError(\n          RangeError,\n          'RSV1 must be clear',\n          true,\n          1002,\n          'WS_ERR_UNEXPECTED_RSV_1'\n        );\n\n        cb(error);\n        return;\n      }\n\n      if (\n        this._payloadLength > 0x7d ||\n        (this._opcode === 0x08 && this._payloadLength === 1)\n      ) {\n        const error = this.createError(\n          RangeError,\n          `invalid payload length ${this._payloadLength}`,\n          true,\n          1002,\n          'WS_ERR_INVALID_CONTROL_PAYLOAD_LENGTH'\n        );\n\n        cb(error);\n        return;\n      }\n    } else {\n      const error = this.createError(\n        RangeError,\n        `invalid opcode ${this._opcode}`,\n        true,\n        1002,\n        'WS_ERR_INVALID_OPCODE'\n      );\n\n      cb(error);\n      return;\n    }\n\n    if (!this._fin && !this._fragmented) this._fragmented = this._opcode;\n    this._masked = (buf[1] & 0x80) === 0x80;\n\n    if (this._isServer) {\n      if (!this._masked) {\n        const error = this.createError(\n          RangeError,\n          'MASK must be set',\n          true,\n          1002,\n          'WS_ERR_EXPECTED_MASK'\n        );\n\n        cb(error);\n        return;\n      }\n    } else if (this._masked) {\n      const error = this.createError(\n        RangeError,\n        'MASK must be clear',\n        true,\n        1002,\n        'WS_ERR_UNEXPECTED_MASK'\n      );\n\n      cb(error);\n      return;\n    }\n\n    if (this._payloadLength === 126) this._state = GET_PAYLOAD_LENGTH_16;\n    else if (this._payloadLength === 127) this._state = GET_PAYLOAD_LENGTH_64;\n    else this.haveLength(cb);\n  }\n\n  /**\n   * Gets extended payload length (7+16).\n   *\n   * @param {Function} cb Callback\n   * @private\n   */\n  getPayloadLength16(cb) {\n    if (this._bufferedBytes < 2) {\n      this._loop = false;\n      return;\n    }\n\n    this._payloadLength = this.consume(2).readUInt16BE(0);\n    this.haveLength(cb);\n  }\n\n  /**\n   * Gets extended payload length (7+64).\n   *\n   * @param {Function} cb Callback\n   * @private\n   */\n  getPayloadLength64(cb) {\n    if (this._bufferedBytes < 8) {\n      this._loop = false;\n      return;\n    }\n\n    const buf = this.consume(8);\n    const num = buf.readUInt32BE(0);\n\n    //\n    // The maximum safe integer in JavaScript is 2^53 - 1. An error is returned\n    // if payload length is greater than this number.\n    //\n    if (num > Math.pow(2, 53 - 32) - 1) {\n      const error = this.createError(\n        RangeError,\n        'Unsupported WebSocket frame: payload length > 2^53 - 1',\n        false,\n        1009,\n        'WS_ERR_UNSUPPORTED_DATA_PAYLOAD_LENGTH'\n      );\n\n      cb(error);\n      return;\n    }\n\n    this._payloadLength = num * Math.pow(2, 32) + buf.readUInt32BE(4);\n    this.haveLength(cb);\n  }\n\n  /**\n   * Payload length has been read.\n   *\n   * @param {Function} cb Callback\n   * @private\n   */\n  haveLength(cb) {\n    if (this._payloadLength && this._opcode < 0x08) {\n      this._totalPayloadLength += this._payloadLength;\n      if (this._totalPayloadLength > this._maxPayload && this._maxPayload > 0) {\n        const error = this.createError(\n          RangeError,\n          'Max payload size exceeded',\n          false,\n          1009,\n          'WS_ERR_UNSUPPORTED_MESSAGE_LENGTH'\n        );\n\n        cb(error);\n        return;\n      }\n    }\n\n    if (this._masked) this._state = GET_MASK;\n    else this._state = GET_DATA;\n  }\n\n  /**\n   * Reads mask bytes.\n   *\n   * @private\n   */\n  getMask() {\n    if (this._bufferedBytes < 4) {\n      this._loop = false;\n      return;\n    }\n\n    this._mask = this.consume(4);\n    this._state = GET_DATA;\n  }\n\n  /**\n   * Reads data bytes.\n   *\n   * @param {Function} cb Callback\n   * @private\n   */\n  getData(cb) {\n    let data = EMPTY_BUFFER;\n\n    if (this._payloadLength) {\n      if (this._bufferedBytes < this._payloadLength) {\n        this._loop = false;\n        return;\n      }\n\n      data = this.consume(this._payloadLength);\n\n      if (\n        this._masked &&\n        (this._mask[0] | this._mask[1] | this._mask[2] | this._mask[3]) !== 0\n      ) {\n        unmask(data, this._mask);\n      }\n    }\n\n    if (this._opcode > 0x07) {\n      this.controlMessage(data, cb);\n      return;\n    }\n\n    if (this._compressed) {\n      this._state = INFLATING;\n      this.decompress(data, cb);\n      return;\n    }\n\n    if (data.length) {\n      //\n      // This message is not compressed so its length is the sum of the payload\n      // length of all fragments.\n      //\n      this._messageLength = this._totalPayloadLength;\n      this._fragments.push(data);\n    }\n\n    this.dataMessage(cb);\n  }\n\n  /**\n   * Decompresses data.\n   *\n   * @param {Buffer} data Compressed data\n   * @param {Function} cb Callback\n   * @private\n   */\n  decompress(data, cb) {\n    const perMessageDeflate = this._extensions[PerMessageDeflate.extensionName];\n\n    perMessageDeflate.decompress(data, this._fin, (err, buf) => {\n      if (err) return cb(err);\n\n      if (buf.length) {\n        this._messageLength += buf.length;\n        if (this._messageLength > this._maxPayload && this._maxPayload > 0) {\n          const error = this.createError(\n            RangeError,\n            'Max payload size exceeded',\n            false,\n            1009,\n            'WS_ERR_UNSUPPORTED_MESSAGE_LENGTH'\n          );\n\n          cb(error);\n          return;\n        }\n\n        this._fragments.push(buf);\n      }\n\n      this.dataMessage(cb);\n      if (this._state === GET_INFO) this.startLoop(cb);\n    });\n  }\n\n  /**\n   * Handles a data message.\n   *\n   * @param {Function} cb Callback\n   * @private\n   */\n  dataMessage(cb) {\n    if (!this._fin) {\n      this._state = GET_INFO;\n      return;\n    }\n\n    const messageLength = this._messageLength;\n    const fragments = this._fragments;\n\n    this._totalPayloadLength = 0;\n    this._messageLength = 0;\n    this._fragmented = 0;\n    this._fragments = [];\n\n    if (this._opcode === 2) {\n      let data;\n\n      if (this._binaryType === 'nodebuffer') {\n        data = concat(fragments, messageLength);\n      } else if (this._binaryType === 'arraybuffer') {\n        data = toArrayBuffer(concat(fragments, messageLength));\n      } else if (this._binaryType === 'blob') {\n        data = new Blob(fragments);\n      } else {\n        data = fragments;\n      }\n\n      if (this._allowSynchronousEvents) {\n        this.emit('message', data, true);\n        this._state = GET_INFO;\n      } else {\n        this._state = DEFER_EVENT;\n        setImmediate(() => {\n          this.emit('message', data, true);\n          this._state = GET_INFO;\n          this.startLoop(cb);\n        });\n      }\n    } else {\n      const buf = concat(fragments, messageLength);\n\n      if (!this._skipUTF8Validation && !isValidUTF8(buf)) {\n        const error = this.createError(\n          Error,\n          'invalid UTF-8 sequence',\n          true,\n          1007,\n          'WS_ERR_INVALID_UTF8'\n        );\n\n        cb(error);\n        return;\n      }\n\n      if (this._state === INFLATING || this._allowSynchronousEvents) {\n        this.emit('message', buf, false);\n        this._state = GET_INFO;\n      } else {\n        this._state = DEFER_EVENT;\n        setImmediate(() => {\n          this.emit('message', buf, false);\n          this._state = GET_INFO;\n          this.startLoop(cb);\n        });\n      }\n    }\n  }\n\n  /**\n   * Handles a control message.\n   *\n   * @param {Buffer} data Data to handle\n   * @return {(Error|RangeError|undefined)} A possible error\n   * @private\n   */\n  controlMessage(data, cb) {\n    if (this._opcode === 0x08) {\n      if (data.length === 0) {\n        this._loop = false;\n        this.emit('conclude', 1005, EMPTY_BUFFER);\n        this.end();\n      } else {\n        const code = data.readUInt16BE(0);\n\n        if (!isValidStatusCode(code)) {\n          const error = this.createError(\n            RangeError,\n            `invalid status code ${code}`,\n            true,\n            1002,\n            'WS_ERR_INVALID_CLOSE_CODE'\n          );\n\n          cb(error);\n          return;\n        }\n\n        const buf = new FastBuffer(\n          data.buffer,\n          data.byteOffset + 2,\n          data.length - 2\n        );\n\n        if (!this._skipUTF8Validation && !isValidUTF8(buf)) {\n          const error = this.createError(\n            Error,\n            'invalid UTF-8 sequence',\n            true,\n            1007,\n            'WS_ERR_INVALID_UTF8'\n          );\n\n          cb(error);\n          return;\n        }\n\n        this._loop = false;\n        this.emit('conclude', code, buf);\n        this.end();\n      }\n\n      this._state = GET_INFO;\n      return;\n    }\n\n    if (this._allowSynchronousEvents) {\n      this.emit(this._opcode === 0x09 ? 'ping' : 'pong', data);\n      this._state = GET_INFO;\n    } else {\n      this._state = DEFER_EVENT;\n      setImmediate(() => {\n        this.emit(this._opcode === 0x09 ? 'ping' : 'pong', data);\n        this._state = GET_INFO;\n        this.startLoop(cb);\n      });\n    }\n  }\n\n  /**\n   * Builds an error object.\n   *\n   * @param {function(new:Error|RangeError)} ErrorCtor The error constructor\n   * @param {String} message The error message\n   * @param {Boolean} prefix Specifies whether or not to add a default prefix to\n   *     `message`\n   * @param {Number} statusCode The status code\n   * @param {String} errorCode The exposed error code\n   * @return {(Error|RangeError)} The error\n   * @private\n   */\n  createError(ErrorCtor, message, prefix, statusCode, errorCode) {\n    this._loop = false;\n    this._errored = true;\n\n    const err = new ErrorCtor(\n      prefix ? `Invalid WebSocket frame: ${message}` : message\n    );\n\n    Error.captureStackTrace(err, this.createError);\n    err.code = errorCode;\n    err[kStatusCode] = statusCode;\n    return err;\n  }\n}\n\nmodule.exports = Receiver;\n", "/* eslint no-unused-vars: [\"error\", { \"varsIgnorePattern\": \"^Duplex\" }] */\n\n'use strict';\n\nconst { Duplex } = require('stream');\nconst { randomFillSync } = require('crypto');\n\nconst PerMessageDeflate = require('./permessage-deflate');\nconst { EMPTY_BUFFER, kWebSocket, NOOP } = require('./constants');\nconst { isBlob, isValidStatusCode } = require('./validation');\nconst { mask: applyMask, toBuffer } = require('./buffer-util');\n\nconst kByteLength = Symbol('kByteLength');\nconst maskBuffer = Buffer.alloc(4);\nconst RANDOM_POOL_SIZE = 8 * 1024;\nlet randomPool;\nlet randomPoolPointer = RANDOM_POOL_SIZE;\n\nconst DEFAULT = 0;\nconst DEFLATING = 1;\nconst GET_BLOB_DATA = 2;\n\n/**\n * HyBi Sender implementation.\n */\nclass Sender {\n  /**\n   * Creates a Sender instance.\n   *\n   * @param {Duplex} socket The connection socket\n   * @param {Object} [extensions] An object containing the negotiated extensions\n   * @param {Function} [generateMask] The function used to generate the masking\n   *     key\n   */\n  constructor(socket, extensions, generateMask) {\n    this._extensions = extensions || {};\n\n    if (generateMask) {\n      this._generateMask = generateMask;\n      this._maskBuffer = Buffer.alloc(4);\n    }\n\n    this._socket = socket;\n\n    this._firstFragment = true;\n    this._compress = false;\n\n    this._bufferedBytes = 0;\n    this._queue = [];\n    this._state = DEFAULT;\n    this.onerror = NOOP;\n    this[kWebSocket] = undefined;\n  }\n\n  /**\n   * Frames a piece of data according to the HyBi WebSocket protocol.\n   *\n   * @param {(Buffer|String)} data The data to frame\n   * @param {Object} options Options object\n   * @param {Boolean} [options.fin=false] Specifies whether or not to set the\n   *     FIN bit\n   * @param {Function} [options.generateMask] The function used to generate the\n   *     masking key\n   * @param {Boolean} [options.mask=false] Specifies whether or not to mask\n   *     `data`\n   * @param {Buffer} [options.maskBuffer] The buffer used to store the masking\n   *     key\n   * @param {Number} options.opcode The opcode\n   * @param {Boolean} [options.readOnly=false] Specifies whether `data` can be\n   *     modified\n   * @param {Boolean} [options.rsv1=false] Specifies whether or not to set the\n   *     RSV1 bit\n   * @return {(Buffer|String)[]} The framed data\n   * @public\n   */\n  static frame(data, options) {\n    let mask;\n    let merge = false;\n    let offset = 2;\n    let skipMasking = false;\n\n    if (options.mask) {\n      mask = options.maskBuffer || maskBuffer;\n\n      if (options.generateMask) {\n        options.generateMask(mask);\n      } else {\n        if (randomPoolPointer === RANDOM_POOL_SIZE) {\n          /* istanbul ignore else  */\n          if (randomPool === undefined) {\n            //\n            // This is lazily initialized because server-sent frames must not\n            // be masked so it may never be used.\n            //\n            randomPool = Buffer.alloc(RANDOM_POOL_SIZE);\n          }\n\n          randomFillSync(randomPool, 0, RANDOM_POOL_SIZE);\n          randomPoolPointer = 0;\n        }\n\n        mask[0] = randomPool[randomPoolPointer++];\n        mask[1] = randomPool[randomPoolPointer++];\n        mask[2] = randomPool[randomPoolPointer++];\n        mask[3] = randomPool[randomPoolPointer++];\n      }\n\n      skipMasking = (mask[0] | mask[1] | mask[2] | mask[3]) === 0;\n      offset = 6;\n    }\n\n    let dataLength;\n\n    if (typeof data === 'string') {\n      if (\n        (!options.mask || skipMasking) &&\n        options[kByteLength] !== undefined\n      ) {\n        dataLength = options[kByteLength];\n      } else {\n        data = Buffer.from(data);\n        dataLength = data.length;\n      }\n    } else {\n      dataLength = data.length;\n      merge = options.mask && options.readOnly && !skipMasking;\n    }\n\n    let payloadLength = dataLength;\n\n    if (dataLength >= 65536) {\n      offset += 8;\n      payloadLength = 127;\n    } else if (dataLength > 125) {\n      offset += 2;\n      payloadLength = 126;\n    }\n\n    const target = Buffer.allocUnsafe(merge ? dataLength + offset : offset);\n\n    target[0] = options.fin ? options.opcode | 0x80 : options.opcode;\n    if (options.rsv1) target[0] |= 0x40;\n\n    target[1] = payloadLength;\n\n    if (payloadLength === 126) {\n      target.writeUInt16BE(dataLength, 2);\n    } else if (payloadLength === 127) {\n      target[2] = target[3] = 0;\n      target.writeUIntBE(dataLength, 4, 6);\n    }\n\n    if (!options.mask) return [target, data];\n\n    target[1] |= 0x80;\n    target[offset - 4] = mask[0];\n    target[offset - 3] = mask[1];\n    target[offset - 2] = mask[2];\n    target[offset - 1] = mask[3];\n\n    if (skipMasking) return [target, data];\n\n    if (merge) {\n      applyMask(data, mask, target, offset, dataLength);\n      return [target];\n    }\n\n    applyMask(data, mask, data, 0, dataLength);\n    return [target, data];\n  }\n\n  /**\n   * Sends a close message to the other peer.\n   *\n   * @param {Number} [code] The status code component of the body\n   * @param {(String|Buffer)} [data] The message component of the body\n   * @param {Boolean} [mask=false] Specifies whether or not to mask the message\n   * @param {Function} [cb] Callback\n   * @public\n   */\n  close(code, data, mask, cb) {\n    let buf;\n\n    if (code === undefined) {\n      buf = EMPTY_BUFFER;\n    } else if (typeof code !== 'number' || !isValidStatusCode(code)) {\n      throw new TypeError('First argument must be a valid error code number');\n    } else if (data === undefined || !data.length) {\n      buf = Buffer.allocUnsafe(2);\n      buf.writeUInt16BE(code, 0);\n    } else {\n      const length = Buffer.byteLength(data);\n\n      if (length > 123) {\n        throw new RangeError('The message must not be greater than 123 bytes');\n      }\n\n      buf = Buffer.allocUnsafe(2 + length);\n      buf.writeUInt16BE(code, 0);\n\n      if (typeof data === 'string') {\n        buf.write(data, 2);\n      } else {\n        buf.set(data, 2);\n      }\n    }\n\n    const options = {\n      [kByteLength]: buf.length,\n      fin: true,\n      generateMask: this._generateMask,\n      mask,\n      maskBuffer: this._maskBuffer,\n      opcode: 0x08,\n      readOnly: false,\n      rsv1: false\n    };\n\n    if (this._state !== DEFAULT) {\n      this.enqueue([this.dispatch, buf, false, options, cb]);\n    } else {\n      this.sendFrame(Sender.frame(buf, options), cb);\n    }\n  }\n\n  /**\n   * Sends a ping message to the other peer.\n   *\n   * @param {*} data The message to send\n   * @param {Boolean} [mask=false] Specifies whether or not to mask `data`\n   * @param {Function} [cb] Callback\n   * @public\n   */\n  ping(data, mask, cb) {\n    let byteLength;\n    let readOnly;\n\n    if (typeof data === 'string') {\n      byteLength = Buffer.byteLength(data);\n      readOnly = false;\n    } else if (isBlob(data)) {\n      byteLength = data.size;\n      readOnly = false;\n    } else {\n      data = toBuffer(data);\n      byteLength = data.length;\n      readOnly = toBuffer.readOnly;\n    }\n\n    if (byteLength > 125) {\n      throw new RangeError('The data size must not be greater than 125 bytes');\n    }\n\n    const options = {\n      [kByteLength]: byteLength,\n      fin: true,\n      generateMask: this._generateMask,\n      mask,\n      maskBuffer: this._maskBuffer,\n      opcode: 0x09,\n      readOnly,\n      rsv1: false\n    };\n\n    if (isBlob(data)) {\n      if (this._state !== DEFAULT) {\n        this.enqueue([this.getBlobData, data, false, options, cb]);\n      } else {\n        this.getBlobData(data, false, options, cb);\n      }\n    } else if (this._state !== DEFAULT) {\n      this.enqueue([this.dispatch, data, false, options, cb]);\n    } else {\n      this.sendFrame(Sender.frame(data, options), cb);\n    }\n  }\n\n  /**\n   * Sends a pong message to the other peer.\n   *\n   * @param {*} data The message to send\n   * @param {Boolean} [mask=false] Specifies whether or not to mask `data`\n   * @param {Function} [cb] Callback\n   * @public\n   */\n  pong(data, mask, cb) {\n    let byteLength;\n    let readOnly;\n\n    if (typeof data === 'string') {\n      byteLength = Buffer.byteLength(data);\n      readOnly = false;\n    } else if (isBlob(data)) {\n      byteLength = data.size;\n      readOnly = false;\n    } else {\n      data = toBuffer(data);\n      byteLength = data.length;\n      readOnly = toBuffer.readOnly;\n    }\n\n    if (byteLength > 125) {\n      throw new RangeError('The data size must not be greater than 125 bytes');\n    }\n\n    const options = {\n      [kByteLength]: byteLength,\n      fin: true,\n      generateMask: this._generateMask,\n      mask,\n      maskBuffer: this._maskBuffer,\n      opcode: 0x0a,\n      readOnly,\n      rsv1: false\n    };\n\n    if (isBlob(data)) {\n      if (this._state !== DEFAULT) {\n        this.enqueue([this.getBlobData, data, false, options, cb]);\n      } else {\n        this.getBlobData(data, false, options, cb);\n      }\n    } else if (this._state !== DEFAULT) {\n      this.enqueue([this.dispatch, data, false, options, cb]);\n    } else {\n      this.sendFrame(Sender.frame(data, options), cb);\n    }\n  }\n\n  /**\n   * Sends a data message to the other peer.\n   *\n   * @param {*} data The message to send\n   * @param {Object} options Options object\n   * @param {Boolean} [options.binary=false] Specifies whether `data` is binary\n   *     or text\n   * @param {Boolean} [options.compress=false] Specifies whether or not to\n   *     compress `data`\n   * @param {Boolean} [options.fin=false] Specifies whether the fragment is the\n   *     last one\n   * @param {Boolean} [options.mask=false] Specifies whether or not to mask\n   *     `data`\n   * @param {Function} [cb] Callback\n   * @public\n   */\n  send(data, options, cb) {\n    const perMessageDeflate = this._extensions[PerMessageDeflate.extensionName];\n    let opcode = options.binary ? 2 : 1;\n    let rsv1 = options.compress;\n\n    let byteLength;\n    let readOnly;\n\n    if (typeof data === 'string') {\n      byteLength = Buffer.byteLength(data);\n      readOnly = false;\n    } else if (isBlob(data)) {\n      byteLength = data.size;\n      readOnly = false;\n    } else {\n      data = toBuffer(data);\n      byteLength = data.length;\n      readOnly = toBuffer.readOnly;\n    }\n\n    if (this._firstFragment) {\n      this._firstFragment = false;\n      if (\n        rsv1 &&\n        perMessageDeflate &&\n        perMessageDeflate.params[\n          perMessageDeflate._isServer\n            ? 'server_no_context_takeover'\n            : 'client_no_context_takeover'\n        ]\n      ) {\n        rsv1 = byteLength >= perMessageDeflate._threshold;\n      }\n      this._compress = rsv1;\n    } else {\n      rsv1 = false;\n      opcode = 0;\n    }\n\n    if (options.fin) this._firstFragment = true;\n\n    const opts = {\n      [kByteLength]: byteLength,\n      fin: options.fin,\n      generateMask: this._generateMask,\n      mask: options.mask,\n      maskBuffer: this._maskBuffer,\n      opcode,\n      readOnly,\n      rsv1\n    };\n\n    if (isBlob(data)) {\n      if (this._state !== DEFAULT) {\n        this.enqueue([this.getBlobData, data, this._compress, opts, cb]);\n      } else {\n        this.getBlobData(data, this._compress, opts, cb);\n      }\n    } else if (this._state !== DEFAULT) {\n      this.enqueue([this.dispatch, data, this._compress, opts, cb]);\n    } else {\n      this.dispatch(data, this._compress, opts, cb);\n    }\n  }\n\n  /**\n   * Gets the contents of a blob as binary data.\n   *\n   * @param {Blob} blob The blob\n   * @param {Boolean} [compress=false] Specifies whether or not to compress\n   *     the data\n   * @param {Object} options Options object\n   * @param {Boolean} [options.fin=false] Specifies whether or not to set the\n   *     FIN bit\n   * @param {Function} [options.generateMask] The function used to generate the\n   *     masking key\n   * @param {Boolean} [options.mask=false] Specifies whether or not to mask\n   *     `data`\n   * @param {Buffer} [options.maskBuffer] The buffer used to store the masking\n   *     key\n   * @param {Number} options.opcode The opcode\n   * @param {Boolean} [options.readOnly=false] Specifies whether `data` can be\n   *     modified\n   * @param {Boolean} [options.rsv1=false] Specifies whether or not to set the\n   *     RSV1 bit\n   * @param {Function} [cb] Callback\n   * @private\n   */\n  getBlobData(blob, compress, options, cb) {\n    this._bufferedBytes += options[kByteLength];\n    this._state = GET_BLOB_DATA;\n\n    blob\n      .arrayBuffer()\n      .then((arrayBuffer) => {\n        if (this._socket.destroyed) {\n          const err = new Error(\n            'The socket was closed while the blob was being read'\n          );\n\n          //\n          // `callCallbacks` is called in the next tick to ensure that errors\n          // that might be thrown in the callbacks behave like errors thrown\n          // outside the promise chain.\n          //\n          process.nextTick(callCallbacks, this, err, cb);\n          return;\n        }\n\n        this._bufferedBytes -= options[kByteLength];\n        const data = toBuffer(arrayBuffer);\n\n        if (!compress) {\n          this._state = DEFAULT;\n          this.sendFrame(Sender.frame(data, options), cb);\n          this.dequeue();\n        } else {\n          this.dispatch(data, compress, options, cb);\n        }\n      })\n      .catch((err) => {\n        //\n        // `onError` is called in the next tick for the same reason that\n        // `callCallbacks` above is.\n        //\n        process.nextTick(onError, this, err, cb);\n      });\n  }\n\n  /**\n   * Dispatches a message.\n   *\n   * @param {(Buffer|String)} data The message to send\n   * @param {Boolean} [compress=false] Specifies whether or not to compress\n   *     `data`\n   * @param {Object} options Options object\n   * @param {Boolean} [options.fin=false] Specifies whether or not to set the\n   *     FIN bit\n   * @param {Function} [options.generateMask] The function used to generate the\n   *     masking key\n   * @param {Boolean} [options.mask=false] Specifies whether or not to mask\n   *     `data`\n   * @param {Buffer} [options.maskBuffer] The buffer used to store the masking\n   *     key\n   * @param {Number} options.opcode The opcode\n   * @param {Boolean} [options.readOnly=false] Specifies whether `data` can be\n   *     modified\n   * @param {Boolean} [options.rsv1=false] Specifies whether or not to set the\n   *     RSV1 bit\n   * @param {Function} [cb] Callback\n   * @private\n   */\n  dispatch(data, compress, options, cb) {\n    if (!compress) {\n      this.sendFrame(Sender.frame(data, options), cb);\n      return;\n    }\n\n    const perMessageDeflate = this._extensions[PerMessageDeflate.extensionName];\n\n    this._bufferedBytes += options[kByteLength];\n    this._state = DEFLATING;\n    perMessageDeflate.compress(data, options.fin, (_, buf) => {\n      if (this._socket.destroyed) {\n        const err = new Error(\n          'The socket was closed while data was being compressed'\n        );\n\n        callCallbacks(this, err, cb);\n        return;\n      }\n\n      this._bufferedBytes -= options[kByteLength];\n      this._state = DEFAULT;\n      options.readOnly = false;\n      this.sendFrame(Sender.frame(buf, options), cb);\n      this.dequeue();\n    });\n  }\n\n  /**\n   * Executes queued send operations.\n   *\n   * @private\n   */\n  dequeue() {\n    while (this._state === DEFAULT && this._queue.length) {\n      const params = this._queue.shift();\n\n      this._bufferedBytes -= params[3][kByteLength];\n      Reflect.apply(params[0], this, params.slice(1));\n    }\n  }\n\n  /**\n   * Enqueues a send operation.\n   *\n   * @param {Array} params Send operation parameters.\n   * @private\n   */\n  enqueue(params) {\n    this._bufferedBytes += params[3][kByteLength];\n    this._queue.push(params);\n  }\n\n  /**\n   * Sends a frame.\n   *\n   * @param {(Buffer | String)[]} list The frame to send\n   * @param {Function} [cb] Callback\n   * @private\n   */\n  sendFrame(list, cb) {\n    if (list.length === 2) {\n      this._socket.cork();\n      this._socket.write(list[0]);\n      this._socket.write(list[1], cb);\n      this._socket.uncork();\n    } else {\n      this._socket.write(list[0], cb);\n    }\n  }\n}\n\nmodule.exports = Sender;\n\n/**\n * Calls queued callbacks with an error.\n *\n * @param {Sender} sender The `Sender` instance\n * @param {Error} err The error to call the callbacks with\n * @param {Function} [cb] The first callback\n * @private\n */\nfunction callCallbacks(sender, err, cb) {\n  if (typeof cb === 'function') cb(err);\n\n  for (let i = 0; i < sender._queue.length; i++) {\n    const params = sender._queue[i];\n    const callback = params[params.length - 1];\n\n    if (typeof callback === 'function') callback(err);\n  }\n}\n\n/**\n * Handles a `Sender` error.\n *\n * @param {Sender} sender The `Sender` instance\n * @param {Error} err The error\n * @param {Function} [cb] The first pending callback\n * @private\n */\nfunction onError(sender, err, cb) {\n  callCallbacks(sender, err, cb);\n  sender.onerror(err);\n}\n", "'use strict';\n\nconst { kForOnEventAttribute, kListener } = require('./constants');\n\nconst kCode = Symbol('kCode');\nconst kData = Symbol('kData');\nconst kError = Symbol('kError');\nconst kMessage = Symbol('kMessage');\nconst kReason = Symbol('kReason');\nconst kTarget = Symbol('kTarget');\nconst kType = Symbol('kType');\nconst kWasClean = Symbol('kWasClean');\n\n/**\n * Class representing an event.\n */\nclass Event {\n  /**\n   * Create a new `Event`.\n   *\n   * @param {String} type The name of the event\n   * @throws {TypeError} If the `type` argument is not specified\n   */\n  constructor(type) {\n    this[kTarget] = null;\n    this[kType] = type;\n  }\n\n  /**\n   * @type {*}\n   */\n  get target() {\n    return this[kTarget];\n  }\n\n  /**\n   * @type {String}\n   */\n  get type() {\n    return this[kType];\n  }\n}\n\nObject.defineProperty(Event.prototype, 'target', { enumerable: true });\nObject.defineProperty(Event.prototype, 'type', { enumerable: true });\n\n/**\n * Class representing a close event.\n *\n * @extends Event\n */\nclass CloseEvent extends Event {\n  /**\n   * Create a new `CloseEvent`.\n   *\n   * @param {String} type The name of the event\n   * @param {Object} [options] A dictionary object that allows for setting\n   *     attributes via object members of the same name\n   * @param {Number} [options.code=0] The status code explaining why the\n   *     connection was closed\n   * @param {String} [options.reason=''] A human-readable string explaining why\n   *     the connection was closed\n   * @param {Boolean} [options.wasClean=false] Indicates whether or not the\n   *     connection was cleanly closed\n   */\n  constructor(type, options = {}) {\n    super(type);\n\n    this[kCode] = options.code === undefined ? 0 : options.code;\n    this[kReason] = options.reason === undefined ? '' : options.reason;\n    this[kWasClean] = options.wasClean === undefined ? false : options.wasClean;\n  }\n\n  /**\n   * @type {Number}\n   */\n  get code() {\n    return this[kCode];\n  }\n\n  /**\n   * @type {String}\n   */\n  get reason() {\n    return this[kReason];\n  }\n\n  /**\n   * @type {Boolean}\n   */\n  get wasClean() {\n    return this[kWasClean];\n  }\n}\n\nObject.defineProperty(CloseEvent.prototype, 'code', { enumerable: true });\nObject.defineProperty(CloseEvent.prototype, 'reason', { enumerable: true });\nObject.defineProperty(CloseEvent.prototype, 'wasClean', { enumerable: true });\n\n/**\n * Class representing an error event.\n *\n * @extends Event\n */\nclass ErrorEvent extends Event {\n  /**\n   * Create a new `ErrorEvent`.\n   *\n   * @param {String} type The name of the event\n   * @param {Object} [options] A dictionary object that allows for setting\n   *     attributes via object members of the same name\n   * @param {*} [options.error=null] The error that generated this event\n   * @param {String} [options.message=''] The error message\n   */\n  constructor(type, options = {}) {\n    super(type);\n\n    this[kError] = options.error === undefined ? null : options.error;\n    this[kMessage] = options.message === undefined ? '' : options.message;\n  }\n\n  /**\n   * @type {*}\n   */\n  get error() {\n    return this[kError];\n  }\n\n  /**\n   * @type {String}\n   */\n  get message() {\n    return this[kMessage];\n  }\n}\n\nObject.defineProperty(ErrorEvent.prototype, 'error', { enumerable: true });\nObject.defineProperty(ErrorEvent.prototype, 'message', { enumerable: true });\n\n/**\n * Class representing a message event.\n *\n * @extends Event\n */\nclass MessageEvent extends Event {\n  /**\n   * Create a new `MessageEvent`.\n   *\n   * @param {String} type The name of the event\n   * @param {Object} [options] A dictionary object that allows for setting\n   *     attributes via object members of the same name\n   * @param {*} [options.data=null] The message content\n   */\n  constructor(type, options = {}) {\n    super(type);\n\n    this[kData] = options.data === undefined ? null : options.data;\n  }\n\n  /**\n   * @type {*}\n   */\n  get data() {\n    return this[kData];\n  }\n}\n\nObject.defineProperty(MessageEvent.prototype, 'data', { enumerable: true });\n\n/**\n * This provides methods for emulating the `EventTarget` interface. It's not\n * meant to be used directly.\n *\n * @mixin\n */\nconst EventTarget = {\n  /**\n   * Register an event listener.\n   *\n   * @param {String} type A string representing the event type to listen for\n   * @param {(Function|Object)} handler The listener to add\n   * @param {Object} [options] An options object specifies characteristics about\n   *     the event listener\n   * @param {Boolean} [options.once=false] A `Boolean` indicating that the\n   *     listener should be invoked at most once after being added. If `true`,\n   *     the listener would be automatically removed when invoked.\n   * @public\n   */\n  addEventListener(type, handler, options = {}) {\n    for (const listener of this.listeners(type)) {\n      if (\n        !options[kForOnEventAttribute] &&\n        listener[kListener] === handler &&\n        !listener[kForOnEventAttribute]\n      ) {\n        return;\n      }\n    }\n\n    let wrapper;\n\n    if (type === 'message') {\n      wrapper = function onMessage(data, isBinary) {\n        const event = new MessageEvent('message', {\n          data: isBinary ? data : data.toString()\n        });\n\n        event[kTarget] = this;\n        callListener(handler, this, event);\n      };\n    } else if (type === 'close') {\n      wrapper = function onClose(code, message) {\n        const event = new CloseEvent('close', {\n          code,\n          reason: message.toString(),\n          wasClean: this._closeFrameReceived && this._closeFrameSent\n        });\n\n        event[kTarget] = this;\n        callListener(handler, this, event);\n      };\n    } else if (type === 'error') {\n      wrapper = function onError(error) {\n        const event = new ErrorEvent('error', {\n          error,\n          message: error.message\n        });\n\n        event[kTarget] = this;\n        callListener(handler, this, event);\n      };\n    } else if (type === 'open') {\n      wrapper = function onOpen() {\n        const event = new Event('open');\n\n        event[kTarget] = this;\n        callListener(handler, this, event);\n      };\n    } else {\n      return;\n    }\n\n    wrapper[kForOnEventAttribute] = !!options[kForOnEventAttribute];\n    wrapper[kListener] = handler;\n\n    if (options.once) {\n      this.once(type, wrapper);\n    } else {\n      this.on(type, wrapper);\n    }\n  },\n\n  /**\n   * Remove an event listener.\n   *\n   * @param {String} type A string representing the event type to remove\n   * @param {(Function|Object)} handler The listener to remove\n   * @public\n   */\n  removeEventListener(type, handler) {\n    for (const listener of this.listeners(type)) {\n      if (listener[kListener] === handler && !listener[kForOnEventAttribute]) {\n        this.removeListener(type, listener);\n        break;\n      }\n    }\n  }\n};\n\nmodule.exports = {\n  CloseEvent,\n  ErrorEvent,\n  Event,\n  EventTarget,\n  MessageEvent\n};\n\n/**\n * Call an event listener\n *\n * @param {(Function|Object)} listener The listener to call\n * @param {*} thisArg The value to use as `this`` when calling the listener\n * @param {Event} event The event to pass to the listener\n * @private\n */\nfunction callListener(listener, thisArg, event) {\n  if (typeof listener === 'object' && listener.handleEvent) {\n    listener.handleEvent.call(listener, event);\n  } else {\n    listener.call(thisArg, event);\n  }\n}\n", "'use strict';\n\nconst { tokenChars } = require('./validation');\n\n/**\n * Adds an offer to the map of extension offers or a parameter to the map of\n * parameters.\n *\n * @param {Object} dest The map of extension offers or parameters\n * @param {String} name The extension or parameter name\n * @param {(Object|Boolean|String)} elem The extension parameters or the\n *     parameter value\n * @private\n */\nfunction push(dest, name, elem) {\n  if (dest[name] === undefined) dest[name] = [elem];\n  else dest[name].push(elem);\n}\n\n/**\n * Parses the `Sec-WebSocket-Extensions` header into an object.\n *\n * @param {String} header The field value of the header\n * @return {Object} The parsed object\n * @public\n */\nfunction parse(header) {\n  const offers = Object.create(null);\n  let params = Object.create(null);\n  let mustUnescape = false;\n  let isEscaping = false;\n  let inQuotes = false;\n  let extensionName;\n  let paramName;\n  let start = -1;\n  let code = -1;\n  let end = -1;\n  let i = 0;\n\n  for (; i < header.length; i++) {\n    code = header.charCodeAt(i);\n\n    if (extensionName === undefined) {\n      if (end === -1 && tokenChars[code] === 1) {\n        if (start === -1) start = i;\n      } else if (\n        i !== 0 &&\n        (code === 0x20 /* ' ' */ || code === 0x09) /* '\\t' */\n      ) {\n        if (end === -1 && start !== -1) end = i;\n      } else if (code === 0x3b /* ';' */ || code === 0x2c /* ',' */) {\n        if (start === -1) {\n          throw new SyntaxError(`Unexpected character at index ${i}`);\n        }\n\n        if (end === -1) end = i;\n        const name = header.slice(start, end);\n        if (code === 0x2c) {\n          push(offers, name, params);\n          params = Object.create(null);\n        } else {\n          extensionName = name;\n        }\n\n        start = end = -1;\n      } else {\n        throw new SyntaxError(`Unexpected character at index ${i}`);\n      }\n    } else if (paramName === undefined) {\n      if (end === -1 && tokenChars[code] === 1) {\n        if (start === -1) start = i;\n      } else if (code === 0x20 || code === 0x09) {\n        if (end === -1 && start !== -1) end = i;\n      } else if (code === 0x3b || code === 0x2c) {\n        if (start === -1) {\n          throw new SyntaxError(`Unexpected character at index ${i}`);\n        }\n\n        if (end === -1) end = i;\n        push(params, header.slice(start, end), true);\n        if (code === 0x2c) {\n          push(offers, extensionName, params);\n          params = Object.create(null);\n          extensionName = undefined;\n        }\n\n        start = end = -1;\n      } else if (code === 0x3d /* '=' */ && start !== -1 && end === -1) {\n        paramName = header.slice(start, i);\n        start = end = -1;\n      } else {\n        throw new SyntaxError(`Unexpected character at index ${i}`);\n      }\n    } else {\n      //\n      // The value of a quoted-string after unescaping must conform to the\n      // token ABNF, so only token characters are valid.\n      // Ref: https://tools.ietf.org/html/rfc6455#section-9.1\n      //\n      if (isEscaping) {\n        if (tokenChars[code] !== 1) {\n          throw new SyntaxError(`Unexpected character at index ${i}`);\n        }\n        if (start === -1) start = i;\n        else if (!mustUnescape) mustUnescape = true;\n        isEscaping = false;\n      } else if (inQuotes) {\n        if (tokenChars[code] === 1) {\n          if (start === -1) start = i;\n        } else if (code === 0x22 /* '\"' */ && start !== -1) {\n          inQuotes = false;\n          end = i;\n        } else if (code === 0x5c /* '\\' */) {\n          isEscaping = true;\n        } else {\n          throw new SyntaxError(`Unexpected character at index ${i}`);\n        }\n      } else if (code === 0x22 && header.charCodeAt(i - 1) === 0x3d) {\n        inQuotes = true;\n      } else if (end === -1 && tokenChars[code] === 1) {\n        if (start === -1) start = i;\n      } else if (start !== -1 && (code === 0x20 || code === 0x09)) {\n        if (end === -1) end = i;\n      } else if (code === 0x3b || code === 0x2c) {\n        if (start === -1) {\n          throw new SyntaxError(`Unexpected character at index ${i}`);\n        }\n\n        if (end === -1) end = i;\n        let value = header.slice(start, end);\n        if (mustUnescape) {\n          value = value.replace(/\\\\/g, '');\n          mustUnescape = false;\n        }\n        push(params, paramName, value);\n        if (code === 0x2c) {\n          push(offers, extensionName, params);\n          params = Object.create(null);\n          extensionName = undefined;\n        }\n\n        paramName = undefined;\n        start = end = -1;\n      } else {\n        throw new SyntaxError(`Unexpected character at index ${i}`);\n      }\n    }\n  }\n\n  if (start === -1 || inQuotes || code === 0x20 || code === 0x09) {\n    throw new SyntaxError('Unexpected end of input');\n  }\n\n  if (end === -1) end = i;\n  const token = header.slice(start, end);\n  if (extensionName === undefined) {\n    push(offers, token, params);\n  } else {\n    if (paramName === undefined) {\n      push(params, token, true);\n    } else if (mustUnescape) {\n      push(params, paramName, token.replace(/\\\\/g, ''));\n    } else {\n      push(params, paramName, token);\n    }\n    push(offers, extensionName, params);\n  }\n\n  return offers;\n}\n\n/**\n * Builds the `Sec-WebSocket-Extensions` header field value.\n *\n * @param {Object} extensions The map of extensions and parameters to format\n * @return {String} A string representing the given object\n * @public\n */\nfunction format(extensions) {\n  return Object.keys(extensions)\n    .map((extension) => {\n      let configurations = extensions[extension];\n      if (!Array.isArray(configurations)) configurations = [configurations];\n      return configurations\n        .map((params) => {\n          return [extension]\n            .concat(\n              Object.keys(params).map((k) => {\n                let values = params[k];\n                if (!Array.isArray(values)) values = [values];\n                return values\n                  .map((v) => (v === true ? k : `${k}=${v}`))\n                  .join('; ');\n              })\n            )\n            .join('; ');\n        })\n        .join(', ');\n    })\n    .join(', ');\n}\n\nmodule.exports = { format, parse };\n", "/* eslint no-unused-vars: [\"error\", { \"varsIgnorePattern\": \"^Duplex|Readable$\", \"caughtErrors\": \"none\" }] */\n\n'use strict';\n\nconst EventEmitter = require('events');\nconst https = require('https');\nconst http = require('http');\nconst net = require('net');\nconst tls = require('tls');\nconst { randomBytes, createHash } = require('crypto');\nconst { Duplex, Readable } = require('stream');\nconst { URL } = require('url');\n\nconst PerMessageDeflate = require('./permessage-deflate');\nconst Receiver = require('./receiver');\nconst Sender = require('./sender');\nconst { isBlob } = require('./validation');\n\nconst {\n  BINARY_TYPES,\n  EMPTY_BUFFER,\n  GUID,\n  kForOnEventAttribute,\n  kListener,\n  kStatusCode,\n  kWebSocket,\n  NOOP\n} = require('./constants');\nconst {\n  EventTarget: { addEventListener, removeEventListener }\n} = require('./event-target');\nconst { format, parse } = require('./extension');\nconst { toBuffer } = require('./buffer-util');\n\nconst closeTimeout = 30 * 1000;\nconst kAborted = Symbol('kAborted');\nconst protocolVersions = [8, 13];\nconst readyStates = ['CONNECTING', 'OPEN', 'CLOSING', 'CLOSED'];\nconst subprotocolRegex = /^[!#$%&'*+\\-.0-9A-Z^_`|a-z~]+$/;\n\n/**\n * Class representing a WebSocket.\n *\n * @extends EventEmitter\n */\nclass WebSocket extends EventEmitter {\n  /**\n   * Create a new `WebSocket`.\n   *\n   * @param {(String|URL)} address The URL to which to connect\n   * @param {(String|String[])} [protocols] The subprotocols\n   * @param {Object} [options] Connection options\n   */\n  constructor(address, protocols, options) {\n    super();\n\n    this._binaryType = BINARY_TYPES[0];\n    this._closeCode = 1006;\n    this._closeFrameReceived = false;\n    this._closeFrameSent = false;\n    this._closeMessage = EMPTY_BUFFER;\n    this._closeTimer = null;\n    this._errorEmitted = false;\n    this._extensions = {};\n    this._paused = false;\n    this._protocol = '';\n    this._readyState = WebSocket.CONNECTING;\n    this._receiver = null;\n    this._sender = null;\n    this._socket = null;\n\n    if (address !== null) {\n      this._bufferedAmount = 0;\n      this._isServer = false;\n      this._redirects = 0;\n\n      if (protocols === undefined) {\n        protocols = [];\n      } else if (!Array.isArray(protocols)) {\n        if (typeof protocols === 'object' && protocols !== null) {\n          options = protocols;\n          protocols = [];\n        } else {\n          protocols = [protocols];\n        }\n      }\n\n      initAsClient(this, address, protocols, options);\n    } else {\n      this._autoPong = options.autoPong;\n      this._isServer = true;\n    }\n  }\n\n  /**\n   * For historical reasons, the custom \"nodebuffer\" type is used by the default\n   * instead of \"blob\".\n   *\n   * @type {String}\n   */\n  get binaryType() {\n    return this._binaryType;\n  }\n\n  set binaryType(type) {\n    if (!BINARY_TYPES.includes(type)) return;\n\n    this._binaryType = type;\n\n    //\n    // Allow to change `binaryType` on the fly.\n    //\n    if (this._receiver) this._receiver._binaryType = type;\n  }\n\n  /**\n   * @type {Number}\n   */\n  get bufferedAmount() {\n    if (!this._socket) return this._bufferedAmount;\n\n    return this._socket._writableState.length + this._sender._bufferedBytes;\n  }\n\n  /**\n   * @type {String}\n   */\n  get extensions() {\n    return Object.keys(this._extensions).join();\n  }\n\n  /**\n   * @type {Boolean}\n   */\n  get isPaused() {\n    return this._paused;\n  }\n\n  /**\n   * @type {Function}\n   */\n  /* istanbul ignore next */\n  get onclose() {\n    return null;\n  }\n\n  /**\n   * @type {Function}\n   */\n  /* istanbul ignore next */\n  get onerror() {\n    return null;\n  }\n\n  /**\n   * @type {Function}\n   */\n  /* istanbul ignore next */\n  get onopen() {\n    return null;\n  }\n\n  /**\n   * @type {Function}\n   */\n  /* istanbul ignore next */\n  get onmessage() {\n    return null;\n  }\n\n  /**\n   * @type {String}\n   */\n  get protocol() {\n    return this._protocol;\n  }\n\n  /**\n   * @type {Number}\n   */\n  get readyState() {\n    return this._readyState;\n  }\n\n  /**\n   * @type {String}\n   */\n  get url() {\n    return this._url;\n  }\n\n  /**\n   * Set up the socket and the internal resources.\n   *\n   * @param {Duplex} socket The network socket between the server and client\n   * @param {Buffer} head The first packet of the upgraded stream\n   * @param {Object} options Options object\n   * @param {Boolean} [options.allowSynchronousEvents=false] Specifies whether\n   *     any of the `'message'`, `'ping'`, and `'pong'` events can be emitted\n   *     multiple times in the same tick\n   * @param {Function} [options.generateMask] The function used to generate the\n   *     masking key\n   * @param {Number} [options.maxPayload=0] The maximum allowed message size\n   * @param {Boolean} [options.skipUTF8Validation=false] Specifies whether or\n   *     not to skip UTF-8 validation for text and close messages\n   * @private\n   */\n  setSocket(socket, head, options) {\n    const receiver = new Receiver({\n      allowSynchronousEvents: options.allowSynchronousEvents,\n      binaryType: this.binaryType,\n      extensions: this._extensions,\n      isServer: this._isServer,\n      maxPayload: options.maxPayload,\n      skipUTF8Validation: options.skipUTF8Validation\n    });\n\n    const sender = new Sender(socket, this._extensions, options.generateMask);\n\n    this._receiver = receiver;\n    this._sender = sender;\n    this._socket = socket;\n\n    receiver[kWebSocket] = this;\n    sender[kWebSocket] = this;\n    socket[kWebSocket] = this;\n\n    receiver.on('conclude', receiverOnConclude);\n    receiver.on('drain', receiverOnDrain);\n    receiver.on('error', receiverOnError);\n    receiver.on('message', receiverOnMessage);\n    receiver.on('ping', receiverOnPing);\n    receiver.on('pong', receiverOnPong);\n\n    sender.onerror = senderOnError;\n\n    //\n    // These methods may not be available if `socket` is just a `Duplex`.\n    //\n    if (socket.setTimeout) socket.setTimeout(0);\n    if (socket.setNoDelay) socket.setNoDelay();\n\n    if (head.length > 0) socket.unshift(head);\n\n    socket.on('close', socketOnClose);\n    socket.on('data', socketOnData);\n    socket.on('end', socketOnEnd);\n    socket.on('error', socketOnError);\n\n    this._readyState = WebSocket.OPEN;\n    this.emit('open');\n  }\n\n  /**\n   * Emit the `'close'` event.\n   *\n   * @private\n   */\n  emitClose() {\n    if (!this._socket) {\n      this._readyState = WebSocket.CLOSED;\n      this.emit('close', this._closeCode, this._closeMessage);\n      return;\n    }\n\n    if (this._extensions[PerMessageDeflate.extensionName]) {\n      this._extensions[PerMessageDeflate.extensionName].cleanup();\n    }\n\n    this._receiver.removeAllListeners();\n    this._readyState = WebSocket.CLOSED;\n    this.emit('close', this._closeCode, this._closeMessage);\n  }\n\n  /**\n   * Start a closing handshake.\n   *\n   *          +----------+   +-----------+   +----------+\n   *     - - -|ws.close()|-->|close frame|-->|ws.close()|- - -\n   *    |     +----------+   +-----------+   +----------+     |\n   *          +----------+   +-----------+         |\n   * CLOSING  |ws.close()|<--|close frame|<--+-----+       CLOSING\n   *          +----------+   +-----------+   |\n   *    |           |                        |   +---+        |\n   *                +------------------------+-->|fin| - - - -\n   *    |         +---+                      |   +---+\n   *     - - - - -|fin|<---------------------+\n   *              +---+\n   *\n   * @param {Number} [code] Status code explaining why the connection is closing\n   * @param {(String|Buffer)} [data] The reason why the connection is\n   *     closing\n   * @public\n   */\n  close(code, data) {\n    if (this.readyState === WebSocket.CLOSED) return;\n    if (this.readyState === WebSocket.CONNECTING) {\n      const msg = 'WebSocket was closed before the connection was established';\n      abortHandshake(this, this._req, msg);\n      return;\n    }\n\n    if (this.readyState === WebSocket.CLOSING) {\n      if (\n        this._closeFrameSent &&\n        (this._closeFrameReceived || this._receiver._writableState.errorEmitted)\n      ) {\n        this._socket.end();\n      }\n\n      return;\n    }\n\n    this._readyState = WebSocket.CLOSING;\n    this._sender.close(code, data, !this._isServer, (err) => {\n      //\n      // This error is handled by the `'error'` listener on the socket. We only\n      // want to know if the close frame has been sent here.\n      //\n      if (err) return;\n\n      this._closeFrameSent = true;\n\n      if (\n        this._closeFrameReceived ||\n        this._receiver._writableState.errorEmitted\n      ) {\n        this._socket.end();\n      }\n    });\n\n    setCloseTimer(this);\n  }\n\n  /**\n   * Pause the socket.\n   *\n   * @public\n   */\n  pause() {\n    if (\n      this.readyState === WebSocket.CONNECTING ||\n      this.readyState === WebSocket.CLOSED\n    ) {\n      return;\n    }\n\n    this._paused = true;\n    this._socket.pause();\n  }\n\n  /**\n   * Send a ping.\n   *\n   * @param {*} [data] The data to send\n   * @param {Boolean} [mask] Indicates whether or not to mask `data`\n   * @param {Function} [cb] Callback which is executed when the ping is sent\n   * @public\n   */\n  ping(data, mask, cb) {\n    if (this.readyState === WebSocket.CONNECTING) {\n      throw new Error('WebSocket is not open: readyState 0 (CONNECTING)');\n    }\n\n    if (typeof data === 'function') {\n      cb = data;\n      data = mask = undefined;\n    } else if (typeof mask === 'function') {\n      cb = mask;\n      mask = undefined;\n    }\n\n    if (typeof data === 'number') data = data.toString();\n\n    if (this.readyState !== WebSocket.OPEN) {\n      sendAfterClose(this, data, cb);\n      return;\n    }\n\n    if (mask === undefined) mask = !this._isServer;\n    this._sender.ping(data || EMPTY_BUFFER, mask, cb);\n  }\n\n  /**\n   * Send a pong.\n   *\n   * @param {*} [data] The data to send\n   * @param {Boolean} [mask] Indicates whether or not to mask `data`\n   * @param {Function} [cb] Callback which is executed when the pong is sent\n   * @public\n   */\n  pong(data, mask, cb) {\n    if (this.readyState === WebSocket.CONNECTING) {\n      throw new Error('WebSocket is not open: readyState 0 (CONNECTING)');\n    }\n\n    if (typeof data === 'function') {\n      cb = data;\n      data = mask = undefined;\n    } else if (typeof mask === 'function') {\n      cb = mask;\n      mask = undefined;\n    }\n\n    if (typeof data === 'number') data = data.toString();\n\n    if (this.readyState !== WebSocket.OPEN) {\n      sendAfterClose(this, data, cb);\n      return;\n    }\n\n    if (mask === undefined) mask = !this._isServer;\n    this._sender.pong(data || EMPTY_BUFFER, mask, cb);\n  }\n\n  /**\n   * Resume the socket.\n   *\n   * @public\n   */\n  resume() {\n    if (\n      this.readyState === WebSocket.CONNECTING ||\n      this.readyState === WebSocket.CLOSED\n    ) {\n      return;\n    }\n\n    this._paused = false;\n    if (!this._receiver._writableState.needDrain) this._socket.resume();\n  }\n\n  /**\n   * Send a data message.\n   *\n   * @param {*} data The message to send\n   * @param {Object} [options] Options object\n   * @param {Boolean} [options.binary] Specifies whether `data` is binary or\n   *     text\n   * @param {Boolean} [options.compress] Specifies whether or not to compress\n   *     `data`\n   * @param {Boolean} [options.fin=true] Specifies whether the fragment is the\n   *     last one\n   * @param {Boolean} [options.mask] Specifies whether or not to mask `data`\n   * @param {Function} [cb] Callback which is executed when data is written out\n   * @public\n   */\n  send(data, options, cb) {\n    if (this.readyState === WebSocket.CONNECTING) {\n      throw new Error('WebSocket is not open: readyState 0 (CONNECTING)');\n    }\n\n    if (typeof options === 'function') {\n      cb = options;\n      options = {};\n    }\n\n    if (typeof data === 'number') data = data.toString();\n\n    if (this.readyState !== WebSocket.OPEN) {\n      sendAfterClose(this, data, cb);\n      return;\n    }\n\n    const opts = {\n      binary: typeof data !== 'string',\n      mask: !this._isServer,\n      compress: true,\n      fin: true,\n      ...options\n    };\n\n    if (!this._extensions[PerMessageDeflate.extensionName]) {\n      opts.compress = false;\n    }\n\n    this._sender.send(data || EMPTY_BUFFER, opts, cb);\n  }\n\n  /**\n   * Forcibly close the connection.\n   *\n   * @public\n   */\n  terminate() {\n    if (this.readyState === WebSocket.CLOSED) return;\n    if (this.readyState === WebSocket.CONNECTING) {\n      const msg = 'WebSocket was closed before the connection was established';\n      abortHandshake(this, this._req, msg);\n      return;\n    }\n\n    if (this._socket) {\n      this._readyState = WebSocket.CLOSING;\n      this._socket.destroy();\n    }\n  }\n}\n\n/**\n * @constant {Number} CONNECTING\n * @memberof WebSocket\n */\nObject.defineProperty(WebSocket, 'CONNECTING', {\n  enumerable: true,\n  value: readyStates.indexOf('CONNECTING')\n});\n\n/**\n * @constant {Number} CONNECTING\n * @memberof WebSocket.prototype\n */\nObject.defineProperty(WebSocket.prototype, 'CONNECTING', {\n  enumerable: true,\n  value: readyStates.indexOf('CONNECTING')\n});\n\n/**\n * @constant {Number} OPEN\n * @memberof WebSocket\n */\nObject.defineProperty(WebSocket, 'OPEN', {\n  enumerable: true,\n  value: readyStates.indexOf('OPEN')\n});\n\n/**\n * @constant {Number} OPEN\n * @memberof WebSocket.prototype\n */\nObject.defineProperty(WebSocket.prototype, 'OPEN', {\n  enumerable: true,\n  value: readyStates.indexOf('OPEN')\n});\n\n/**\n * @constant {Number} CLOSING\n * @memberof WebSocket\n */\nObject.defineProperty(WebSocket, 'CLOSING', {\n  enumerable: true,\n  value: readyStates.indexOf('CLOSING')\n});\n\n/**\n * @constant {Number} CLOSING\n * @memberof WebSocket.prototype\n */\nObject.defineProperty(WebSocket.prototype, 'CLOSING', {\n  enumerable: true,\n  value: readyStates.indexOf('CLOSING')\n});\n\n/**\n * @constant {Number} CLOSED\n * @memberof WebSocket\n */\nObject.defineProperty(WebSocket, 'CLOSED', {\n  enumerable: true,\n  value: readyStates.indexOf('CLOSED')\n});\n\n/**\n * @constant {Number} CLOSED\n * @memberof WebSocket.prototype\n */\nObject.defineProperty(WebSocket.prototype, 'CLOSED', {\n  enumerable: true,\n  value: readyStates.indexOf('CLOSED')\n});\n\n[\n  'binaryType',\n  'bufferedAmount',\n  'extensions',\n  'isPaused',\n  'protocol',\n  'readyState',\n  'url'\n].forEach((property) => {\n  Object.defineProperty(WebSocket.prototype, property, { enumerable: true });\n});\n\n//\n// Add the `onopen`, `onerror`, `onclose`, and `onmessage` attributes.\n// See https://html.spec.whatwg.org/multipage/comms.html#the-websocket-interface\n//\n['open', 'error', 'close', 'message'].forEach((method) => {\n  Object.defineProperty(WebSocket.prototype, `on${method}`, {\n    enumerable: true,\n    get() {\n      for (const listener of this.listeners(method)) {\n        if (listener[kForOnEventAttribute]) return listener[kListener];\n      }\n\n      return null;\n    },\n    set(handler) {\n      for (const listener of this.listeners(method)) {\n        if (listener[kForOnEventAttribute]) {\n          this.removeListener(method, listener);\n          break;\n        }\n      }\n\n      if (typeof handler !== 'function') return;\n\n      this.addEventListener(method, handler, {\n        [kForOnEventAttribute]: true\n      });\n    }\n  });\n});\n\nWebSocket.prototype.addEventListener = addEventListener;\nWebSocket.prototype.removeEventListener = removeEventListener;\n\nmodule.exports = WebSocket;\n\n/**\n * Initialize a WebSocket client.\n *\n * @param {WebSocket} websocket The client to initialize\n * @param {(String|URL)} address The URL to which to connect\n * @param {Array} protocols The subprotocols\n * @param {Object} [options] Connection options\n * @param {Boolean} [options.allowSynchronousEvents=true] Specifies whether any\n *     of the `'message'`, `'ping'`, and `'pong'` events can be emitted multiple\n *     times in the same tick\n * @param {Boolean} [options.autoPong=true] Specifies whether or not to\n *     automatically send a pong in response to a ping\n * @param {Function} [options.finishRequest] A function which can be used to\n *     customize the headers of each http request before it is sent\n * @param {Boolean} [options.followRedirects=false] Whether or not to follow\n *     redirects\n * @param {Function} [options.generateMask] The function used to generate the\n *     masking key\n * @param {Number} [options.handshakeTimeout] Timeout in milliseconds for the\n *     handshake request\n * @param {Number} [options.maxPayload=104857600] The maximum allowed message\n *     size\n * @param {Number} [options.maxRedirects=10] The maximum number of redirects\n *     allowed\n * @param {String} [options.origin] Value of the `Origin` or\n *     `Sec-WebSocket-Origin` header\n * @param {(Boolean|Object)} [options.perMessageDeflate=true] Enable/disable\n *     permessage-deflate\n * @param {Number} [options.protocolVersion=13] Value of the\n *     `Sec-WebSocket-Version` header\n * @param {Boolean} [options.skipUTF8Validation=false] Specifies whether or\n *     not to skip UTF-8 validation for text and close messages\n * @private\n */\nfunction initAsClient(websocket, address, protocols, options) {\n  const opts = {\n    allowSynchronousEvents: true,\n    autoPong: true,\n    protocolVersion: protocolVersions[1],\n    maxPayload: 100 * 1024 * 1024,\n    skipUTF8Validation: false,\n    perMessageDeflate: true,\n    followRedirects: false,\n    maxRedirects: 10,\n    ...options,\n    socketPath: undefined,\n    hostname: undefined,\n    protocol: undefined,\n    timeout: undefined,\n    method: 'GET',\n    host: undefined,\n    path: undefined,\n    port: undefined\n  };\n\n  websocket._autoPong = opts.autoPong;\n\n  if (!protocolVersions.includes(opts.protocolVersion)) {\n    throw new RangeError(\n      `Unsupported protocol version: ${opts.protocolVersion} ` +\n        `(supported versions: ${protocolVersions.join(', ')})`\n    );\n  }\n\n  let parsedUrl;\n\n  if (address instanceof URL) {\n    parsedUrl = address;\n  } else {\n    try {\n      parsedUrl = new URL(address);\n    } catch (e) {\n      throw new SyntaxError(`Invalid URL: ${address}`);\n    }\n  }\n\n  if (parsedUrl.protocol === 'http:') {\n    parsedUrl.protocol = 'ws:';\n  } else if (parsedUrl.protocol === 'https:') {\n    parsedUrl.protocol = 'wss:';\n  }\n\n  websocket._url = parsedUrl.href;\n\n  const isSecure = parsedUrl.protocol === 'wss:';\n  const isIpcUrl = parsedUrl.protocol === 'ws+unix:';\n  let invalidUrlMessage;\n\n  if (parsedUrl.protocol !== 'ws:' && !isSecure && !isIpcUrl) {\n    invalidUrlMessage =\n      'The URL\\'s protocol must be one of \"ws:\", \"wss:\", ' +\n      '\"http:\", \"https:\", or \"ws+unix:\"';\n  } else if (isIpcUrl && !parsedUrl.pathname) {\n    invalidUrlMessage = \"The URL's pathname is empty\";\n  } else if (parsedUrl.hash) {\n    invalidUrlMessage = 'The URL contains a fragment identifier';\n  }\n\n  if (invalidUrlMessage) {\n    const err = new SyntaxError(invalidUrlMessage);\n\n    if (websocket._redirects === 0) {\n      throw err;\n    } else {\n      emitErrorAndClose(websocket, err);\n      return;\n    }\n  }\n\n  const defaultPort = isSecure ? 443 : 80;\n  const key = randomBytes(16).toString('base64');\n  const request = isSecure ? https.request : http.request;\n  const protocolSet = new Set();\n  let perMessageDeflate;\n\n  opts.createConnection =\n    opts.createConnection || (isSecure ? tlsConnect : netConnect);\n  opts.defaultPort = opts.defaultPort || defaultPort;\n  opts.port = parsedUrl.port || defaultPort;\n  opts.host = parsedUrl.hostname.startsWith('[')\n    ? parsedUrl.hostname.slice(1, -1)\n    : parsedUrl.hostname;\n  opts.headers = {\n    ...opts.headers,\n    'Sec-WebSocket-Version': opts.protocolVersion,\n    'Sec-WebSocket-Key': key,\n    Connection: 'Upgrade',\n    Upgrade: 'websocket'\n  };\n  opts.path = parsedUrl.pathname + parsedUrl.search;\n  opts.timeout = opts.handshakeTimeout;\n\n  if (opts.perMessageDeflate) {\n    perMessageDeflate = new PerMessageDeflate(\n      opts.perMessageDeflate !== true ? opts.perMessageDeflate : {},\n      false,\n      opts.maxPayload\n    );\n    opts.headers['Sec-WebSocket-Extensions'] = format({\n      [PerMessageDeflate.extensionName]: perMessageDeflate.offer()\n    });\n  }\n  if (protocols.length) {\n    for (const protocol of protocols) {\n      if (\n        typeof protocol !== 'string' ||\n        !subprotocolRegex.test(protocol) ||\n        protocolSet.has(protocol)\n      ) {\n        throw new SyntaxError(\n          'An invalid or duplicated subprotocol was specified'\n        );\n      }\n\n      protocolSet.add(protocol);\n    }\n\n    opts.headers['Sec-WebSocket-Protocol'] = protocols.join(',');\n  }\n  if (opts.origin) {\n    if (opts.protocolVersion < 13) {\n      opts.headers['Sec-WebSocket-Origin'] = opts.origin;\n    } else {\n      opts.headers.Origin = opts.origin;\n    }\n  }\n  if (parsedUrl.username || parsedUrl.password) {\n    opts.auth = `${parsedUrl.username}:${parsedUrl.password}`;\n  }\n\n  if (isIpcUrl) {\n    const parts = opts.path.split(':');\n\n    opts.socketPath = parts[0];\n    opts.path = parts[1];\n  }\n\n  let req;\n\n  if (opts.followRedirects) {\n    if (websocket._redirects === 0) {\n      websocket._originalIpc = isIpcUrl;\n      websocket._originalSecure = isSecure;\n      websocket._originalHostOrSocketPath = isIpcUrl\n        ? opts.socketPath\n        : parsedUrl.host;\n\n      const headers = options && options.headers;\n\n      //\n      // Shallow copy the user provided options so that headers can be changed\n      // without mutating the original object.\n      //\n      options = { ...options, headers: {} };\n\n      if (headers) {\n        for (const [key, value] of Object.entries(headers)) {\n          options.headers[key.toLowerCase()] = value;\n        }\n      }\n    } else if (websocket.listenerCount('redirect') === 0) {\n      const isSameHost = isIpcUrl\n        ? websocket._originalIpc\n          ? opts.socketPath === websocket._originalHostOrSocketPath\n          : false\n        : websocket._originalIpc\n          ? false\n          : parsedUrl.host === websocket._originalHostOrSocketPath;\n\n      if (!isSameHost || (websocket._originalSecure && !isSecure)) {\n        //\n        // Match curl 7.77.0 behavior and drop the following headers. These\n        // headers are also dropped when following a redirect to a subdomain.\n        //\n        delete opts.headers.authorization;\n        delete opts.headers.cookie;\n\n        if (!isSameHost) delete opts.headers.host;\n\n        opts.auth = undefined;\n      }\n    }\n\n    //\n    // Match curl 7.77.0 behavior and make the first `Authorization` header win.\n    // If the `Authorization` header is set, then there is nothing to do as it\n    // will take precedence.\n    //\n    if (opts.auth && !options.headers.authorization) {\n      options.headers.authorization =\n        'Basic ' + Buffer.from(opts.auth).toString('base64');\n    }\n\n    req = websocket._req = request(opts);\n\n    if (websocket._redirects) {\n      //\n      // Unlike what is done for the `'upgrade'` event, no early exit is\n      // triggered here if the user calls `websocket.close()` or\n      // `websocket.terminate()` from a listener of the `'redirect'` event. This\n      // is because the user can also call `request.destroy()` with an error\n      // before calling `websocket.close()` or `websocket.terminate()` and this\n      // would result in an error being emitted on the `request` object with no\n      // `'error'` event listeners attached.\n      //\n      websocket.emit('redirect', websocket.url, req);\n    }\n  } else {\n    req = websocket._req = request(opts);\n  }\n\n  if (opts.timeout) {\n    req.on('timeout', () => {\n      abortHandshake(websocket, req, 'Opening handshake has timed out');\n    });\n  }\n\n  req.on('error', (err) => {\n    if (req === null || req[kAborted]) return;\n\n    req = websocket._req = null;\n    emitErrorAndClose(websocket, err);\n  });\n\n  req.on('response', (res) => {\n    const location = res.headers.location;\n    const statusCode = res.statusCode;\n\n    if (\n      location &&\n      opts.followRedirects &&\n      statusCode >= 300 &&\n      statusCode < 400\n    ) {\n      if (++websocket._redirects > opts.maxRedirects) {\n        abortHandshake(websocket, req, 'Maximum redirects exceeded');\n        return;\n      }\n\n      req.abort();\n\n      let addr;\n\n      try {\n        addr = new URL(location, address);\n      } catch (e) {\n        const err = new SyntaxError(`Invalid URL: ${location}`);\n        emitErrorAndClose(websocket, err);\n        return;\n      }\n\n      initAsClient(websocket, addr, protocols, options);\n    } else if (!websocket.emit('unexpected-response', req, res)) {\n      abortHandshake(\n        websocket,\n        req,\n        `Unexpected server response: ${res.statusCode}`\n      );\n    }\n  });\n\n  req.on('upgrade', (res, socket, head) => {\n    websocket.emit('upgrade', res);\n\n    //\n    // The user may have closed the connection from a listener of the\n    // `'upgrade'` event.\n    //\n    if (websocket.readyState !== WebSocket.CONNECTING) return;\n\n    req = websocket._req = null;\n\n    const upgrade = res.headers.upgrade;\n\n    if (upgrade === undefined || upgrade.toLowerCase() !== 'websocket') {\n      abortHandshake(websocket, socket, 'Invalid Upgrade header');\n      return;\n    }\n\n    const digest = createHash('sha1')\n      .update(key + GUID)\n      .digest('base64');\n\n    if (res.headers['sec-websocket-accept'] !== digest) {\n      abortHandshake(websocket, socket, 'Invalid Sec-WebSocket-Accept header');\n      return;\n    }\n\n    const serverProt = res.headers['sec-websocket-protocol'];\n    let protError;\n\n    if (serverProt !== undefined) {\n      if (!protocolSet.size) {\n        protError = 'Server sent a subprotocol but none was requested';\n      } else if (!protocolSet.has(serverProt)) {\n        protError = 'Server sent an invalid subprotocol';\n      }\n    } else if (protocolSet.size) {\n      protError = 'Server sent no subprotocol';\n    }\n\n    if (protError) {\n      abortHandshake(websocket, socket, protError);\n      return;\n    }\n\n    if (serverProt) websocket._protocol = serverProt;\n\n    const secWebSocketExtensions = res.headers['sec-websocket-extensions'];\n\n    if (secWebSocketExtensions !== undefined) {\n      if (!perMessageDeflate) {\n        const message =\n          'Server sent a Sec-WebSocket-Extensions header but no extension ' +\n          'was requested';\n        abortHandshake(websocket, socket, message);\n        return;\n      }\n\n      let extensions;\n\n      try {\n        extensions = parse(secWebSocketExtensions);\n      } catch (err) {\n        const message = 'Invalid Sec-WebSocket-Extensions header';\n        abortHandshake(websocket, socket, message);\n        return;\n      }\n\n      const extensionNames = Object.keys(extensions);\n\n      if (\n        extensionNames.length !== 1 ||\n        extensionNames[0] !== PerMessageDeflate.extensionName\n      ) {\n        const message = 'Server indicated an extension that was not requested';\n        abortHandshake(websocket, socket, message);\n        return;\n      }\n\n      try {\n        perMessageDeflate.accept(extensions[PerMessageDeflate.extensionName]);\n      } catch (err) {\n        const message = 'Invalid Sec-WebSocket-Extensions header';\n        abortHandshake(websocket, socket, message);\n        return;\n      }\n\n      websocket._extensions[PerMessageDeflate.extensionName] =\n        perMessageDeflate;\n    }\n\n    websocket.setSocket(socket, head, {\n      allowSynchronousEvents: opts.allowSynchronousEvents,\n      generateMask: opts.generateMask,\n      maxPayload: opts.maxPayload,\n      skipUTF8Validation: opts.skipUTF8Validation\n    });\n  });\n\n  if (opts.finishRequest) {\n    opts.finishRequest(req, websocket);\n  } else {\n    req.end();\n  }\n}\n\n/**\n * Emit the `'error'` and `'close'` events.\n *\n * @param {WebSocket} websocket The WebSocket instance\n * @param {Error} The error to emit\n * @private\n */\nfunction emitErrorAndClose(websocket, err) {\n  websocket._readyState = WebSocket.CLOSING;\n  //\n  // The following assignment is practically useless and is done only for\n  // consistency.\n  //\n  websocket._errorEmitted = true;\n  websocket.emit('error', err);\n  websocket.emitClose();\n}\n\n/**\n * Create a `net.Socket` and initiate a connection.\n *\n * @param {Object} options Connection options\n * @return {net.Socket} The newly created socket used to start the connection\n * @private\n */\nfunction netConnect(options) {\n  options.path = options.socketPath;\n  return net.connect(options);\n}\n\n/**\n * Create a `tls.TLSSocket` and initiate a connection.\n *\n * @param {Object} options Connection options\n * @return {tls.TLSSocket} The newly created socket used to start the connection\n * @private\n */\nfunction tlsConnect(options) {\n  options.path = undefined;\n\n  if (!options.servername && options.servername !== '') {\n    options.servername = net.isIP(options.host) ? '' : options.host;\n  }\n\n  return tls.connect(options);\n}\n\n/**\n * Abort the handshake and emit an error.\n *\n * @param {WebSocket} websocket The WebSocket instance\n * @param {(http.ClientRequest|net.Socket|tls.Socket)} stream The request to\n *     abort or the socket to destroy\n * @param {String} message The error message\n * @private\n */\nfunction abortHandshake(websocket, stream, message) {\n  websocket._readyState = WebSocket.CLOSING;\n\n  const err = new Error(message);\n  Error.captureStackTrace(err, abortHandshake);\n\n  if (stream.setHeader) {\n    stream[kAborted] = true;\n    stream.abort();\n\n    if (stream.socket && !stream.socket.destroyed) {\n      //\n      // On Node.js >= 14.3.0 `request.abort()` does not destroy the socket if\n      // called after the request completed. See\n      // https://github.com/websockets/ws/issues/1869.\n      //\n      stream.socket.destroy();\n    }\n\n    process.nextTick(emitErrorAndClose, websocket, err);\n  } else {\n    stream.destroy(err);\n    stream.once('error', websocket.emit.bind(websocket, 'error'));\n    stream.once('close', websocket.emitClose.bind(websocket));\n  }\n}\n\n/**\n * Handle cases where the `ping()`, `pong()`, or `send()` methods are called\n * when the `readyState` attribute is `CLOSING` or `CLOSED`.\n *\n * @param {WebSocket} websocket The WebSocket instance\n * @param {*} [data] The data to send\n * @param {Function} [cb] Callback\n * @private\n */\nfunction sendAfterClose(websocket, data, cb) {\n  if (data) {\n    const length = isBlob(data) ? data.size : toBuffer(data).length;\n\n    //\n    // The `_bufferedAmount` property is used only when the peer is a client and\n    // the opening handshake fails. Under these circumstances, in fact, the\n    // `setSocket()` method is not called, so the `_socket` and `_sender`\n    // properties are set to `null`.\n    //\n    if (websocket._socket) websocket._sender._bufferedBytes += length;\n    else websocket._bufferedAmount += length;\n  }\n\n  if (cb) {\n    const err = new Error(\n      `WebSocket is not open: readyState ${websocket.readyState} ` +\n        `(${readyStates[websocket.readyState]})`\n    );\n    process.nextTick(cb, err);\n  }\n}\n\n/**\n * The listener of the `Receiver` `'conclude'` event.\n *\n * @param {Number} code The status code\n * @param {Buffer} reason The reason for closing\n * @private\n */\nfunction receiverOnConclude(code, reason) {\n  const websocket = this[kWebSocket];\n\n  websocket._closeFrameReceived = true;\n  websocket._closeMessage = reason;\n  websocket._closeCode = code;\n\n  if (websocket._socket[kWebSocket] === undefined) return;\n\n  websocket._socket.removeListener('data', socketOnData);\n  process.nextTick(resume, websocket._socket);\n\n  if (code === 1005) websocket.close();\n  else websocket.close(code, reason);\n}\n\n/**\n * The listener of the `Receiver` `'drain'` event.\n *\n * @private\n */\nfunction receiverOnDrain() {\n  const websocket = this[kWebSocket];\n\n  if (!websocket.isPaused) websocket._socket.resume();\n}\n\n/**\n * The listener of the `Receiver` `'error'` event.\n *\n * @param {(RangeError|Error)} err The emitted error\n * @private\n */\nfunction receiverOnError(err) {\n  const websocket = this[kWebSocket];\n\n  if (websocket._socket[kWebSocket] !== undefined) {\n    websocket._socket.removeListener('data', socketOnData);\n\n    //\n    // On Node.js < 14.0.0 the `'error'` event is emitted synchronously. See\n    // https://github.com/websockets/ws/issues/1940.\n    //\n    process.nextTick(resume, websocket._socket);\n\n    websocket.close(err[kStatusCode]);\n  }\n\n  if (!websocket._errorEmitted) {\n    websocket._errorEmitted = true;\n    websocket.emit('error', err);\n  }\n}\n\n/**\n * The listener of the `Receiver` `'finish'` event.\n *\n * @private\n */\nfunction receiverOnFinish() {\n  this[kWebSocket].emitClose();\n}\n\n/**\n * The listener of the `Receiver` `'message'` event.\n *\n * @param {Buffer|ArrayBuffer|Buffer[])} data The message\n * @param {Boolean} isBinary Specifies whether the message is binary or not\n * @private\n */\nfunction receiverOnMessage(data, isBinary) {\n  this[kWebSocket].emit('message', data, isBinary);\n}\n\n/**\n * The listener of the `Receiver` `'ping'` event.\n *\n * @param {Buffer} data The data included in the ping frame\n * @private\n */\nfunction receiverOnPing(data) {\n  const websocket = this[kWebSocket];\n\n  if (websocket._autoPong) websocket.pong(data, !this._isServer, NOOP);\n  websocket.emit('ping', data);\n}\n\n/**\n * The listener of the `Receiver` `'pong'` event.\n *\n * @param {Buffer} data The data included in the pong frame\n * @private\n */\nfunction receiverOnPong(data) {\n  this[kWebSocket].emit('pong', data);\n}\n\n/**\n * Resume a readable stream\n *\n * @param {Readable} stream The readable stream\n * @private\n */\nfunction resume(stream) {\n  stream.resume();\n}\n\n/**\n * The `Sender` error event handler.\n *\n * @param {Error} The error\n * @private\n */\nfunction senderOnError(err) {\n  const websocket = this[kWebSocket];\n\n  if (websocket.readyState === WebSocket.CLOSED) return;\n  if (websocket.readyState === WebSocket.OPEN) {\n    websocket._readyState = WebSocket.CLOSING;\n    setCloseTimer(websocket);\n  }\n\n  //\n  // `socket.end()` is used instead of `socket.destroy()` to allow the other\n  // peer to finish sending queued data. There is no need to set a timer here\n  // because `CLOSING` means that it is already set or not needed.\n  //\n  this._socket.end();\n\n  if (!websocket._errorEmitted) {\n    websocket._errorEmitted = true;\n    websocket.emit('error', err);\n  }\n}\n\n/**\n * Set a timer to destroy the underlying raw socket of a WebSocket.\n *\n * @param {WebSocket} websocket The WebSocket instance\n * @private\n */\nfunction setCloseTimer(websocket) {\n  websocket._closeTimer = setTimeout(\n    websocket._socket.destroy.bind(websocket._socket),\n    closeTimeout\n  );\n}\n\n/**\n * The listener of the socket `'close'` event.\n *\n * @private\n */\nfunction socketOnClose() {\n  const websocket = this[kWebSocket];\n\n  this.removeListener('close', socketOnClose);\n  this.removeListener('data', socketOnData);\n  this.removeListener('end', socketOnEnd);\n\n  websocket._readyState = WebSocket.CLOSING;\n\n  let chunk;\n\n  //\n  // The close frame might not have been received or the `'end'` event emitted,\n  // for example, if the socket was destroyed due to an error. Ensure that the\n  // `receiver` stream is closed after writing any remaining buffered data to\n  // it. If the readable side of the socket is in flowing mode then there is no\n  // buffered data as everything has been already written and `readable.read()`\n  // will return `null`. If instead, the socket is paused, any possible buffered\n  // data will be read as a single chunk.\n  //\n  if (\n    !this._readableState.endEmitted &&\n    !websocket._closeFrameReceived &&\n    !websocket._receiver._writableState.errorEmitted &&\n    (chunk = websocket._socket.read()) !== null\n  ) {\n    websocket._receiver.write(chunk);\n  }\n\n  websocket._receiver.end();\n\n  this[kWebSocket] = undefined;\n\n  clearTimeout(websocket._closeTimer);\n\n  if (\n    websocket._receiver._writableState.finished ||\n    websocket._receiver._writableState.errorEmitted\n  ) {\n    websocket.emitClose();\n  } else {\n    websocket._receiver.on('error', receiverOnFinish);\n    websocket._receiver.on('finish', receiverOnFinish);\n  }\n}\n\n/**\n * The listener of the socket `'data'` event.\n *\n * @param {Buffer} chunk A chunk of data\n * @private\n */\nfunction socketOnData(chunk) {\n  if (!this[kWebSocket]._receiver.write(chunk)) {\n    this.pause();\n  }\n}\n\n/**\n * The listener of the socket `'end'` event.\n *\n * @private\n */\nfunction socketOnEnd() {\n  const websocket = this[kWebSocket];\n\n  websocket._readyState = WebSocket.CLOSING;\n  websocket._receiver.end();\n  this.end();\n}\n\n/**\n * The listener of the socket `'error'` event.\n *\n * @private\n */\nfunction socketOnError() {\n  const websocket = this[kWebSocket];\n\n  this.removeListener('error', socketOnError);\n  this.on('error', NOOP);\n\n  if (websocket) {\n    websocket._readyState = WebSocket.CLOSING;\n    this.destroy();\n  }\n}\n", "/* eslint no-unused-vars: [\"error\", { \"varsIgnorePattern\": \"^WebSocket$\" }] */\n'use strict';\n\nconst WebSocket = require('./websocket');\nconst { Duplex } = require('stream');\n\n/**\n * Emits the `'close'` event on a stream.\n *\n * @param {Duplex} stream The stream.\n * @private\n */\nfunction emitClose(stream) {\n  stream.emit('close');\n}\n\n/**\n * The listener of the `'end'` event.\n *\n * @private\n */\nfunction duplexOnEnd() {\n  if (!this.destroyed && this._writableState.finished) {\n    this.destroy();\n  }\n}\n\n/**\n * The listener of the `'error'` event.\n *\n * @param {Error} err The error\n * @private\n */\nfunction duplexOnError(err) {\n  this.removeListener('error', duplexOnError);\n  this.destroy();\n  if (this.listenerCount('error') === 0) {\n    // Do not suppress the throwing behavior.\n    this.emit('error', err);\n  }\n}\n\n/**\n * Wraps a `WebSocket` in a duplex stream.\n *\n * @param {WebSocket} ws The `WebSocket` to wrap\n * @param {Object} [options] The options for the `Duplex` constructor\n * @return {Duplex} The duplex stream\n * @public\n */\nfunction createWebSocketStream(ws, options) {\n  let terminateOnDestroy = true;\n\n  const duplex = new Duplex({\n    ...options,\n    autoDestroy: false,\n    emitClose: false,\n    objectMode: false,\n    writableObjectMode: false\n  });\n\n  ws.on('message', function message(msg, isBinary) {\n    const data =\n      !isBinary && duplex._readableState.objectMode ? msg.toString() : msg;\n\n    if (!duplex.push(data)) ws.pause();\n  });\n\n  ws.once('error', function error(err) {\n    if (duplex.destroyed) return;\n\n    // Prevent `ws.terminate()` from being called by `duplex._destroy()`.\n    //\n    // - If the `'error'` event is emitted before the `'open'` event, then\n    //   `ws.terminate()` is a noop as no socket is assigned.\n    // - Otherwise, the error is re-emitted by the listener of the `'error'`\n    //   event of the `Receiver` object. The listener already closes the\n    //   connection by calling `ws.close()`. This allows a close frame to be\n    //   sent to the other peer. If `ws.terminate()` is called right after this,\n    //   then the close frame might not be sent.\n    terminateOnDestroy = false;\n    duplex.destroy(err);\n  });\n\n  ws.once('close', function close() {\n    if (duplex.destroyed) return;\n\n    duplex.push(null);\n  });\n\n  duplex._destroy = function (err, callback) {\n    if (ws.readyState === ws.CLOSED) {\n      callback(err);\n      process.nextTick(emitClose, duplex);\n      return;\n    }\n\n    let called = false;\n\n    ws.once('error', function error(err) {\n      called = true;\n      callback(err);\n    });\n\n    ws.once('close', function close() {\n      if (!called) callback(err);\n      process.nextTick(emitClose, duplex);\n    });\n\n    if (terminateOnDestroy) ws.terminate();\n  };\n\n  duplex._final = function (callback) {\n    if (ws.readyState === ws.CONNECTING) {\n      ws.once('open', function open() {\n        duplex._final(callback);\n      });\n      return;\n    }\n\n    // If the value of the `_socket` property is `null` it means that `ws` is a\n    // client websocket and the handshake failed. In fact, when this happens, a\n    // socket is never assigned to the websocket. Wait for the `'error'` event\n    // that will be emitted by the websocket.\n    if (ws._socket === null) return;\n\n    if (ws._socket._writableState.finished) {\n      callback();\n      if (duplex._readableState.endEmitted) duplex.destroy();\n    } else {\n      ws._socket.once('finish', function finish() {\n        // `duplex` is not destroyed here because the `'end'` event will be\n        // emitted on `duplex` after this `'finish'` event. The EOF signaling\n        // `null` chunk is, in fact, pushed when the websocket emits `'close'`.\n        callback();\n      });\n      ws.close();\n    }\n  };\n\n  duplex._read = function () {\n    if (ws.isPaused) ws.resume();\n  };\n\n  duplex._write = function (chunk, encoding, callback) {\n    if (ws.readyState === ws.CONNECTING) {\n      ws.once('open', function open() {\n        duplex._write(chunk, encoding, callback);\n      });\n      return;\n    }\n\n    ws.send(chunk, callback);\n  };\n\n  duplex.on('end', duplexOnEnd);\n  duplex.on('error', duplexOnError);\n  return duplex;\n}\n\nmodule.exports = createWebSocketStream;\n", "'use strict';\n\nconst { tokenChars } = require('./validation');\n\n/**\n * Parses the `Sec-WebSocket-Protocol` header into a set of subprotocol names.\n *\n * @param {String} header The field value of the header\n * @return {Set} The subprotocol names\n * @public\n */\nfunction parse(header) {\n  const protocols = new Set();\n  let start = -1;\n  let end = -1;\n  let i = 0;\n\n  for (i; i < header.length; i++) {\n    const code = header.charCodeAt(i);\n\n    if (end === -1 && tokenChars[code] === 1) {\n      if (start === -1) start = i;\n    } else if (\n      i !== 0 &&\n      (code === 0x20 /* ' ' */ || code === 0x09) /* '\\t' */\n    ) {\n      if (end === -1 && start !== -1) end = i;\n    } else if (code === 0x2c /* ',' */) {\n      if (start === -1) {\n        throw new SyntaxError(`Unexpected character at index ${i}`);\n      }\n\n      if (end === -1) end = i;\n\n      const protocol = header.slice(start, end);\n\n      if (protocols.has(protocol)) {\n        throw new SyntaxError(`The \"${protocol}\" subprotocol is duplicated`);\n      }\n\n      protocols.add(protocol);\n      start = end = -1;\n    } else {\n      throw new SyntaxError(`Unexpected character at index ${i}`);\n    }\n  }\n\n  if (start === -1 || end !== -1) {\n    throw new SyntaxError('Unexpected end of input');\n  }\n\n  const protocol = header.slice(start, i);\n\n  if (protocols.has(protocol)) {\n    throw new SyntaxError(`The \"${protocol}\" subprotocol is duplicated`);\n  }\n\n  protocols.add(protocol);\n  return protocols;\n}\n\nmodule.exports = { parse };\n", "/* eslint no-unused-vars: [\"error\", { \"varsIgnorePattern\": \"^Duplex$\", \"caughtErrors\": \"none\" }] */\n\n'use strict';\n\nconst EventEmitter = require('events');\nconst http = require('http');\nconst { Duplex } = require('stream');\nconst { createHash } = require('crypto');\n\nconst extension = require('./extension');\nconst PerMessageDeflate = require('./permessage-deflate');\nconst subprotocol = require('./subprotocol');\nconst WebSocket = require('./websocket');\nconst { GUID, kWebSocket } = require('./constants');\n\nconst keyRegex = /^[+/0-9A-Za-z]{22}==$/;\n\nconst RUNNING = 0;\nconst CLOSING = 1;\nconst CLOSED = 2;\n\n/**\n * Class representing a WebSocket server.\n *\n * @extends EventEmitter\n */\nclass WebSocketServer extends EventEmitter {\n  /**\n   * Create a `WebSocketServer` instance.\n   *\n   * @param {Object} options Configuration options\n   * @param {Boolean} [options.allowSynchronousEvents=true] Specifies whether\n   *     any of the `'message'`, `'ping'`, and `'pong'` events can be emitted\n   *     multiple times in the same tick\n   * @param {Boolean} [options.autoPong=true] Specifies whether or not to\n   *     automatically send a pong in response to a ping\n   * @param {Number} [options.backlog=511] The maximum length of the queue of\n   *     pending connections\n   * @param {Boolean} [options.clientTracking=true] Specifies whether or not to\n   *     track clients\n   * @param {Function} [options.handleProtocols] A hook to handle protocols\n   * @param {String} [options.host] The hostname where to bind the server\n   * @param {Number} [options.maxPayload=104857600] The maximum allowed message\n   *     size\n   * @param {Boolean} [options.noServer=false] Enable no server mode\n   * @param {String} [options.path] Accept only connections matching this path\n   * @param {(Boolean|Object)} [options.perMessageDeflate=false] Enable/disable\n   *     permessage-deflate\n   * @param {Number} [options.port] The port where to bind the server\n   * @param {(http.Server|https.Server)} [options.server] A pre-created HTTP/S\n   *     server to use\n   * @param {Boolean} [options.skipUTF8Validation=false] Specifies whether or\n   *     not to skip UTF-8 validation for text and close messages\n   * @param {Function} [options.verifyClient] A hook to reject connections\n   * @param {Function} [options.WebSocket=WebSocket] Specifies the `WebSocket`\n   *     class to use. It must be the `WebSocket` class or class that extends it\n   * @param {Function} [callback] A listener for the `listening` event\n   */\n  constructor(options, callback) {\n    super();\n\n    options = {\n      allowSynchronousEvents: true,\n      autoPong: true,\n      maxPayload: 100 * 1024 * 1024,\n      skipUTF8Validation: false,\n      perMessageDeflate: false,\n      handleProtocols: null,\n      clientTracking: true,\n      verifyClient: null,\n      noServer: false,\n      backlog: null, // use default (511 as implemented in net.js)\n      server: null,\n      host: null,\n      path: null,\n      port: null,\n      WebSocket,\n      ...options\n    };\n\n    if (\n      (options.port == null && !options.server && !options.noServer) ||\n      (options.port != null && (options.server || options.noServer)) ||\n      (options.server && options.noServer)\n    ) {\n      throw new TypeError(\n        'One and only one of the \"port\", \"server\", or \"noServer\" options ' +\n          'must be specified'\n      );\n    }\n\n    if (options.port != null) {\n      this._server = http.createServer((req, res) => {\n        const body = http.STATUS_CODES[426];\n\n        res.writeHead(426, {\n          'Content-Length': body.length,\n          'Content-Type': 'text/plain'\n        });\n        res.end(body);\n      });\n      this._server.listen(\n        options.port,\n        options.host,\n        options.backlog,\n        callback\n      );\n    } else if (options.server) {\n      this._server = options.server;\n    }\n\n    if (this._server) {\n      const emitConnection = this.emit.bind(this, 'connection');\n\n      this._removeListeners = addListeners(this._server, {\n        listening: this.emit.bind(this, 'listening'),\n        error: this.emit.bind(this, 'error'),\n        upgrade: (req, socket, head) => {\n          this.handleUpgrade(req, socket, head, emitConnection);\n        }\n      });\n    }\n\n    if (options.perMessageDeflate === true) options.perMessageDeflate = {};\n    if (options.clientTracking) {\n      this.clients = new Set();\n      this._shouldEmitClose = false;\n    }\n\n    this.options = options;\n    this._state = RUNNING;\n  }\n\n  /**\n   * Returns the bound address, the address family name, and port of the server\n   * as reported by the operating system if listening on an IP socket.\n   * If the server is listening on a pipe or UNIX domain socket, the name is\n   * returned as a string.\n   *\n   * @return {(Object|String|null)} The address of the server\n   * @public\n   */\n  address() {\n    if (this.options.noServer) {\n      throw new Error('The server is operating in \"noServer\" mode');\n    }\n\n    if (!this._server) return null;\n    return this._server.address();\n  }\n\n  /**\n   * Stop the server from accepting new connections and emit the `'close'` event\n   * when all existing connections are closed.\n   *\n   * @param {Function} [cb] A one-time listener for the `'close'` event\n   * @public\n   */\n  close(cb) {\n    if (this._state === CLOSED) {\n      if (cb) {\n        this.once('close', () => {\n          cb(new Error('The server is not running'));\n        });\n      }\n\n      process.nextTick(emitClose, this);\n      return;\n    }\n\n    if (cb) this.once('close', cb);\n\n    if (this._state === CLOSING) return;\n    this._state = CLOSING;\n\n    if (this.options.noServer || this.options.server) {\n      if (this._server) {\n        this._removeListeners();\n        this._removeListeners = this._server = null;\n      }\n\n      if (this.clients) {\n        if (!this.clients.size) {\n          process.nextTick(emitClose, this);\n        } else {\n          this._shouldEmitClose = true;\n        }\n      } else {\n        process.nextTick(emitClose, this);\n      }\n    } else {\n      const server = this._server;\n\n      this._removeListeners();\n      this._removeListeners = this._server = null;\n\n      //\n      // The HTTP/S server was created internally. Close it, and rely on its\n      // `'close'` event.\n      //\n      server.close(() => {\n        emitClose(this);\n      });\n    }\n  }\n\n  /**\n   * See if a given request should be handled by this server instance.\n   *\n   * @param {http.IncomingMessage} req Request object to inspect\n   * @return {Boolean} `true` if the request is valid, else `false`\n   * @public\n   */\n  shouldHandle(req) {\n    if (this.options.path) {\n      const index = req.url.indexOf('?');\n      const pathname = index !== -1 ? req.url.slice(0, index) : req.url;\n\n      if (pathname !== this.options.path) return false;\n    }\n\n    return true;\n  }\n\n  /**\n   * Handle a HTTP Upgrade request.\n   *\n   * @param {http.IncomingMessage} req The request object\n   * @param {Duplex} socket The network socket between the server and client\n   * @param {Buffer} head The first packet of the upgraded stream\n   * @param {Function} cb Callback\n   * @public\n   */\n  handleUpgrade(req, socket, head, cb) {\n    socket.on('error', socketOnError);\n\n    const key = req.headers['sec-websocket-key'];\n    const upgrade = req.headers.upgrade;\n    const version = +req.headers['sec-websocket-version'];\n\n    if (req.method !== 'GET') {\n      const message = 'Invalid HTTP method';\n      abortHandshakeOrEmitwsClientError(this, req, socket, 405, message);\n      return;\n    }\n\n    if (upgrade === undefined || upgrade.toLowerCase() !== 'websocket') {\n      const message = 'Invalid Upgrade header';\n      abortHandshakeOrEmitwsClientError(this, req, socket, 400, message);\n      return;\n    }\n\n    if (key === undefined || !keyRegex.test(key)) {\n      const message = 'Missing or invalid Sec-WebSocket-Key header';\n      abortHandshakeOrEmitwsClientError(this, req, socket, 400, message);\n      return;\n    }\n\n    if (version !== 8 && version !== 13) {\n      const message = 'Missing or invalid Sec-WebSocket-Version header';\n      abortHandshakeOrEmitwsClientError(this, req, socket, 400, message);\n      return;\n    }\n\n    if (!this.shouldHandle(req)) {\n      abortHandshake(socket, 400);\n      return;\n    }\n\n    const secWebSocketProtocol = req.headers['sec-websocket-protocol'];\n    let protocols = new Set();\n\n    if (secWebSocketProtocol !== undefined) {\n      try {\n        protocols = subprotocol.parse(secWebSocketProtocol);\n      } catch (err) {\n        const message = 'Invalid Sec-WebSocket-Protocol header';\n        abortHandshakeOrEmitwsClientError(this, req, socket, 400, message);\n        return;\n      }\n    }\n\n    const secWebSocketExtensions = req.headers['sec-websocket-extensions'];\n    const extensions = {};\n\n    if (\n      this.options.perMessageDeflate &&\n      secWebSocketExtensions !== undefined\n    ) {\n      const perMessageDeflate = new PerMessageDeflate(\n        this.options.perMessageDeflate,\n        true,\n        this.options.maxPayload\n      );\n\n      try {\n        const offers = extension.parse(secWebSocketExtensions);\n\n        if (offers[PerMessageDeflate.extensionName]) {\n          perMessageDeflate.accept(offers[PerMessageDeflate.extensionName]);\n          extensions[PerMessageDeflate.extensionName] = perMessageDeflate;\n        }\n      } catch (err) {\n        const message =\n          'Invalid or unacceptable Sec-WebSocket-Extensions header';\n        abortHandshakeOrEmitwsClientError(this, req, socket, 400, message);\n        return;\n      }\n    }\n\n    //\n    // Optionally call external client verification handler.\n    //\n    if (this.options.verifyClient) {\n      const info = {\n        origin:\n          req.headers[`${version === 8 ? 'sec-websocket-origin' : 'origin'}`],\n        secure: !!(req.socket.authorized || req.socket.encrypted),\n        req\n      };\n\n      if (this.options.verifyClient.length === 2) {\n        this.options.verifyClient(info, (verified, code, message, headers) => {\n          if (!verified) {\n            return abortHandshake(socket, code || 401, message, headers);\n          }\n\n          this.completeUpgrade(\n            extensions,\n            key,\n            protocols,\n            req,\n            socket,\n            head,\n            cb\n          );\n        });\n        return;\n      }\n\n      if (!this.options.verifyClient(info)) return abortHandshake(socket, 401);\n    }\n\n    this.completeUpgrade(extensions, key, protocols, req, socket, head, cb);\n  }\n\n  /**\n   * Upgrade the connection to WebSocket.\n   *\n   * @param {Object} extensions The accepted extensions\n   * @param {String} key The value of the `Sec-WebSocket-Key` header\n   * @param {Set} protocols The subprotocols\n   * @param {http.IncomingMessage} req The request object\n   * @param {Duplex} socket The network socket between the server and client\n   * @param {Buffer} head The first packet of the upgraded stream\n   * @param {Function} cb Callback\n   * @throws {Error} If called more than once with the same socket\n   * @private\n   */\n  completeUpgrade(extensions, key, protocols, req, socket, head, cb) {\n    //\n    // Destroy the socket if the client has already sent a FIN packet.\n    //\n    if (!socket.readable || !socket.writable) return socket.destroy();\n\n    if (socket[kWebSocket]) {\n      throw new Error(\n        'server.handleUpgrade() was called more than once with the same ' +\n          'socket, possibly due to a misconfiguration'\n      );\n    }\n\n    if (this._state > RUNNING) return abortHandshake(socket, 503);\n\n    const digest = createHash('sha1')\n      .update(key + GUID)\n      .digest('base64');\n\n    const headers = [\n      'HTTP/1.1 101 Switching Protocols',\n      'Upgrade: websocket',\n      'Connection: Upgrade',\n      `Sec-WebSocket-Accept: ${digest}`\n    ];\n\n    const ws = new this.options.WebSocket(null, undefined, this.options);\n\n    if (protocols.size) {\n      //\n      // Optionally call external protocol selection handler.\n      //\n      const protocol = this.options.handleProtocols\n        ? this.options.handleProtocols(protocols, req)\n        : protocols.values().next().value;\n\n      if (protocol) {\n        headers.push(`Sec-WebSocket-Protocol: ${protocol}`);\n        ws._protocol = protocol;\n      }\n    }\n\n    if (extensions[PerMessageDeflate.extensionName]) {\n      const params = extensions[PerMessageDeflate.extensionName].params;\n      const value = extension.format({\n        [PerMessageDeflate.extensionName]: [params]\n      });\n      headers.push(`Sec-WebSocket-Extensions: ${value}`);\n      ws._extensions = extensions;\n    }\n\n    //\n    // Allow external modification/inspection of handshake headers.\n    //\n    this.emit('headers', headers, req);\n\n    socket.write(headers.concat('\\r\\n').join('\\r\\n'));\n    socket.removeListener('error', socketOnError);\n\n    ws.setSocket(socket, head, {\n      allowSynchronousEvents: this.options.allowSynchronousEvents,\n      maxPayload: this.options.maxPayload,\n      skipUTF8Validation: this.options.skipUTF8Validation\n    });\n\n    if (this.clients) {\n      this.clients.add(ws);\n      ws.on('close', () => {\n        this.clients.delete(ws);\n\n        if (this._shouldEmitClose && !this.clients.size) {\n          process.nextTick(emitClose, this);\n        }\n      });\n    }\n\n    cb(ws, req);\n  }\n}\n\nmodule.exports = WebSocketServer;\n\n/**\n * Add event listeners on an `EventEmitter` using a map of <event, listener>\n * pairs.\n *\n * @param {EventEmitter} server The event emitter\n * @param {Object.<String, Function>} map The listeners to add\n * @return {Function} A function that will remove the added listeners when\n *     called\n * @private\n */\nfunction addListeners(server, map) {\n  for (const event of Object.keys(map)) server.on(event, map[event]);\n\n  return function removeListeners() {\n    for (const event of Object.keys(map)) {\n      server.removeListener(event, map[event]);\n    }\n  };\n}\n\n/**\n * Emit a `'close'` event on an `EventEmitter`.\n *\n * @param {EventEmitter} server The event emitter\n * @private\n */\nfunction emitClose(server) {\n  server._state = CLOSED;\n  server.emit('close');\n}\n\n/**\n * Handle socket errors.\n *\n * @private\n */\nfunction socketOnError() {\n  this.destroy();\n}\n\n/**\n * Close the connection when preconditions are not fulfilled.\n *\n * @param {Duplex} socket The socket of the upgrade request\n * @param {Number} code The HTTP response status code\n * @param {String} [message] The HTTP response body\n * @param {Object} [headers] Additional HTTP response headers\n * @private\n */\nfunction abortHandshake(socket, code, message, headers) {\n  //\n  // The socket is writable unless the user destroyed or ended it before calling\n  // `server.handleUpgrade()` or in the `verifyClient` function, which is a user\n  // error. Handling this does not make much sense as the worst that can happen\n  // is that some of the data written by the user might be discarded due to the\n  // call to `socket.end()` below, which triggers an `'error'` event that in\n  // turn causes the socket to be destroyed.\n  //\n  message = message || http.STATUS_CODES[code];\n  headers = {\n    Connection: 'close',\n    'Content-Type': 'text/html',\n    'Content-Length': Buffer.byteLength(message),\n    ...headers\n  };\n\n  socket.once('finish', socket.destroy);\n\n  socket.end(\n    `HTTP/1.1 ${code} ${http.STATUS_CODES[code]}\\r\\n` +\n      Object.keys(headers)\n        .map((h) => `${h}: ${headers[h]}`)\n        .join('\\r\\n') +\n      '\\r\\n\\r\\n' +\n      message\n  );\n}\n\n/**\n * Emit a `'wsClientError'` event on a `WebSocketServer` if there is at least\n * one listener for it, otherwise call `abortHandshake()`.\n *\n * @param {WebSocketServer} server The WebSocket server\n * @param {http.IncomingMessage} req The request object\n * @param {Duplex} socket The socket of the upgrade request\n * @param {Number} code The HTTP response status code\n * @param {String} message The HTTP response body\n * @private\n */\nfunction abortHandshakeOrEmitwsClientError(server, req, socket, code, message) {\n  if (server.listenerCount('wsClientError')) {\n    const err = new Error(message);\n    Error.captureStackTrace(err, abortHandshakeOrEmitwsClientError);\n\n    server.emit('wsClientError', err, socket, req);\n  } else {\n    abortHandshake(socket, code, message);\n  }\n}\n", "import createWebSocketStream from './lib/stream.js';\nimport Receiver from './lib/receiver.js';\nimport Sender from './lib/sender.js';\nimport WebSocket from './lib/websocket.js';\nimport WebSocketServer from './lib/websocket-server.js';\n\nexport { createWebSocketStream, Receiver, Sender, WebSocket, WebSocketServer };\nexport default WebSocket;\n", "// can-promise has a crash in some versions of react native that dont have\n// standard global objects\n// https://github.com/soldair/node-qrcode/issues/157\n\nmodule.exports = function () {\n  return typeof Promise === 'function' && Promise.prototype && Promise.prototype.then\n}\n", "let toSJISFunction\nconst CODEWORDS_COUNT = [\n  0, // Not used\n  26, 44, 70, 100, 134, 172, 196, 242, 292, 346,\n  404, 466, 532, 581, 655, 733, 815, 901, 991, 1085,\n  1156, 1258, 1364, 1474, 1588, 1706, 1828, 1921, 2051, 2185,\n  2323, 2465, 2611, 2761, 2876, 3034, 3196, 3362, 3532, 3706\n]\n\n/**\n * Returns the QR Code size for the specified version\n *\n * @param  {Number} version QR Code version\n * @return {Number}         size of QR code\n */\nexports.getSymbolSize = function getSymbolSize (version) {\n  if (!version) throw new Error('\"version\" cannot be null or undefined')\n  if (version < 1 || version > 40) throw new Error('\"version\" should be in range from 1 to 40')\n  return version * 4 + 17\n}\n\n/**\n * Returns the total number of codewords used to store data and EC information.\n *\n * @param  {Number} version QR Code version\n * @return {Number}         Data length in bits\n */\nexports.getSymbolTotalCodewords = function getSymbolTotalCodewords (version) {\n  return CODEWORDS_COUNT[version]\n}\n\n/**\n * Encode data with Bose-Chaudhuri-Hocquenghem\n *\n * @param  {Number} data Value to encode\n * @return {Number}      Encoded value\n */\nexports.getBCHDigit = function (data) {\n  let digit = 0\n\n  while (data !== 0) {\n    digit++\n    data >>>= 1\n  }\n\n  return digit\n}\n\nexports.setToSJISFunction = function setToSJISFunction (f) {\n  if (typeof f !== 'function') {\n    throw new Error('\"toSJISFunc\" is not a valid function.')\n  }\n\n  toSJISFunction = f\n}\n\nexports.isKanjiModeEnabled = function () {\n  return typeof toSJISFunction !== 'undefined'\n}\n\nexports.toSJIS = function toSJIS (kanji) {\n  return toSJISFunction(kanji)\n}\n", "exports.L = { bit: 1 }\nexports.M = { bit: 0 }\nexports.Q = { bit: 3 }\nexports.H = { bit: 2 }\n\nfunction fromString (string) {\n  if (typeof string !== 'string') {\n    throw new Error('Param is not a string')\n  }\n\n  const lcStr = string.toLowerCase()\n\n  switch (lcStr) {\n    case 'l':\n    case 'low':\n      return exports.L\n\n    case 'm':\n    case 'medium':\n      return exports.M\n\n    case 'q':\n    case 'quartile':\n      return exports.Q\n\n    case 'h':\n    case 'high':\n      return exports.H\n\n    default:\n      throw new Error('Unknown EC Level: ' + string)\n  }\n}\n\nexports.isValid = function isValid (level) {\n  return level && typeof level.bit !== 'undefined' &&\n    level.bit >= 0 && level.bit < 4\n}\n\nexports.from = function from (value, defaultValue) {\n  if (exports.isValid(value)) {\n    return value\n  }\n\n  try {\n    return fromString(value)\n  } catch (e) {\n    return defaultValue\n  }\n}\n", "function BitBuffer () {\n  this.buffer = []\n  this.length = 0\n}\n\nBitBuffer.prototype = {\n\n  get: function (index) {\n    const bufIndex = Math.floor(index / 8)\n    return ((this.buffer[bufIndex] >>> (7 - index % 8)) & 1) === 1\n  },\n\n  put: function (num, length) {\n    for (let i = 0; i < length; i++) {\n      this.putBit(((num >>> (length - i - 1)) & 1) === 1)\n    }\n  },\n\n  getLengthInBits: function () {\n    return this.length\n  },\n\n  putBit: function (bit) {\n    const bufIndex = Math.floor(this.length / 8)\n    if (this.buffer.length <= bufIndex) {\n      this.buffer.push(0)\n    }\n\n    if (bit) {\n      this.buffer[bufIndex] |= (0x80 >>> (this.length % 8))\n    }\n\n    this.length++\n  }\n}\n\nmodule.exports = BitBuffer\n", "/**\n * Helper class to handle QR Code symbol modules\n *\n * @param {Number} size Symbol size\n */\nfunction BitMatrix (size) {\n  if (!size || size < 1) {\n    throw new Error('BitMatrix size must be defined and greater than 0')\n  }\n\n  this.size = size\n  this.data = new Uint8Array(size * size)\n  this.reservedBit = new Uint8Array(size * size)\n}\n\n/**\n * Set bit value at specified location\n * If reserved flag is set, this bit will be ignored during masking process\n *\n * @param {Number}  row\n * @param {Number}  col\n * @param {Boolean} value\n * @param {Boolean} reserved\n */\nBitMatrix.prototype.set = function (row, col, value, reserved) {\n  const index = row * this.size + col\n  this.data[index] = value\n  if (reserved) this.reservedBit[index] = true\n}\n\n/**\n * Returns bit value at specified location\n *\n * @param  {Number}  row\n * @param  {Number}  col\n * @return {Boolean}\n */\nBitMatrix.prototype.get = function (row, col) {\n  return this.data[row * this.size + col]\n}\n\n/**\n * Applies xor operator at specified location\n * (used during masking process)\n *\n * @param {Number}  row\n * @param {Number}  col\n * @param {Boolean} value\n */\nBitMatrix.prototype.xor = function (row, col, value) {\n  this.data[row * this.size + col] ^= value\n}\n\n/**\n * Check if bit at specified location is reserved\n *\n * @param {Number}   row\n * @param {Number}   col\n * @return {Boolean}\n */\nBitMatrix.prototype.isReserved = function (row, col) {\n  return this.reservedBit[row * this.size + col]\n}\n\nmodule.exports = BitMatrix\n", "/**\n * Alignment pattern are fixed reference pattern in defined positions\n * in a matrix symbology, which enables the decode software to re-synchronise\n * the coordinate mapping of the image modules in the event of moderate amounts\n * of distortion of the image.\n *\n * Alignment patterns are present only in QR Code symbols of version 2 or larger\n * and their number depends on the symbol version.\n */\n\nconst getSymbolSize = require('./utils').getSymbolSize\n\n/**\n * Calculate the row/column coordinates of the center module of each alignment pattern\n * for the specified QR Code version.\n *\n * The alignment patterns are positioned symmetrically on either side of the diagonal\n * running from the top left corner of the symbol to the bottom right corner.\n *\n * Since positions are simmetrical only half of the coordinates are returned.\n * Each item of the array will represent in turn the x and y coordinate.\n * @see {@link getPositions}\n *\n * @param  {Number} version QR Code version\n * @return {Array}          Array of coordinate\n */\nexports.getRowColCoords = function getRowColCoords (version) {\n  if (version === 1) return []\n\n  const posCount = Math.floor(version / 7) + 2\n  const size = getSymbolSize(version)\n  const intervals = size === 145 ? 26 : Math.ceil((size - 13) / (2 * posCount - 2)) * 2\n  const positions = [size - 7] // Last coord is always (size - 7)\n\n  for (let i = 1; i < posCount - 1; i++) {\n    positions[i] = positions[i - 1] - intervals\n  }\n\n  positions.push(6) // First coord is always 6\n\n  return positions.reverse()\n}\n\n/**\n * Returns an array containing the positions of each alignment pattern.\n * Each array's element represent the center point of the pattern as (x, y) coordinates\n *\n * Coordinates are calculated expanding the row/column coordinates returned by {@link getRowColCoords}\n * and filtering out the items that overlaps with finder pattern\n *\n * @example\n * For a Version 7 symbol {@link getRowColCoords} returns values 6, 22 and 38.\n * The alignment patterns, therefore, are to be centered on (row, column)\n * positions (6,22), (22,6), (22,22), (22,38), (38,22), (38,38).\n * Note that the coordinates (6,6), (6,38), (38,6) are occupied by finder patterns\n * and are not therefore used for alignment patterns.\n *\n * let pos = getPositions(7)\n * // [[6,22], [22,6], [22,22], [22,38], [38,22], [38,38]]\n *\n * @param  {Number} version QR Code version\n * @return {Array}          Array of coordinates\n */\nexports.getPositions = function getPositions (version) {\n  const coords = []\n  const pos = exports.getRowColCoords(version)\n  const posLength = pos.length\n\n  for (let i = 0; i < posLength; i++) {\n    for (let j = 0; j < posLength; j++) {\n      // Skip if position is occupied by finder patterns\n      if ((i === 0 && j === 0) || // top-left\n          (i === 0 && j === posLength - 1) || // bottom-left\n          (i === posLength - 1 && j === 0)) { // top-right\n        continue\n      }\n\n      coords.push([pos[i], pos[j]])\n    }\n  }\n\n  return coords\n}\n", "const getSymbolSize = require('./utils').getSymbolSize\nconst FINDER_PATTERN_SIZE = 7\n\n/**\n * Returns an array containing the positions of each finder pattern.\n * Each array's element represent the top-left point of the pattern as (x, y) coordinates\n *\n * @param  {Number} version QR Code version\n * @return {Array}          Array of coordinates\n */\nexports.getPositions = function getPositions (version) {\n  const size = getSymbolSize(version)\n\n  return [\n    // top-left\n    [0, 0],\n    // top-right\n    [size - FINDER_PATTERN_SIZE, 0],\n    // bottom-left\n    [0, size - FINDER_PATTERN_SIZE]\n  ]\n}\n", "/**\n * Data mask pattern reference\n * @type {Object}\n */\nexports.Patterns = {\n  PATTERN000: 0,\n  PATTERN001: 1,\n  PATTERN010: 2,\n  PATTERN011: 3,\n  PATTERN100: 4,\n  PATTERN101: 5,\n  PATTERN110: 6,\n  PATTERN111: 7\n}\n\n/**\n * Weighted penalty scores for the undesirable features\n * @type {Object}\n */\nconst PenaltyScores = {\n  N1: 3,\n  N2: 3,\n  N3: 40,\n  N4: 10\n}\n\n/**\n * Check if mask pattern value is valid\n *\n * @param  {Number}  mask    Mask pattern\n * @return {Boolean}         true if valid, false otherwise\n */\nexports.isValid = function isValid (mask) {\n  return mask != null && mask !== '' && !isNaN(mask) && mask >= 0 && mask <= 7\n}\n\n/**\n * Returns mask pattern from a value.\n * If value is not valid, returns undefined\n *\n * @param  {Number|String} value        Mask pattern value\n * @return {Number}                     Valid mask pattern or undefined\n */\nexports.from = function from (value) {\n  return exports.isValid(value) ? parseInt(value, 10) : undefined\n}\n\n/**\n* Find adjacent modules in row/column with the same color\n* and assign a penalty value.\n*\n* Points: N1 + i\n* i is the amount by which the number of adjacent modules of the same color exceeds 5\n*/\nexports.getPenaltyN1 = function getPenaltyN1 (data) {\n  const size = data.size\n  let points = 0\n  let sameCountCol = 0\n  let sameCountRow = 0\n  let lastCol = null\n  let lastRow = null\n\n  for (let row = 0; row < size; row++) {\n    sameCountCol = sameCountRow = 0\n    lastCol = lastRow = null\n\n    for (let col = 0; col < size; col++) {\n      let module = data.get(row, col)\n      if (module === lastCol) {\n        sameCountCol++\n      } else {\n        if (sameCountCol >= 5) points += PenaltyScores.N1 + (sameCountCol - 5)\n        lastCol = module\n        sameCountCol = 1\n      }\n\n      module = data.get(col, row)\n      if (module === lastRow) {\n        sameCountRow++\n      } else {\n        if (sameCountRow >= 5) points += PenaltyScores.N1 + (sameCountRow - 5)\n        lastRow = module\n        sameCountRow = 1\n      }\n    }\n\n    if (sameCountCol >= 5) points += PenaltyScores.N1 + (sameCountCol - 5)\n    if (sameCountRow >= 5) points += PenaltyScores.N1 + (sameCountRow - 5)\n  }\n\n  return points\n}\n\n/**\n * Find 2x2 blocks with the same color and assign a penalty value\n *\n * Points: N2 * (m - 1) * (n - 1)\n */\nexports.getPenaltyN2 = function getPenaltyN2 (data) {\n  const size = data.size\n  let points = 0\n\n  for (let row = 0; row < size - 1; row++) {\n    for (let col = 0; col < size - 1; col++) {\n      const last = data.get(row, col) +\n        data.get(row, col + 1) +\n        data.get(row + 1, col) +\n        data.get(row + 1, col + 1)\n\n      if (last === 4 || last === 0) points++\n    }\n  }\n\n  return points * PenaltyScores.N2\n}\n\n/**\n * Find 1:1:3:1:1 ratio (dark:light:dark:light:dark) pattern in row/column,\n * preceded or followed by light area 4 modules wide\n *\n * Points: N3 * number of pattern found\n */\nexports.getPenaltyN3 = function getPenaltyN3 (data) {\n  const size = data.size\n  let points = 0\n  let bitsCol = 0\n  let bitsRow = 0\n\n  for (let row = 0; row < size; row++) {\n    bitsCol = bitsRow = 0\n    for (let col = 0; col < size; col++) {\n      bitsCol = ((bitsCol << 1) & 0x7FF) | data.get(row, col)\n      if (col >= 10 && (bitsCol === 0x5D0 || bitsCol === 0x05D)) points++\n\n      bitsRow = ((bitsRow << 1) & 0x7FF) | data.get(col, row)\n      if (col >= 10 && (bitsRow === 0x5D0 || bitsRow === 0x05D)) points++\n    }\n  }\n\n  return points * PenaltyScores.N3\n}\n\n/**\n * Calculate proportion of dark modules in entire symbol\n *\n * Points: N4 * k\n *\n * k is the rating of the deviation of the proportion of dark modules\n * in the symbol from 50% in steps of 5%\n */\nexports.getPenaltyN4 = function getPenaltyN4 (data) {\n  let darkCount = 0\n  const modulesCount = data.data.length\n\n  for (let i = 0; i < modulesCount; i++) darkCount += data.data[i]\n\n  const k = Math.abs(Math.ceil((darkCount * 100 / modulesCount) / 5) - 10)\n\n  return k * PenaltyScores.N4\n}\n\n/**\n * Return mask value at given position\n *\n * @param  {Number} maskPattern Pattern reference value\n * @param  {Number} i           Row\n * @param  {Number} j           Column\n * @return {Boolean}            Mask value\n */\nfunction getMaskAt (maskPattern, i, j) {\n  switch (maskPattern) {\n    case exports.Patterns.PATTERN000: return (i + j) % 2 === 0\n    case exports.Patterns.PATTERN001: return i % 2 === 0\n    case exports.Patterns.PATTERN010: return j % 3 === 0\n    case exports.Patterns.PATTERN011: return (i + j) % 3 === 0\n    case exports.Patterns.PATTERN100: return (Math.floor(i / 2) + Math.floor(j / 3)) % 2 === 0\n    case exports.Patterns.PATTERN101: return (i * j) % 2 + (i * j) % 3 === 0\n    case exports.Patterns.PATTERN110: return ((i * j) % 2 + (i * j) % 3) % 2 === 0\n    case exports.Patterns.PATTERN111: return ((i * j) % 3 + (i + j) % 2) % 2 === 0\n\n    default: throw new Error('bad maskPattern:' + maskPattern)\n  }\n}\n\n/**\n * Apply a mask pattern to a BitMatrix\n *\n * @param  {Number}    pattern Pattern reference number\n * @param  {BitMatrix} data    BitMatrix data\n */\nexports.applyMask = function applyMask (pattern, data) {\n  const size = data.size\n\n  for (let col = 0; col < size; col++) {\n    for (let row = 0; row < size; row++) {\n      if (data.isReserved(row, col)) continue\n      data.xor(row, col, getMaskAt(pattern, row, col))\n    }\n  }\n}\n\n/**\n * Returns the best mask pattern for data\n *\n * @param  {BitMatrix} data\n * @return {Number} Mask pattern reference number\n */\nexports.getBestMask = function getBestMask (data, setupFormatFunc) {\n  const numPatterns = Object.keys(exports.Patterns).length\n  let bestPattern = 0\n  let lowerPenalty = Infinity\n\n  for (let p = 0; p < numPatterns; p++) {\n    setupFormatFunc(p)\n    exports.applyMask(p, data)\n\n    // Calculate penalty\n    const penalty =\n      exports.getPenaltyN1(data) +\n      exports.getPenaltyN2(data) +\n      exports.getPenaltyN3(data) +\n      exports.getPenaltyN4(data)\n\n    // Undo previously applied mask\n    exports.applyMask(p, data)\n\n    if (penalty < lowerPenalty) {\n      lowerPenalty = penalty\n      bestPattern = p\n    }\n  }\n\n  return bestPattern\n}\n", "const ECLevel = require('./error-correction-level')\r\n\r\nconst EC_BLOCKS_TABLE = [\r\n// L  M  Q  H\r\n  1, 1, 1, 1,\r\n  1, 1, 1, 1,\r\n  1, 1, 2, 2,\r\n  1, 2, 2, 4,\r\n  1, 2, 4, 4,\r\n  2, 4, 4, 4,\r\n  2, 4, 6, 5,\r\n  2, 4, 6, 6,\r\n  2, 5, 8, 8,\r\n  4, 5, 8, 8,\r\n  4, 5, 8, 11,\r\n  4, 8, 10, 11,\r\n  4, 9, 12, 16,\r\n  4, 9, 16, 16,\r\n  6, 10, 12, 18,\r\n  6, 10, 17, 16,\r\n  6, 11, 16, 19,\r\n  6, 13, 18, 21,\r\n  7, 14, 21, 25,\r\n  8, 16, 20, 25,\r\n  8, 17, 23, 25,\r\n  9, 17, 23, 34,\r\n  9, 18, 25, 30,\r\n  10, 20, 27, 32,\r\n  12, 21, 29, 35,\r\n  12, 23, 34, 37,\r\n  12, 25, 34, 40,\r\n  13, 26, 35, 42,\r\n  14, 28, 38, 45,\r\n  15, 29, 40, 48,\r\n  16, 31, 43, 51,\r\n  17, 33, 45, 54,\r\n  18, 35, 48, 57,\r\n  19, 37, 51, 60,\r\n  19, 38, 53, 63,\r\n  20, 40, 56, 66,\r\n  21, 43, 59, 70,\r\n  22, 45, 62, 74,\r\n  24, 47, 65, 77,\r\n  25, 49, 68, 81\r\n]\r\n\r\nconst EC_CODEWORDS_TABLE = [\r\n// L  M  Q  H\r\n  7, 10, 13, 17,\r\n  10, 16, 22, 28,\r\n  15, 26, 36, 44,\r\n  20, 36, 52, 64,\r\n  26, 48, 72, 88,\r\n  36, 64, 96, 112,\r\n  40, 72, 108, 130,\r\n  48, 88, 132, 156,\r\n  60, 110, 160, 192,\r\n  72, 130, 192, 224,\r\n  80, 150, 224, 264,\r\n  96, 176, 260, 308,\r\n  104, 198, 288, 352,\r\n  120, 216, 320, 384,\r\n  132, 240, 360, 432,\r\n  144, 280, 408, 480,\r\n  168, 308, 448, 532,\r\n  180, 338, 504, 588,\r\n  196, 364, 546, 650,\r\n  224, 416, 600, 700,\r\n  224, 442, 644, 750,\r\n  252, 476, 690, 816,\r\n  270, 504, 750, 900,\r\n  300, 560, 810, 960,\r\n  312, 588, 870, 1050,\r\n  336, 644, 952, 1110,\r\n  360, 700, 1020, 1200,\r\n  390, 728, 1050, 1260,\r\n  420, 784, 1140, 1350,\r\n  450, 812, 1200, 1440,\r\n  480, 868, 1290, 1530,\r\n  510, 924, 1350, 1620,\r\n  540, 980, 1440, 1710,\r\n  570, 1036, 1530, 1800,\r\n  570, 1064, 1590, 1890,\r\n  600, 1120, 1680, 1980,\r\n  630, 1204, 1770, 2100,\r\n  660, 1260, 1860, 2220,\r\n  720, 1316, 1950, 2310,\r\n  750, 1372, 2040, 2430\r\n]\r\n\r\n/**\r\n * Returns the number of error correction block that the QR Code should contain\r\n * for the specified version and error correction level.\r\n *\r\n * @param  {Number} version              QR Code version\r\n * @param  {Number} errorCorrectionLevel Error correction level\r\n * @return {Number}                      Number of error correction blocks\r\n */\r\nexports.getBlocksCount = function getBlocksCount (version, errorCorrectionLevel) {\r\n  switch (errorCorrectionLevel) {\r\n    case ECLevel.L:\r\n      return EC_BLOCKS_TABLE[(version - 1) * 4 + 0]\r\n    case ECLevel.M:\r\n      return EC_BLOCKS_TABLE[(version - 1) * 4 + 1]\r\n    case ECLevel.Q:\r\n      return EC_BLOCKS_TABLE[(version - 1) * 4 + 2]\r\n    case ECLevel.H:\r\n      return EC_BLOCKS_TABLE[(version - 1) * 4 + 3]\r\n    default:\r\n      return undefined\r\n  }\r\n}\r\n\r\n/**\r\n * Returns the number of error correction codewords to use for the specified\r\n * version and error correction level.\r\n *\r\n * @param  {Number} version              QR Code version\r\n * @param  {Number} errorCorrectionLevel Error correction level\r\n * @return {Number}                      Number of error correction codewords\r\n */\r\nexports.getTotalCodewordsCount = function getTotalCodewordsCount (version, errorCorrectionLevel) {\r\n  switch (errorCorrectionLevel) {\r\n    case ECLevel.L:\r\n      return EC_CODEWORDS_TABLE[(version - 1) * 4 + 0]\r\n    case ECLevel.M:\r\n      return EC_CODEWORDS_TABLE[(version - 1) * 4 + 1]\r\n    case ECLevel.Q:\r\n      return EC_CODEWORDS_TABLE[(version - 1) * 4 + 2]\r\n    case ECLevel.H:\r\n      return EC_CODEWORDS_TABLE[(version - 1) * 4 + 3]\r\n    default:\r\n      return undefined\r\n  }\r\n}\r\n", "const EXP_TABLE = new Uint8Array(512)\nconst LOG_TABLE = new Uint8Array(256)\n/**\n * Precompute the log and anti-log tables for faster computation later\n *\n * For each possible value in the galois field 2^8, we will pre-compute\n * the logarithm and anti-logarithm (exponential) of this value\n *\n * ref {@link https://en.wikiversity.org/wiki/Reed%E2%80%93Solomon_codes_for_coders#Introduction_to_mathematical_fields}\n */\n;(function initTables () {\n  let x = 1\n  for (let i = 0; i < 255; i++) {\n    EXP_TABLE[i] = x\n    LOG_TABLE[x] = i\n\n    x <<= 1 // multiply by 2\n\n    // The QR code specification says to use byte-wise modulo 100011101 arithmetic.\n    // This means that when a number is 256 or larger, it should be XORed with 0x11D.\n    if (x & 0x100) { // similar to x >= 256, but a lot faster (because 0x100 == 256)\n      x ^= 0x11D\n    }\n  }\n\n  // Optimization: double the size of the anti-log table so that we don't need to mod 255 to\n  // stay inside the bounds (because we will mainly use this table for the multiplication of\n  // two GF numbers, no more).\n  // @see {@link mul}\n  for (let i = 255; i < 512; i++) {\n    EXP_TABLE[i] = EXP_TABLE[i - 255]\n  }\n}())\n\n/**\n * Returns log value of n inside Galois Field\n *\n * @param  {Number} n\n * @return {Number}\n */\nexports.log = function log (n) {\n  if (n < 1) throw new Error('log(' + n + ')')\n  return LOG_TABLE[n]\n}\n\n/**\n * Returns anti-log value of n inside Galois Field\n *\n * @param  {Number} n\n * @return {Number}\n */\nexports.exp = function exp (n) {\n  return EXP_TABLE[n]\n}\n\n/**\n * Multiplies two number inside Galois Field\n *\n * @param  {Number} x\n * @param  {Number} y\n * @return {Number}\n */\nexports.mul = function mul (x, y) {\n  if (x === 0 || y === 0) return 0\n\n  // should be EXP_TABLE[(LOG_TABLE[x] + LOG_TABLE[y]) % 255] if EXP_TABLE wasn't oversized\n  // @see {@link initTables}\n  return EXP_TABLE[LOG_TABLE[x] + LOG_TABLE[y]]\n}\n", "const GF = require('./galois-field')\n\n/**\n * Multiplies two polynomials inside Galois Field\n *\n * @param  {Uint8Array} p1 Polynomial\n * @param  {Uint8Array} p2 Polynomial\n * @return {Uint8Array}    Product of p1 and p2\n */\nexports.mul = function mul (p1, p2) {\n  const coeff = new Uint8Array(p1.length + p2.length - 1)\n\n  for (let i = 0; i < p1.length; i++) {\n    for (let j = 0; j < p2.length; j++) {\n      coeff[i + j] ^= GF.mul(p1[i], p2[j])\n    }\n  }\n\n  return coeff\n}\n\n/**\n * Calculate the remainder of polynomials division\n *\n * @param  {Uint8Array} divident Polynomial\n * @param  {Uint8Array} divisor  Polynomial\n * @return {Uint8Array}          Remainder\n */\nexports.mod = function mod (divident, divisor) {\n  let result = new Uint8Array(divident)\n\n  while ((result.length - divisor.length) >= 0) {\n    const coeff = result[0]\n\n    for (let i = 0; i < divisor.length; i++) {\n      result[i] ^= GF.mul(divisor[i], coeff)\n    }\n\n    // remove all zeros from buffer head\n    let offset = 0\n    while (offset < result.length && result[offset] === 0) offset++\n    result = result.slice(offset)\n  }\n\n  return result\n}\n\n/**\n * Generate an irreducible generator polynomial of specified degree\n * (used by Reed-Solomon encoder)\n *\n * @param  {Number} degree Degree of the generator polynomial\n * @return {Uint8Array}    Buffer containing polynomial coefficients\n */\nexports.generateECPolynomial = function generateECPolynomial (degree) {\n  let poly = new Uint8Array([1])\n  for (let i = 0; i < degree; i++) {\n    poly = exports.mul(poly, new Uint8Array([1, GF.exp(i)]))\n  }\n\n  return poly\n}\n", "const Polynomial = require('./polynomial')\n\nfunction ReedSolomonEncoder (degree) {\n  this.genPoly = undefined\n  this.degree = degree\n\n  if (this.degree) this.initialize(this.degree)\n}\n\n/**\n * Initialize the encoder.\n * The input param should correspond to the number of error correction codewords.\n *\n * @param  {Number} degree\n */\nReedSolomonEncoder.prototype.initialize = function initialize (degree) {\n  // create an irreducible generator polynomial\n  this.degree = degree\n  this.genPoly = Polynomial.generateECPolynomial(this.degree)\n}\n\n/**\n * Encodes a chunk of data\n *\n * @param  {Uint8Array} data Buffer containing input data\n * @return {Uint8Array}      Buffer containing encoded data\n */\nReedSolomonEncoder.prototype.encode = function encode (data) {\n  if (!this.genPoly) {\n    throw new Error('Encoder not initialized')\n  }\n\n  // Calculate EC for this data block\n  // extends data size to data+genPoly size\n  const paddedData = new Uint8Array(data.length + this.degree)\n  paddedData.set(data)\n\n  // The error correction codewords are the remainder after dividing the data codewords\n  // by a generator polynomial\n  const remainder = Polynomial.mod(paddedData, this.genPoly)\n\n  // return EC data blocks (last n byte, where n is the degree of genPoly)\n  // If coefficients number in remainder are less than genPoly degree,\n  // pad with 0s to the left to reach the needed number of coefficients\n  const start = this.degree - remainder.length\n  if (start > 0) {\n    const buff = new Uint8Array(this.degree)\n    buff.set(remainder, start)\n\n    return buff\n  }\n\n  return remainder\n}\n\nmodule.exports = ReedSolomonEncoder\n", "/**\n * Check if QR Code version is valid\n *\n * @param  {Number}  version QR Code version\n * @return {Boolean}         true if valid version, false otherwise\n */\nexports.isValid = function isValid (version) {\n  return !isNaN(version) && version >= 1 && version <= 40\n}\n", "const numeric = '[0-9]+'\nconst alphanumeric = '[A-Z $%*+\\\\-./:]+'\nlet kanji = '(?:[u3000-u303F]|[u3040-u309F]|[u30A0-u30FF]|' +\n  '[uFF00-uFFEF]|[u4E00-u9FAF]|[u2605-u2606]|[u2190-u2195]|u203B|' +\n  '[u2010u2015u2018u2019u2025u2026u201Cu201Du2225u2260]|' +\n  '[u0391-u0451]|[u00A7u00A8u00B1u00B4u00D7u00F7])+'\nkanji = kanji.replace(/u/g, '\\\\u')\n\nconst byte = '(?:(?![A-Z0-9 $%*+\\\\-./:]|' + kanji + ')(?:.|[\\r\\n]))+'\n\nexports.KANJI = new RegExp(kanji, 'g')\nexports.BYTE_KANJI = new RegExp('[^A-Z0-9 $%*+\\\\-./:]+', 'g')\nexports.BYTE = new RegExp(byte, 'g')\nexports.NUMERIC = new RegExp(numeric, 'g')\nexports.ALPHANUMERIC = new RegExp(alphanumeric, 'g')\n\nconst TEST_KANJI = new RegExp('^' + kanji + '$')\nconst TEST_NUMERIC = new RegExp('^' + numeric + '$')\nconst TEST_ALPHANUMERIC = new RegExp('^[A-Z0-9 $%*+\\\\-./:]+$')\n\nexports.testKanji = function testKanji (str) {\n  return TEST_KANJI.test(str)\n}\n\nexports.testNumeric = function testNumeric (str) {\n  return TEST_NUMERIC.test(str)\n}\n\nexports.testAlphanumeric = function testAlphanumeric (str) {\n  return TEST_ALPHANUMERIC.test(str)\n}\n", "const VersionCheck = require('./version-check')\nconst Regex = require('./regex')\n\n/**\n * Numeric mode encodes data from the decimal digit set (0 - 9)\n * (byte values 30HEX to 39HEX).\n * Normally, 3 data characters are represented by 10 bits.\n *\n * @type {Object}\n */\nexports.NUMERIC = {\n  id: 'Numeric',\n  bit: 1 << 0,\n  ccBits: [10, 12, 14]\n}\n\n/**\n * Alphanumeric mode encodes data from a set of 45 characters,\n * i.e. 10 numeric digits (0 - 9),\n *      26 alphabetic characters (A - Z),\n *   and 9 symbols (SP, $, %, *, +, -, ., /, :).\n * Normally, two input characters are represented by 11 bits.\n *\n * @type {Object}\n */\nexports.ALPHANUMERIC = {\n  id: 'Alphanumeric',\n  bit: 1 << 1,\n  ccBits: [9, 11, 13]\n}\n\n/**\n * In byte mode, data is encoded at 8 bits per character.\n *\n * @type {Object}\n */\nexports.BYTE = {\n  id: 'Byte',\n  bit: 1 << 2,\n  ccBits: [8, 16, 16]\n}\n\n/**\n * The Kanji mode efficiently encodes Kanji characters in accordance with\n * the Shift JIS system based on JIS X 0208.\n * The Shift JIS values are shifted from the JIS X 0208 values.\n * JIS X 0208 gives details of the shift coded representation.\n * Each two-byte character value is compacted to a 13-bit binary codeword.\n *\n * @type {Object}\n */\nexports.KANJI = {\n  id: 'Kanji',\n  bit: 1 << 3,\n  ccBits: [8, 10, 12]\n}\n\n/**\n * Mixed mode will contain a sequences of data in a combination of any of\n * the modes described above\n *\n * @type {Object}\n */\nexports.MIXED = {\n  bit: -1\n}\n\n/**\n * Returns the number of bits needed to store the data length\n * according to QR Code specifications.\n *\n * @param  {Mode}   mode    Data mode\n * @param  {Number} version QR Code version\n * @return {Number}         Number of bits\n */\nexports.getCharCountIndicator = function getCharCountIndicator (mode, version) {\n  if (!mode.ccBits) throw new Error('Invalid mode: ' + mode)\n\n  if (!VersionCheck.isValid(version)) {\n    throw new Error('Invalid version: ' + version)\n  }\n\n  if (version >= 1 && version < 10) return mode.ccBits[0]\n  else if (version < 27) return mode.ccBits[1]\n  return mode.ccBits[2]\n}\n\n/**\n * Returns the most efficient mode to store the specified data\n *\n * @param  {String} dataStr Input data string\n * @return {Mode}           Best mode\n */\nexports.getBestModeForData = function getBestModeForData (dataStr) {\n  if (Regex.testNumeric(dataStr)) return exports.NUMERIC\n  else if (Regex.testAlphanumeric(dataStr)) return exports.ALPHANUMERIC\n  else if (Regex.testKanji(dataStr)) return exports.KANJI\n  else return exports.BYTE\n}\n\n/**\n * Return mode name as string\n *\n * @param {Mode} mode Mode object\n * @returns {String}  Mode name\n */\nexports.toString = function toString (mode) {\n  if (mode && mode.id) return mode.id\n  throw new Error('Invalid mode')\n}\n\n/**\n * Check if input param is a valid mode object\n *\n * @param   {Mode}    mode Mode object\n * @returns {Boolean} True if valid mode, false otherwise\n */\nexports.isValid = function isValid (mode) {\n  return mode && mode.bit && mode.ccBits\n}\n\n/**\n * Get mode object from its name\n *\n * @param   {String} string Mode name\n * @returns {Mode}          Mode object\n */\nfunction fromString (string) {\n  if (typeof string !== 'string') {\n    throw new Error('Param is not a string')\n  }\n\n  const lcStr = string.toLowerCase()\n\n  switch (lcStr) {\n    case 'numeric':\n      return exports.NUMERIC\n    case 'alphanumeric':\n      return exports.ALPHANUMERIC\n    case 'kanji':\n      return exports.KANJI\n    case 'byte':\n      return exports.BYTE\n    default:\n      throw new Error('Unknown mode: ' + string)\n  }\n}\n\n/**\n * Returns mode from a value.\n * If value is not a valid mode, returns defaultValue\n *\n * @param  {Mode|String} value        Encoding mode\n * @param  {Mode}        defaultValue Fallback value\n * @return {Mode}                     Encoding mode\n */\nexports.from = function from (value, defaultValue) {\n  if (exports.isValid(value)) {\n    return value\n  }\n\n  try {\n    return fromString(value)\n  } catch (e) {\n    return defaultValue\n  }\n}\n", "const Utils = require('./utils')\nconst ECCode = require('./error-correction-code')\nconst ECLevel = require('./error-correction-level')\nconst Mode = require('./mode')\nconst VersionCheck = require('./version-check')\n\n// Generator polynomial used to encode version information\nconst G18 = (1 << 12) | (1 << 11) | (1 << 10) | (1 << 9) | (1 << 8) | (1 << 5) | (1 << 2) | (1 << 0)\nconst G18_BCH = Utils.getBCHDigit(G18)\n\nfunction getBestVersionForDataLength (mode, length, errorCorrectionLevel) {\n  for (let currentVersion = 1; currentVersion <= 40; currentVersion++) {\n    if (length <= exports.getCapacity(currentVersion, errorCorrectionLevel, mode)) {\n      return currentVersion\n    }\n  }\n\n  return undefined\n}\n\nfunction getReservedBitsCount (mode, version) {\n  // Character count indicator + mode indicator bits\n  return Mode.getCharCountIndicator(mode, version) + 4\n}\n\nfunction getTotalBitsFromDataArray (segments, version) {\n  let totalBits = 0\n\n  segments.forEach(function (data) {\n    const reservedBits = getReservedBitsCount(data.mode, version)\n    totalBits += reservedBits + data.getBitsLength()\n  })\n\n  return totalBits\n}\n\nfunction getBestVersionForMixedData (segments, errorCorrectionLevel) {\n  for (let currentVersion = 1; currentVersion <= 40; currentVersion++) {\n    const length = getTotalBitsFromDataArray(segments, currentVersion)\n    if (length <= exports.getCapacity(currentVersion, errorCorrectionLevel, Mode.MIXED)) {\n      return currentVersion\n    }\n  }\n\n  return undefined\n}\n\n/**\n * Returns version number from a value.\n * If value is not a valid version, returns defaultValue\n *\n * @param  {Number|String} value        QR Code version\n * @param  {Number}        defaultValue Fallback value\n * @return {Number}                     QR Code version number\n */\nexports.from = function from (value, defaultValue) {\n  if (VersionCheck.isValid(value)) {\n    return parseInt(value, 10)\n  }\n\n  return defaultValue\n}\n\n/**\n * Returns how much data can be stored with the specified QR code version\n * and error correction level\n *\n * @param  {Number} version              QR Code version (1-40)\n * @param  {Number} errorCorrectionLevel Error correction level\n * @param  {Mode}   mode                 Data mode\n * @return {Number}                      Quantity of storable data\n */\nexports.getCapacity = function getCapacity (version, errorCorrectionLevel, mode) {\n  if (!VersionCheck.isValid(version)) {\n    throw new Error('Invalid QR Code version')\n  }\n\n  // Use Byte mode as default\n  if (typeof mode === 'undefined') mode = Mode.BYTE\n\n  // Total codewords for this QR code version (Data + Error correction)\n  const totalCodewords = Utils.getSymbolTotalCodewords(version)\n\n  // Total number of error correction codewords\n  const ecTotalCodewords = ECCode.getTotalCodewordsCount(version, errorCorrectionLevel)\n\n  // Total number of data codewords\n  const dataTotalCodewordsBits = (totalCodewords - ecTotalCodewords) * 8\n\n  if (mode === Mode.MIXED) return dataTotalCodewordsBits\n\n  const usableBits = dataTotalCodewordsBits - getReservedBitsCount(mode, version)\n\n  // Return max number of storable codewords\n  switch (mode) {\n    case Mode.NUMERIC:\n      return Math.floor((usableBits / 10) * 3)\n\n    case Mode.ALPHANUMERIC:\n      return Math.floor((usableBits / 11) * 2)\n\n    case Mode.KANJI:\n      return Math.floor(usableBits / 13)\n\n    case Mode.BYTE:\n    default:\n      return Math.floor(usableBits / 8)\n  }\n}\n\n/**\n * Returns the minimum version needed to contain the amount of data\n *\n * @param  {Segment} data                    Segment of data\n * @param  {Number} [errorCorrectionLevel=H] Error correction level\n * @param  {Mode} mode                       Data mode\n * @return {Number}                          QR Code version\n */\nexports.getBestVersionForData = function getBestVersionForData (data, errorCorrectionLevel) {\n  let seg\n\n  const ecl = ECLevel.from(errorCorrectionLevel, ECLevel.M)\n\n  if (Array.isArray(data)) {\n    if (data.length > 1) {\n      return getBestVersionForMixedData(data, ecl)\n    }\n\n    if (data.length === 0) {\n      return 1\n    }\n\n    seg = data[0]\n  } else {\n    seg = data\n  }\n\n  return getBestVersionForDataLength(seg.mode, seg.getLength(), ecl)\n}\n\n/**\n * Returns version information with relative error correction bits\n *\n * The version information is included in QR Code symbols of version 7 or larger.\n * It consists of an 18-bit sequence containing 6 data bits,\n * with 12 error correction bits calculated using the (18, 6) Golay code.\n *\n * @param  {Number} version QR Code version\n * @return {Number}         Encoded version info bits\n */\nexports.getEncodedBits = function getEncodedBits (version) {\n  if (!VersionCheck.isValid(version) || version < 7) {\n    throw new Error('Invalid QR Code version')\n  }\n\n  let d = version << 12\n\n  while (Utils.getBCHDigit(d) - G18_BCH >= 0) {\n    d ^= (G18 << (Utils.getBCHDigit(d) - G18_BCH))\n  }\n\n  return (version << 12) | d\n}\n", "const Utils = require('./utils')\n\nconst G15 = (1 << 10) | (1 << 8) | (1 << 5) | (1 << 4) | (1 << 2) | (1 << 1) | (1 << 0)\nconst G15_MASK = (1 << 14) | (1 << 12) | (1 << 10) | (1 << 4) | (1 << 1)\nconst G15_BCH = Utils.getBCHDigit(G15)\n\n/**\n * Returns format information with relative error correction bits\n *\n * The format information is a 15-bit sequence containing 5 data bits,\n * with 10 error correction bits calculated using the (15, 5) BCH code.\n *\n * @param  {Number} errorCorrectionLevel Error correction level\n * @param  {Number} mask                 Mask pattern\n * @return {Number}                      Encoded format information bits\n */\nexports.getEncodedBits = function getEncodedBits (errorCorrectionLevel, mask) {\n  const data = ((errorCorrectionLevel.bit << 3) | mask)\n  let d = data << 10\n\n  while (Utils.getBCHDigit(d) - G15_BCH >= 0) {\n    d ^= (G15 << (Utils.getBCHDigit(d) - G15_BCH))\n  }\n\n  // xor final data with mask pattern in order to ensure that\n  // no combination of Error Correction Level and data mask pattern\n  // will result in an all-zero data string\n  return ((data << 10) | d) ^ G15_MASK\n}\n", "const Mode = require('./mode')\n\nfunction NumericData (data) {\n  this.mode = Mode.NUMERIC\n  this.data = data.toString()\n}\n\nNumericData.getBitsLength = function getBitsLength (length) {\n  return 10 * Math.floor(length / 3) + ((length % 3) ? ((length % 3) * 3 + 1) : 0)\n}\n\nNumericData.prototype.getLength = function getLength () {\n  return this.data.length\n}\n\nNumericData.prototype.getBitsLength = function getBitsLength () {\n  return NumericData.getBitsLength(this.data.length)\n}\n\nNumericData.prototype.write = function write (bitBuffer) {\n  let i, group, value\n\n  // The input data string is divided into groups of three digits,\n  // and each group is converted to its 10-bit binary equivalent.\n  for (i = 0; i + 3 <= this.data.length; i += 3) {\n    group = this.data.substr(i, 3)\n    value = parseInt(group, 10)\n\n    bitBuffer.put(value, 10)\n  }\n\n  // If the number of input digits is not an exact multiple of three,\n  // the final one or two digits are converted to 4 or 7 bits respectively.\n  const remainingNum = this.data.length - i\n  if (remainingNum > 0) {\n    group = this.data.substr(i)\n    value = parseInt(group, 10)\n\n    bitBuffer.put(value, remainingNum * 3 + 1)\n  }\n}\n\nmodule.exports = NumericData\n", "const Mode = require('./mode')\n\n/**\n * Array of characters available in alphanumeric mode\n *\n * As per QR Code specification, to each character\n * is assigned a value from 0 to 44 which in this case coincides\n * with the array index\n *\n * @type {Array}\n */\nconst ALPHA_NUM_CHARS = [\n  '0', '1', '2', '3', '4', '5', '6', '7', '8', '9',\n  'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M',\n  'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z',\n  ' ', '$', '%', '*', '+', '-', '.', '/', ':'\n]\n\nfunction AlphanumericData (data) {\n  this.mode = Mode.ALPHANUMERIC\n  this.data = data\n}\n\nAlphanumericData.getBitsLength = function getBitsLength (length) {\n  return 11 * Math.floor(length / 2) + 6 * (length % 2)\n}\n\nAlphanumericData.prototype.getLength = function getLength () {\n  return this.data.length\n}\n\nAlphanumericData.prototype.getBitsLength = function getBitsLength () {\n  return AlphanumericData.getBitsLength(this.data.length)\n}\n\nAlphanumericData.prototype.write = function write (bitBuffer) {\n  let i\n\n  // Input data characters are divided into groups of two characters\n  // and encoded as 11-bit binary codes.\n  for (i = 0; i + 2 <= this.data.length; i += 2) {\n    // The character value of the first character is multiplied by 45\n    let value = ALPHA_NUM_CHARS.indexOf(this.data[i]) * 45\n\n    // The character value of the second digit is added to the product\n    value += ALPHA_NUM_CHARS.indexOf(this.data[i + 1])\n\n    // The sum is then stored as 11-bit binary number\n    bitBuffer.put(value, 11)\n  }\n\n  // If the number of input data characters is not a multiple of two,\n  // the character value of the final character is encoded as a 6-bit binary number.\n  if (this.data.length % 2) {\n    bitBuffer.put(ALPHA_NUM_CHARS.indexOf(this.data[i]), 6)\n  }\n}\n\nmodule.exports = AlphanumericData\n", "const Mode = require('./mode')\n\nfunction ByteData (data) {\n  this.mode = Mode.BYTE\n  if (typeof (data) === 'string') {\n    this.data = new TextEncoder().encode(data)\n  } else {\n    this.data = new Uint8Array(data)\n  }\n}\n\nByteData.getBitsLength = function getBitsLength (length) {\n  return length * 8\n}\n\nByteData.prototype.getLength = function getLength () {\n  return this.data.length\n}\n\nByteData.prototype.getBitsLength = function getBitsLength () {\n  return ByteData.getBitsLength(this.data.length)\n}\n\nByteData.prototype.write = function (bitBuffer) {\n  for (let i = 0, l = this.data.length; i < l; i++) {\n    bitBuffer.put(this.data[i], 8)\n  }\n}\n\nmodule.exports = ByteData\n", "const Mode = require('./mode')\nconst Utils = require('./utils')\n\nfunction KanjiData (data) {\n  this.mode = Mode.KANJI\n  this.data = data\n}\n\nKanjiData.getBitsLength = function getBitsLength (length) {\n  return length * 13\n}\n\nKanjiData.prototype.getLength = function getLength () {\n  return this.data.length\n}\n\nKanjiData.prototype.getBitsLength = function getBitsLength () {\n  return KanjiData.getBitsLength(this.data.length)\n}\n\nKanjiData.prototype.write = function (bitBuffer) {\n  let i\n\n  // In the Shift JIS system, Kanji characters are represented by a two byte combination.\n  // These byte values are shifted from the JIS X 0208 values.\n  // JIS X 0208 gives details of the shift coded representation.\n  for (i = 0; i < this.data.length; i++) {\n    let value = Utils.toSJIS(this.data[i])\n\n    // For characters with Shift JIS values from 0x8140 to 0x9FFC:\n    if (value >= 0x8140 && value <= 0x9FFC) {\n      // Subtract 0x8140 from Shift JIS value\n      value -= 0x8140\n\n    // For characters with Shift JIS values from 0xE040 to 0xEBBF\n    } else if (value >= 0xE040 && value <= 0xEBBF) {\n      // Subtract 0xC140 from Shift JIS value\n      value -= 0xC140\n    } else {\n      throw new Error(\n        'Invalid SJIS character: ' + this.data[i] + '\\n' +\n        'Make sure your charset is UTF-8')\n    }\n\n    // Multiply most significant byte of result by 0xC0\n    // and add least significant byte to product\n    value = (((value >>> 8) & 0xff) * 0xC0) + (value & 0xff)\n\n    // Convert result to a 13-bit binary string\n    bitBuffer.put(value, 13)\n  }\n}\n\nmodule.exports = KanjiData\n", "'use strict';\n\n/******************************************************************************\n * Created 2008-08-19.\n *\n * Dijkstra path-finding functions. Adapted from the Dijkstar Python project.\n *\n * Copyright (C) 2008\n *   Wyatt Baldwin <self@wyattbaldwin.com>\n *   All rights reserved\n *\n * Licensed under the MIT license.\n *\n *   http://www.opensource.org/licenses/mit-license.php\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n *****************************************************************************/\nvar dijkstra = {\n  single_source_shortest_paths: function(graph, s, d) {\n    // Predecessor map for each node that has been encountered.\n    // node ID => predecessor node ID\n    var predecessors = {};\n\n    // Costs of shortest paths from s to all nodes encountered.\n    // node ID => cost\n    var costs = {};\n    costs[s] = 0;\n\n    // Costs of shortest paths from s to all nodes encountered; differs from\n    // `costs` in that it provides easy access to the node that currently has\n    // the known shortest path from s.\n    // XXX: Do we actually need both `costs` and `open`?\n    var open = dijkstra.PriorityQueue.make();\n    open.push(s, 0);\n\n    var closest,\n        u, v,\n        cost_of_s_to_u,\n        adjacent_nodes,\n        cost_of_e,\n        cost_of_s_to_u_plus_cost_of_e,\n        cost_of_s_to_v,\n        first_visit;\n    while (!open.empty()) {\n      // In the nodes remaining in graph that have a known cost from s,\n      // find the node, u, that currently has the shortest path from s.\n      closest = open.pop();\n      u = closest.value;\n      cost_of_s_to_u = closest.cost;\n\n      // Get nodes adjacent to u...\n      adjacent_nodes = graph[u] || {};\n\n      // ...and explore the edges that connect u to those nodes, updating\n      // the cost of the shortest paths to any or all of those nodes as\n      // necessary. v is the node across the current edge from u.\n      for (v in adjacent_nodes) {\n        if (adjacent_nodes.hasOwnProperty(v)) {\n          // Get the cost of the edge running from u to v.\n          cost_of_e = adjacent_nodes[v];\n\n          // Cost of s to u plus the cost of u to v across e--this is *a*\n          // cost from s to v that may or may not be less than the current\n          // known cost to v.\n          cost_of_s_to_u_plus_cost_of_e = cost_of_s_to_u + cost_of_e;\n\n          // If we haven't visited v yet OR if the current known cost from s to\n          // v is greater than the new cost we just found (cost of s to u plus\n          // cost of u to v across e), update v's cost in the cost list and\n          // update v's predecessor in the predecessor list (it's now u).\n          cost_of_s_to_v = costs[v];\n          first_visit = (typeof costs[v] === 'undefined');\n          if (first_visit || cost_of_s_to_v > cost_of_s_to_u_plus_cost_of_e) {\n            costs[v] = cost_of_s_to_u_plus_cost_of_e;\n            open.push(v, cost_of_s_to_u_plus_cost_of_e);\n            predecessors[v] = u;\n          }\n        }\n      }\n    }\n\n    if (typeof d !== 'undefined' && typeof costs[d] === 'undefined') {\n      var msg = ['Could not find a path from ', s, ' to ', d, '.'].join('');\n      throw new Error(msg);\n    }\n\n    return predecessors;\n  },\n\n  extract_shortest_path_from_predecessor_list: function(predecessors, d) {\n    var nodes = [];\n    var u = d;\n    var predecessor;\n    while (u) {\n      nodes.push(u);\n      predecessor = predecessors[u];\n      u = predecessors[u];\n    }\n    nodes.reverse();\n    return nodes;\n  },\n\n  find_path: function(graph, s, d) {\n    var predecessors = dijkstra.single_source_shortest_paths(graph, s, d);\n    return dijkstra.extract_shortest_path_from_predecessor_list(\n      predecessors, d);\n  },\n\n  /**\n   * A very naive priority queue implementation.\n   */\n  PriorityQueue: {\n    make: function (opts) {\n      var T = dijkstra.PriorityQueue,\n          t = {},\n          key;\n      opts = opts || {};\n      for (key in T) {\n        if (T.hasOwnProperty(key)) {\n          t[key] = T[key];\n        }\n      }\n      t.queue = [];\n      t.sorter = opts.sorter || T.default_sorter;\n      return t;\n    },\n\n    default_sorter: function (a, b) {\n      return a.cost - b.cost;\n    },\n\n    /**\n     * Add a new item to the queue and ensure the highest priority element\n     * is at the front of the queue.\n     */\n    push: function (value, cost) {\n      var item = {value: value, cost: cost};\n      this.queue.push(item);\n      this.queue.sort(this.sorter);\n    },\n\n    /**\n     * Return the highest priority element in the queue.\n     */\n    pop: function () {\n      return this.queue.shift();\n    },\n\n    empty: function () {\n      return this.queue.length === 0;\n    }\n  }\n};\n\n\n// node.js module exports\nif (typeof module !== 'undefined') {\n  module.exports = dijkstra;\n}\n", "const Mode = require('./mode')\nconst NumericData = require('./numeric-data')\nconst AlphanumericData = require('./alphanumeric-data')\nconst ByteData = require('./byte-data')\nconst KanjiData = require('./kanji-data')\nconst Regex = require('./regex')\nconst Utils = require('./utils')\nconst dijkstra = require('dijkstrajs')\n\n/**\n * Returns UTF8 byte length\n *\n * @param  {String} str Input string\n * @return {Number}     Number of byte\n */\nfunction getStringByteLength (str) {\n  return unescape(encodeURIComponent(str)).length\n}\n\n/**\n * Get a list of segments of the specified mode\n * from a string\n *\n * @param  {Mode}   mode Segment mode\n * @param  {String} str  String to process\n * @return {Array}       Array of object with segments data\n */\nfunction getSegments (regex, mode, str) {\n  const segments = []\n  let result\n\n  while ((result = regex.exec(str)) !== null) {\n    segments.push({\n      data: result[0],\n      index: result.index,\n      mode: mode,\n      length: result[0].length\n    })\n  }\n\n  return segments\n}\n\n/**\n * Extracts a series of segments with the appropriate\n * modes from a string\n *\n * @param  {String} dataStr Input string\n * @return {Array}          Array of object with segments data\n */\nfunction getSegmentsFromString (dataStr) {\n  const numSegs = getSegments(Regex.NUMERIC, Mode.NUMERIC, dataStr)\n  const alphaNumSegs = getSegments(Regex.ALPHANUMERIC, Mode.ALPHANUMERIC, dataStr)\n  let byteSegs\n  let kanjiSegs\n\n  if (Utils.isKanjiModeEnabled()) {\n    byteSegs = getSegments(Regex.BYTE, Mode.BYTE, dataStr)\n    kanjiSegs = getSegments(Regex.KANJI, Mode.KANJI, dataStr)\n  } else {\n    byteSegs = getSegments(Regex.BYTE_KANJI, Mode.BYTE, dataStr)\n    kanjiSegs = []\n  }\n\n  const segs = numSegs.concat(alphaNumSegs, byteSegs, kanjiSegs)\n\n  return segs\n    .sort(function (s1, s2) {\n      return s1.index - s2.index\n    })\n    .map(function (obj) {\n      return {\n        data: obj.data,\n        mode: obj.mode,\n        length: obj.length\n      }\n    })\n}\n\n/**\n * Returns how many bits are needed to encode a string of\n * specified length with the specified mode\n *\n * @param  {Number} length String length\n * @param  {Mode} mode     Segment mode\n * @return {Number}        Bit length\n */\nfunction getSegmentBitsLength (length, mode) {\n  switch (mode) {\n    case Mode.NUMERIC:\n      return NumericData.getBitsLength(length)\n    case Mode.ALPHANUMERIC:\n      return AlphanumericData.getBitsLength(length)\n    case Mode.KANJI:\n      return KanjiData.getBitsLength(length)\n    case Mode.BYTE:\n      return ByteData.getBitsLength(length)\n  }\n}\n\n/**\n * Merges adjacent segments which have the same mode\n *\n * @param  {Array} segs Array of object with segments data\n * @return {Array}      Array of object with segments data\n */\nfunction mergeSegments (segs) {\n  return segs.reduce(function (acc, curr) {\n    const prevSeg = acc.length - 1 >= 0 ? acc[acc.length - 1] : null\n    if (prevSeg && prevSeg.mode === curr.mode) {\n      acc[acc.length - 1].data += curr.data\n      return acc\n    }\n\n    acc.push(curr)\n    return acc\n  }, [])\n}\n\n/**\n * Generates a list of all possible nodes combination which\n * will be used to build a segments graph.\n *\n * Nodes are divided by groups. Each group will contain a list of all the modes\n * in which is possible to encode the given text.\n *\n * For example the text '12345' can be encoded as Numeric, Alphanumeric or Byte.\n * The group for '12345' will contain then 3 objects, one for each\n * possible encoding mode.\n *\n * Each node represents a possible segment.\n *\n * @param  {Array} segs Array of object with segments data\n * @return {Array}      Array of object with segments data\n */\nfunction buildNodes (segs) {\n  const nodes = []\n  for (let i = 0; i < segs.length; i++) {\n    const seg = segs[i]\n\n    switch (seg.mode) {\n      case Mode.NUMERIC:\n        nodes.push([seg,\n          { data: seg.data, mode: Mode.ALPHANUMERIC, length: seg.length },\n          { data: seg.data, mode: Mode.BYTE, length: seg.length }\n        ])\n        break\n      case Mode.ALPHANUMERIC:\n        nodes.push([seg,\n          { data: seg.data, mode: Mode.BYTE, length: seg.length }\n        ])\n        break\n      case Mode.KANJI:\n        nodes.push([seg,\n          { data: seg.data, mode: Mode.BYTE, length: getStringByteLength(seg.data) }\n        ])\n        break\n      case Mode.BYTE:\n        nodes.push([\n          { data: seg.data, mode: Mode.BYTE, length: getStringByteLength(seg.data) }\n        ])\n    }\n  }\n\n  return nodes\n}\n\n/**\n * Builds a graph from a list of nodes.\n * All segments in each node group will be connected with all the segments of\n * the next group and so on.\n *\n * At each connection will be assigned a weight depending on the\n * segment's byte length.\n *\n * @param  {Array} nodes    Array of object with segments data\n * @param  {Number} version QR Code version\n * @return {Object}         Graph of all possible segments\n */\nfunction buildGraph (nodes, version) {\n  const table = {}\n  const graph = { start: {} }\n  let prevNodeIds = ['start']\n\n  for (let i = 0; i < nodes.length; i++) {\n    const nodeGroup = nodes[i]\n    const currentNodeIds = []\n\n    for (let j = 0; j < nodeGroup.length; j++) {\n      const node = nodeGroup[j]\n      const key = '' + i + j\n\n      currentNodeIds.push(key)\n      table[key] = { node: node, lastCount: 0 }\n      graph[key] = {}\n\n      for (let n = 0; n < prevNodeIds.length; n++) {\n        const prevNodeId = prevNodeIds[n]\n\n        if (table[prevNodeId] && table[prevNodeId].node.mode === node.mode) {\n          graph[prevNodeId][key] =\n            getSegmentBitsLength(table[prevNodeId].lastCount + node.length, node.mode) -\n            getSegmentBitsLength(table[prevNodeId].lastCount, node.mode)\n\n          table[prevNodeId].lastCount += node.length\n        } else {\n          if (table[prevNodeId]) table[prevNodeId].lastCount = node.length\n\n          graph[prevNodeId][key] = getSegmentBitsLength(node.length, node.mode) +\n            4 + Mode.getCharCountIndicator(node.mode, version) // switch cost\n        }\n      }\n    }\n\n    prevNodeIds = currentNodeIds\n  }\n\n  for (let n = 0; n < prevNodeIds.length; n++) {\n    graph[prevNodeIds[n]].end = 0\n  }\n\n  return { map: graph, table: table }\n}\n\n/**\n * Builds a segment from a specified data and mode.\n * If a mode is not specified, the more suitable will be used.\n *\n * @param  {String} data             Input data\n * @param  {Mode | String} modesHint Data mode\n * @return {Segment}                 Segment\n */\nfunction buildSingleSegment (data, modesHint) {\n  let mode\n  const bestMode = Mode.getBestModeForData(data)\n\n  mode = Mode.from(modesHint, bestMode)\n\n  // Make sure data can be encoded\n  if (mode !== Mode.BYTE && mode.bit < bestMode.bit) {\n    throw new Error('\"' + data + '\"' +\n      ' cannot be encoded with mode ' + Mode.toString(mode) +\n      '.\\n Suggested mode is: ' + Mode.toString(bestMode))\n  }\n\n  // Use Mode.BYTE if Kanji support is disabled\n  if (mode === Mode.KANJI && !Utils.isKanjiModeEnabled()) {\n    mode = Mode.BYTE\n  }\n\n  switch (mode) {\n    case Mode.NUMERIC:\n      return new NumericData(data)\n\n    case Mode.ALPHANUMERIC:\n      return new AlphanumericData(data)\n\n    case Mode.KANJI:\n      return new KanjiData(data)\n\n    case Mode.BYTE:\n      return new ByteData(data)\n  }\n}\n\n/**\n * Builds a list of segments from an array.\n * Array can contain Strings or Objects with segment's info.\n *\n * For each item which is a string, will be generated a segment with the given\n * string and the more appropriate encoding mode.\n *\n * For each item which is an object, will be generated a segment with the given\n * data and mode.\n * Objects must contain at least the property \"data\".\n * If property \"mode\" is not present, the more suitable mode will be used.\n *\n * @param  {Array} array Array of objects with segments data\n * @return {Array}       Array of Segments\n */\nexports.fromArray = function fromArray (array) {\n  return array.reduce(function (acc, seg) {\n    if (typeof seg === 'string') {\n      acc.push(buildSingleSegment(seg, null))\n    } else if (seg.data) {\n      acc.push(buildSingleSegment(seg.data, seg.mode))\n    }\n\n    return acc\n  }, [])\n}\n\n/**\n * Builds an optimized sequence of segments from a string,\n * which will produce the shortest possible bitstream.\n *\n * @param  {String} data    Input string\n * @param  {Number} version QR Code version\n * @return {Array}          Array of segments\n */\nexports.fromString = function fromString (data, version) {\n  const segs = getSegmentsFromString(data, Utils.isKanjiModeEnabled())\n\n  const nodes = buildNodes(segs)\n  const graph = buildGraph(nodes, version)\n  const path = dijkstra.find_path(graph.map, 'start', 'end')\n\n  const optimizedSegs = []\n  for (let i = 1; i < path.length - 1; i++) {\n    optimizedSegs.push(graph.table[path[i]].node)\n  }\n\n  return exports.fromArray(mergeSegments(optimizedSegs))\n}\n\n/**\n * Splits a string in various segments with the modes which\n * best represent their content.\n * The produced segments are far from being optimized.\n * The output of this function is only used to estimate a QR Code version\n * which may contain the data.\n *\n * @param  {string} data Input string\n * @return {Array}       Array of segments\n */\nexports.rawSplit = function rawSplit (data) {\n  return exports.fromArray(\n    getSegmentsFromString(data, Utils.isKanjiModeEnabled())\n  )\n}\n", "const Utils = require('./utils')\nconst ECLevel = require('./error-correction-level')\nconst BitBuffer = require('./bit-buffer')\nconst BitMatrix = require('./bit-matrix')\nconst AlignmentPattern = require('./alignment-pattern')\nconst FinderPattern = require('./finder-pattern')\nconst MaskPattern = require('./mask-pattern')\nconst ECCode = require('./error-correction-code')\nconst ReedSolomonEncoder = require('./reed-solomon-encoder')\nconst Version = require('./version')\nconst FormatInfo = require('./format-info')\nconst Mode = require('./mode')\nconst Segments = require('./segments')\n\n/**\n * QRCode for JavaScript\n *\n * modified by Ryan Day for nodejs support\n * Copyright (c) 2011 Ryan Day\n *\n * Licensed under the MIT license:\n *   http://www.opensource.org/licenses/mit-license.php\n *\n//---------------------------------------------------------------------\n// QRCode for JavaScript\n//\n// Copyright (c) 2009 Kazuhiko Arase\n//\n// URL: http://www.d-project.com/\n//\n// Licensed under the MIT license:\n//   http://www.opensource.org/licenses/mit-license.php\n//\n// The word \"QR Code\" is registered trademark of\n// DENSO WAVE INCORPORATED\n//   http://www.denso-wave.com/qrcode/faqpatent-e.html\n//\n//---------------------------------------------------------------------\n*/\n\n/**\n * Add finder patterns bits to matrix\n *\n * @param  {BitMatrix} matrix  Modules matrix\n * @param  {Number}    version QR Code version\n */\nfunction setupFinderPattern (matrix, version) {\n  const size = matrix.size\n  const pos = FinderPattern.getPositions(version)\n\n  for (let i = 0; i < pos.length; i++) {\n    const row = pos[i][0]\n    const col = pos[i][1]\n\n    for (let r = -1; r <= 7; r++) {\n      if (row + r <= -1 || size <= row + r) continue\n\n      for (let c = -1; c <= 7; c++) {\n        if (col + c <= -1 || size <= col + c) continue\n\n        if ((r >= 0 && r <= 6 && (c === 0 || c === 6)) ||\n          (c >= 0 && c <= 6 && (r === 0 || r === 6)) ||\n          (r >= 2 && r <= 4 && c >= 2 && c <= 4)) {\n          matrix.set(row + r, col + c, true, true)\n        } else {\n          matrix.set(row + r, col + c, false, true)\n        }\n      }\n    }\n  }\n}\n\n/**\n * Add timing pattern bits to matrix\n *\n * Note: this function must be called before {@link setupAlignmentPattern}\n *\n * @param  {BitMatrix} matrix Modules matrix\n */\nfunction setupTimingPattern (matrix) {\n  const size = matrix.size\n\n  for (let r = 8; r < size - 8; r++) {\n    const value = r % 2 === 0\n    matrix.set(r, 6, value, true)\n    matrix.set(6, r, value, true)\n  }\n}\n\n/**\n * Add alignment patterns bits to matrix\n *\n * Note: this function must be called after {@link setupTimingPattern}\n *\n * @param  {BitMatrix} matrix  Modules matrix\n * @param  {Number}    version QR Code version\n */\nfunction setupAlignmentPattern (matrix, version) {\n  const pos = AlignmentPattern.getPositions(version)\n\n  for (let i = 0; i < pos.length; i++) {\n    const row = pos[i][0]\n    const col = pos[i][1]\n\n    for (let r = -2; r <= 2; r++) {\n      for (let c = -2; c <= 2; c++) {\n        if (r === -2 || r === 2 || c === -2 || c === 2 ||\n          (r === 0 && c === 0)) {\n          matrix.set(row + r, col + c, true, true)\n        } else {\n          matrix.set(row + r, col + c, false, true)\n        }\n      }\n    }\n  }\n}\n\n/**\n * Add version info bits to matrix\n *\n * @param  {BitMatrix} matrix  Modules matrix\n * @param  {Number}    version QR Code version\n */\nfunction setupVersionInfo (matrix, version) {\n  const size = matrix.size\n  const bits = Version.getEncodedBits(version)\n  let row, col, mod\n\n  for (let i = 0; i < 18; i++) {\n    row = Math.floor(i / 3)\n    col = i % 3 + size - 8 - 3\n    mod = ((bits >> i) & 1) === 1\n\n    matrix.set(row, col, mod, true)\n    matrix.set(col, row, mod, true)\n  }\n}\n\n/**\n * Add format info bits to matrix\n *\n * @param  {BitMatrix} matrix               Modules matrix\n * @param  {ErrorCorrectionLevel}    errorCorrectionLevel Error correction level\n * @param  {Number}    maskPattern          Mask pattern reference value\n */\nfunction setupFormatInfo (matrix, errorCorrectionLevel, maskPattern) {\n  const size = matrix.size\n  const bits = FormatInfo.getEncodedBits(errorCorrectionLevel, maskPattern)\n  let i, mod\n\n  for (i = 0; i < 15; i++) {\n    mod = ((bits >> i) & 1) === 1\n\n    // vertical\n    if (i < 6) {\n      matrix.set(i, 8, mod, true)\n    } else if (i < 8) {\n      matrix.set(i + 1, 8, mod, true)\n    } else {\n      matrix.set(size - 15 + i, 8, mod, true)\n    }\n\n    // horizontal\n    if (i < 8) {\n      matrix.set(8, size - i - 1, mod, true)\n    } else if (i < 9) {\n      matrix.set(8, 15 - i - 1 + 1, mod, true)\n    } else {\n      matrix.set(8, 15 - i - 1, mod, true)\n    }\n  }\n\n  // fixed module\n  matrix.set(size - 8, 8, 1, true)\n}\n\n/**\n * Add encoded data bits to matrix\n *\n * @param  {BitMatrix}  matrix Modules matrix\n * @param  {Uint8Array} data   Data codewords\n */\nfunction setupData (matrix, data) {\n  const size = matrix.size\n  let inc = -1\n  let row = size - 1\n  let bitIndex = 7\n  let byteIndex = 0\n\n  for (let col = size - 1; col > 0; col -= 2) {\n    if (col === 6) col--\n\n    while (true) {\n      for (let c = 0; c < 2; c++) {\n        if (!matrix.isReserved(row, col - c)) {\n          let dark = false\n\n          if (byteIndex < data.length) {\n            dark = (((data[byteIndex] >>> bitIndex) & 1) === 1)\n          }\n\n          matrix.set(row, col - c, dark)\n          bitIndex--\n\n          if (bitIndex === -1) {\n            byteIndex++\n            bitIndex = 7\n          }\n        }\n      }\n\n      row += inc\n\n      if (row < 0 || size <= row) {\n        row -= inc\n        inc = -inc\n        break\n      }\n    }\n  }\n}\n\n/**\n * Create encoded codewords from data input\n *\n * @param  {Number}   version              QR Code version\n * @param  {ErrorCorrectionLevel}   errorCorrectionLevel Error correction level\n * @param  {ByteData} data                 Data input\n * @return {Uint8Array}                    Buffer containing encoded codewords\n */\nfunction createData (version, errorCorrectionLevel, segments) {\n  // Prepare data buffer\n  const buffer = new BitBuffer()\n\n  segments.forEach(function (data) {\n    // prefix data with mode indicator (4 bits)\n    buffer.put(data.mode.bit, 4)\n\n    // Prefix data with character count indicator.\n    // The character count indicator is a string of bits that represents the\n    // number of characters that are being encoded.\n    // The character count indicator must be placed after the mode indicator\n    // and must be a certain number of bits long, depending on the QR version\n    // and data mode\n    // @see {@link Mode.getCharCountIndicator}.\n    buffer.put(data.getLength(), Mode.getCharCountIndicator(data.mode, version))\n\n    // add binary data sequence to buffer\n    data.write(buffer)\n  })\n\n  // Calculate required number of bits\n  const totalCodewords = Utils.getSymbolTotalCodewords(version)\n  const ecTotalCodewords = ECCode.getTotalCodewordsCount(version, errorCorrectionLevel)\n  const dataTotalCodewordsBits = (totalCodewords - ecTotalCodewords) * 8\n\n  // Add a terminator.\n  // If the bit string is shorter than the total number of required bits,\n  // a terminator of up to four 0s must be added to the right side of the string.\n  // If the bit string is more than four bits shorter than the required number of bits,\n  // add four 0s to the end.\n  if (buffer.getLengthInBits() + 4 <= dataTotalCodewordsBits) {\n    buffer.put(0, 4)\n  }\n\n  // If the bit string is fewer than four bits shorter, add only the number of 0s that\n  // are needed to reach the required number of bits.\n\n  // After adding the terminator, if the number of bits in the string is not a multiple of 8,\n  // pad the string on the right with 0s to make the string's length a multiple of 8.\n  while (buffer.getLengthInBits() % 8 !== 0) {\n    buffer.putBit(0)\n  }\n\n  // Add pad bytes if the string is still shorter than the total number of required bits.\n  // Extend the buffer to fill the data capacity of the symbol corresponding to\n  // the Version and Error Correction Level by adding the Pad Codewords 11101100 (0xEC)\n  // and 00010001 (0x11) alternately.\n  const remainingByte = (dataTotalCodewordsBits - buffer.getLengthInBits()) / 8\n  for (let i = 0; i < remainingByte; i++) {\n    buffer.put(i % 2 ? 0x11 : 0xEC, 8)\n  }\n\n  return createCodewords(buffer, version, errorCorrectionLevel)\n}\n\n/**\n * Encode input data with Reed-Solomon and return codewords with\n * relative error correction bits\n *\n * @param  {BitBuffer} bitBuffer            Data to encode\n * @param  {Number}    version              QR Code version\n * @param  {ErrorCorrectionLevel} errorCorrectionLevel Error correction level\n * @return {Uint8Array}                     Buffer containing encoded codewords\n */\nfunction createCodewords (bitBuffer, version, errorCorrectionLevel) {\n  // Total codewords for this QR code version (Data + Error correction)\n  const totalCodewords = Utils.getSymbolTotalCodewords(version)\n\n  // Total number of error correction codewords\n  const ecTotalCodewords = ECCode.getTotalCodewordsCount(version, errorCorrectionLevel)\n\n  // Total number of data codewords\n  const dataTotalCodewords = totalCodewords - ecTotalCodewords\n\n  // Total number of blocks\n  const ecTotalBlocks = ECCode.getBlocksCount(version, errorCorrectionLevel)\n\n  // Calculate how many blocks each group should contain\n  const blocksInGroup2 = totalCodewords % ecTotalBlocks\n  const blocksInGroup1 = ecTotalBlocks - blocksInGroup2\n\n  const totalCodewordsInGroup1 = Math.floor(totalCodewords / ecTotalBlocks)\n\n  const dataCodewordsInGroup1 = Math.floor(dataTotalCodewords / ecTotalBlocks)\n  const dataCodewordsInGroup2 = dataCodewordsInGroup1 + 1\n\n  // Number of EC codewords is the same for both groups\n  const ecCount = totalCodewordsInGroup1 - dataCodewordsInGroup1\n\n  // Initialize a Reed-Solomon encoder with a generator polynomial of degree ecCount\n  const rs = new ReedSolomonEncoder(ecCount)\n\n  let offset = 0\n  const dcData = new Array(ecTotalBlocks)\n  const ecData = new Array(ecTotalBlocks)\n  let maxDataSize = 0\n  const buffer = new Uint8Array(bitBuffer.buffer)\n\n  // Divide the buffer into the required number of blocks\n  for (let b = 0; b < ecTotalBlocks; b++) {\n    const dataSize = b < blocksInGroup1 ? dataCodewordsInGroup1 : dataCodewordsInGroup2\n\n    // extract a block of data from buffer\n    dcData[b] = buffer.slice(offset, offset + dataSize)\n\n    // Calculate EC codewords for this data block\n    ecData[b] = rs.encode(dcData[b])\n\n    offset += dataSize\n    maxDataSize = Math.max(maxDataSize, dataSize)\n  }\n\n  // Create final data\n  // Interleave the data and error correction codewords from each block\n  const data = new Uint8Array(totalCodewords)\n  let index = 0\n  let i, r\n\n  // Add data codewords\n  for (i = 0; i < maxDataSize; i++) {\n    for (r = 0; r < ecTotalBlocks; r++) {\n      if (i < dcData[r].length) {\n        data[index++] = dcData[r][i]\n      }\n    }\n  }\n\n  // Apped EC codewords\n  for (i = 0; i < ecCount; i++) {\n    for (r = 0; r < ecTotalBlocks; r++) {\n      data[index++] = ecData[r][i]\n    }\n  }\n\n  return data\n}\n\n/**\n * Build QR Code symbol\n *\n * @param  {String} data                 Input string\n * @param  {Number} version              QR Code version\n * @param  {ErrorCorretionLevel} errorCorrectionLevel Error level\n * @param  {MaskPattern} maskPattern     Mask pattern\n * @return {Object}                      Object containing symbol data\n */\nfunction createSymbol (data, version, errorCorrectionLevel, maskPattern) {\n  let segments\n\n  if (Array.isArray(data)) {\n    segments = Segments.fromArray(data)\n  } else if (typeof data === 'string') {\n    let estimatedVersion = version\n\n    if (!estimatedVersion) {\n      const rawSegments = Segments.rawSplit(data)\n\n      // Estimate best version that can contain raw splitted segments\n      estimatedVersion = Version.getBestVersionForData(rawSegments, errorCorrectionLevel)\n    }\n\n    // Build optimized segments\n    // If estimated version is undefined, try with the highest version\n    segments = Segments.fromString(data, estimatedVersion || 40)\n  } else {\n    throw new Error('Invalid data')\n  }\n\n  // Get the min version that can contain data\n  const bestVersion = Version.getBestVersionForData(segments, errorCorrectionLevel)\n\n  // If no version is found, data cannot be stored\n  if (!bestVersion) {\n    throw new Error('The amount of data is too big to be stored in a QR Code')\n  }\n\n  // If not specified, use min version as default\n  if (!version) {\n    version = bestVersion\n\n  // Check if the specified version can contain the data\n  } else if (version < bestVersion) {\n    throw new Error('\\n' +\n      'The chosen QR Code version cannot contain this amount of data.\\n' +\n      'Minimum version required to store current data is: ' + bestVersion + '.\\n'\n    )\n  }\n\n  const dataBits = createData(version, errorCorrectionLevel, segments)\n\n  // Allocate matrix buffer\n  const moduleCount = Utils.getSymbolSize(version)\n  const modules = new BitMatrix(moduleCount)\n\n  // Add function modules\n  setupFinderPattern(modules, version)\n  setupTimingPattern(modules)\n  setupAlignmentPattern(modules, version)\n\n  // Add temporary dummy bits for format info just to set them as reserved.\n  // This is needed to prevent these bits from being masked by {@link MaskPattern.applyMask}\n  // since the masking operation must be performed only on the encoding region.\n  // These blocks will be replaced with correct values later in code.\n  setupFormatInfo(modules, errorCorrectionLevel, 0)\n\n  if (version >= 7) {\n    setupVersionInfo(modules, version)\n  }\n\n  // Add data codewords\n  setupData(modules, dataBits)\n\n  if (isNaN(maskPattern)) {\n    // Find best mask pattern\n    maskPattern = MaskPattern.getBestMask(modules,\n      setupFormatInfo.bind(null, modules, errorCorrectionLevel))\n  }\n\n  // Apply mask pattern\n  MaskPattern.applyMask(maskPattern, modules)\n\n  // Replace format info bits with correct values\n  setupFormatInfo(modules, errorCorrectionLevel, maskPattern)\n\n  return {\n    modules: modules,\n    version: version,\n    errorCorrectionLevel: errorCorrectionLevel,\n    maskPattern: maskPattern,\n    segments: segments\n  }\n}\n\n/**\n * QR Code\n *\n * @param {String | Array} data                 Input data\n * @param {Object} options                      Optional configurations\n * @param {Number} options.version              QR Code version\n * @param {String} options.errorCorrectionLevel Error correction level\n * @param {Function} options.toSJISFunc         Helper func to convert utf8 to sjis\n */\nexports.create = function create (data, options) {\n  if (typeof data === 'undefined' || data === '') {\n    throw new Error('No input text')\n  }\n\n  let errorCorrectionLevel = ECLevel.M\n  let version\n  let mask\n\n  if (typeof options !== 'undefined') {\n    // Use higher error correction level as default\n    errorCorrectionLevel = ECLevel.from(options.errorCorrectionLevel, ECLevel.M)\n    version = Version.from(options.version)\n    mask = MaskPattern.from(options.maskPattern)\n\n    if (options.toSJISFunc) {\n      Utils.setToSJISFunction(options.toSJISFunc)\n    }\n  }\n\n  return createSymbol(data, version, errorCorrectionLevel, mask)\n}\n", "\"use strict\";\n\nlet util = require(\"util\");\nlet Stream = require(\"stream\");\n\nlet ChunkStream = (module.exports = function () {\n  Stream.call(this);\n\n  this._buffers = [];\n  this._buffered = 0;\n\n  this._reads = [];\n  this._paused = false;\n\n  this._encoding = \"utf8\";\n  this.writable = true;\n});\nutil.inherits(ChunkStream, Stream);\n\nChunkStream.prototype.read = function (length, callback) {\n  this._reads.push({\n    length: Math.abs(length), // if length < 0 then at most this length\n    allowLess: length < 0,\n    func: callback,\n  });\n\n  process.nextTick(\n    function () {\n      this._process();\n\n      // its paused and there is not enought data then ask for more\n      if (this._paused && this._reads && this._reads.length > 0) {\n        this._paused = false;\n\n        this.emit(\"drain\");\n      }\n    }.bind(this)\n  );\n};\n\nChunkStream.prototype.write = function (data, encoding) {\n  if (!this.writable) {\n    this.emit(\"error\", new Error(\"Stream not writable\"));\n    return false;\n  }\n\n  let dataBuffer;\n  if (Buffer.isBuffer(data)) {\n    dataBuffer = data;\n  } else {\n    dataBuffer = Buffer.from(data, encoding || this._encoding);\n  }\n\n  this._buffers.push(dataBuffer);\n  this._buffered += dataBuffer.length;\n\n  this._process();\n\n  // ok if there are no more read requests\n  if (this._reads && this._reads.length === 0) {\n    this._paused = true;\n  }\n\n  return this.writable && !this._paused;\n};\n\nChunkStream.prototype.end = function (data, encoding) {\n  if (data) {\n    this.write(data, encoding);\n  }\n\n  this.writable = false;\n\n  // already destroyed\n  if (!this._buffers) {\n    return;\n  }\n\n  // enqueue or handle end\n  if (this._buffers.length === 0) {\n    this._end();\n  } else {\n    this._buffers.push(null);\n    this._process();\n  }\n};\n\nChunkStream.prototype.destroySoon = ChunkStream.prototype.end;\n\nChunkStream.prototype._end = function () {\n  if (this._reads.length > 0) {\n    this.emit(\"error\", new Error(\"Unexpected end of input\"));\n  }\n\n  this.destroy();\n};\n\nChunkStream.prototype.destroy = function () {\n  if (!this._buffers) {\n    return;\n  }\n\n  this.writable = false;\n  this._reads = null;\n  this._buffers = null;\n\n  this.emit(\"close\");\n};\n\nChunkStream.prototype._processReadAllowingLess = function (read) {\n  // ok there is any data so that we can satisfy this request\n  this._reads.shift(); // == read\n\n  // first we need to peek into first buffer\n  let smallerBuf = this._buffers[0];\n\n  // ok there is more data than we need\n  if (smallerBuf.length > read.length) {\n    this._buffered -= read.length;\n    this._buffers[0] = smallerBuf.slice(read.length);\n\n    read.func.call(this, smallerBuf.slice(0, read.length));\n  } else {\n    // ok this is less than maximum length so use it all\n    this._buffered -= smallerBuf.length;\n    this._buffers.shift(); // == smallerBuf\n\n    read.func.call(this, smallerBuf);\n  }\n};\n\nChunkStream.prototype._processRead = function (read) {\n  this._reads.shift(); // == read\n\n  let pos = 0;\n  let count = 0;\n  let data = Buffer.alloc(read.length);\n\n  // create buffer for all data\n  while (pos < read.length) {\n    let buf = this._buffers[count++];\n    let len = Math.min(buf.length, read.length - pos);\n\n    buf.copy(data, pos, 0, len);\n    pos += len;\n\n    // last buffer wasn't used all so just slice it and leave\n    if (len !== buf.length) {\n      this._buffers[--count] = buf.slice(len);\n    }\n  }\n\n  // remove all used buffers\n  if (count > 0) {\n    this._buffers.splice(0, count);\n  }\n\n  this._buffered -= read.length;\n\n  read.func.call(this, data);\n};\n\nChunkStream.prototype._process = function () {\n  try {\n    // as long as there is any data and read requests\n    while (this._buffered > 0 && this._reads && this._reads.length > 0) {\n      let read = this._reads[0];\n\n      // read any data (but no more than length)\n      if (read.allowLess) {\n        this._processReadAllowingLess(read);\n      } else if (this._buffered >= read.length) {\n        // ok we can meet some expectations\n\n        this._processRead(read);\n      } else {\n        // not enought data to satisfy first request in queue\n        // so we need to wait for more\n        break;\n      }\n    }\n\n    if (this._buffers && !this.writable) {\n      this._end();\n    }\n  } catch (ex) {\n    this.emit(\"error\", ex);\n  }\n};\n", "\"use strict\";\n\n// Adam 7\n//   0 1 2 3 4 5 6 7\n// 0 x 6 4 6 x 6 4 6\n// 1 7 7 7 7 7 7 7 7\n// 2 5 6 5 6 5 6 5 6\n// 3 7 7 7 7 7 7 7 7\n// 4 3 6 4 6 3 6 4 6\n// 5 7 7 7 7 7 7 7 7\n// 6 5 6 5 6 5 6 5 6\n// 7 7 7 7 7 7 7 7 7\n\nlet imagePasses = [\n  {\n    // pass 1 - 1px\n    x: [0],\n    y: [0],\n  },\n  {\n    // pass 2 - 1px\n    x: [4],\n    y: [0],\n  },\n  {\n    // pass 3 - 2px\n    x: [0, 4],\n    y: [4],\n  },\n  {\n    // pass 4 - 4px\n    x: [2, 6],\n    y: [0, 4],\n  },\n  {\n    // pass 5 - 8px\n    x: [0, 2, 4, 6],\n    y: [2, 6],\n  },\n  {\n    // pass 6 - 16px\n    x: [1, 3, 5, 7],\n    y: [0, 2, 4, 6],\n  },\n  {\n    // pass 7 - 32px\n    x: [0, 1, 2, 3, 4, 5, 6, 7],\n    y: [1, 3, 5, 7],\n  },\n];\n\nexports.getImagePasses = function (width, height) {\n  let images = [];\n  let xLeftOver = width % 8;\n  let yLeftOver = height % 8;\n  let xRepeats = (width - xLeftOver) / 8;\n  let yRepeats = (height - yLeftOver) / 8;\n  for (let i = 0; i < imagePasses.length; i++) {\n    let pass = imagePasses[i];\n    let passWidth = xRepeats * pass.x.length;\n    let passHeight = yRepeats * pass.y.length;\n    for (let j = 0; j < pass.x.length; j++) {\n      if (pass.x[j] < xLeftOver) {\n        passWidth++;\n      } else {\n        break;\n      }\n    }\n    for (let j = 0; j < pass.y.length; j++) {\n      if (pass.y[j] < yLeftOver) {\n        passHeight++;\n      } else {\n        break;\n      }\n    }\n    if (passWidth > 0 && passHeight > 0) {\n      images.push({ width: passWidth, height: passHeight, index: i });\n    }\n  }\n  return images;\n};\n\nexports.getInterlaceIterator = function (width) {\n  return function (x, y, pass) {\n    let outerXLeftOver = x % imagePasses[pass].x.length;\n    let outerX =\n      ((x - outerXLeftOver) / imagePasses[pass].x.length) * 8 +\n      imagePasses[pass].x[outerXLeftOver];\n    let outerYLeftOver = y % imagePasses[pass].y.length;\n    let outerY =\n      ((y - outerYLeftOver) / imagePasses[pass].y.length) * 8 +\n      imagePasses[pass].y[outerYLeftOver];\n    return outerX * 4 + outerY * width * 4;\n  };\n};\n", "\"use strict\";\n\nmodule.exports = function paethPredictor(left, above, upLeft) {\n  let paeth = left + above - upLeft;\n  let pLeft = Math.abs(paeth - left);\n  let pAbove = Math.abs(paeth - above);\n  let pUpLeft = Math.abs(paeth - upLeft);\n\n  if (pLeft <= pAbove && pLeft <= pUpLeft) {\n    return left;\n  }\n  if (pAbove <= pUpLeft) {\n    return above;\n  }\n  return upLeft;\n};\n", "\"use strict\";\n\nlet interlaceUtils = require(\"./interlace\");\nlet paethPredictor = require(\"./paeth-predictor\");\n\nfunction getByteWidth(width, bpp, depth) {\n  let byteWidth = width * bpp;\n  if (depth !== 8) {\n    byteWidth = Math.ceil(byteWidth / (8 / depth));\n  }\n  return byteWidth;\n}\n\nlet Filter = (module.exports = function (bitmapInfo, dependencies) {\n  let width = bitmapInfo.width;\n  let height = bitmapInfo.height;\n  let interlace = bitmapInfo.interlace;\n  let bpp = bitmapInfo.bpp;\n  let depth = bitmapInfo.depth;\n\n  this.read = dependencies.read;\n  this.write = dependencies.write;\n  this.complete = dependencies.complete;\n\n  this._imageIndex = 0;\n  this._images = [];\n  if (interlace) {\n    let passes = interlaceUtils.getImagePasses(width, height);\n    for (let i = 0; i < passes.length; i++) {\n      this._images.push({\n        byteWidth: getByteWidth(passes[i].width, bpp, depth),\n        height: passes[i].height,\n        lineIndex: 0,\n      });\n    }\n  } else {\n    this._images.push({\n      byteWidth: getByteWidth(width, bpp, depth),\n      height: height,\n      lineIndex: 0,\n    });\n  }\n\n  // when filtering the line we look at the pixel to the left\n  // the spec also says it is done on a byte level regardless of the number of pixels\n  // so if the depth is byte compatible (8 or 16) we subtract the bpp in order to compare back\n  // a pixel rather than just a different byte part. However if we are sub byte, we ignore.\n  if (depth === 8) {\n    this._xComparison = bpp;\n  } else if (depth === 16) {\n    this._xComparison = bpp * 2;\n  } else {\n    this._xComparison = 1;\n  }\n});\n\nFilter.prototype.start = function () {\n  this.read(\n    this._images[this._imageIndex].byteWidth + 1,\n    this._reverseFilterLine.bind(this)\n  );\n};\n\nFilter.prototype._unFilterType1 = function (\n  rawData,\n  unfilteredLine,\n  byteWidth\n) {\n  let xComparison = this._xComparison;\n  let xBiggerThan = xComparison - 1;\n\n  for (let x = 0; x < byteWidth; x++) {\n    let rawByte = rawData[1 + x];\n    let f1Left = x > xBiggerThan ? unfilteredLine[x - xComparison] : 0;\n    unfilteredLine[x] = rawByte + f1Left;\n  }\n};\n\nFilter.prototype._unFilterType2 = function (\n  rawData,\n  unfilteredLine,\n  byteWidth\n) {\n  let lastLine = this._lastLine;\n\n  for (let x = 0; x < byteWidth; x++) {\n    let rawByte = rawData[1 + x];\n    let f2Up = lastLine ? lastLine[x] : 0;\n    unfilteredLine[x] = rawByte + f2Up;\n  }\n};\n\nFilter.prototype._unFilterType3 = function (\n  rawData,\n  unfilteredLine,\n  byteWidth\n) {\n  let xComparison = this._xComparison;\n  let xBiggerThan = xComparison - 1;\n  let lastLine = this._lastLine;\n\n  for (let x = 0; x < byteWidth; x++) {\n    let rawByte = rawData[1 + x];\n    let f3Up = lastLine ? lastLine[x] : 0;\n    let f3Left = x > xBiggerThan ? unfilteredLine[x - xComparison] : 0;\n    let f3Add = Math.floor((f3Left + f3Up) / 2);\n    unfilteredLine[x] = rawByte + f3Add;\n  }\n};\n\nFilter.prototype._unFilterType4 = function (\n  rawData,\n  unfilteredLine,\n  byteWidth\n) {\n  let xComparison = this._xComparison;\n  let xBiggerThan = xComparison - 1;\n  let lastLine = this._lastLine;\n\n  for (let x = 0; x < byteWidth; x++) {\n    let rawByte = rawData[1 + x];\n    let f4Up = lastLine ? lastLine[x] : 0;\n    let f4Left = x > xBiggerThan ? unfilteredLine[x - xComparison] : 0;\n    let f4UpLeft = x > xBiggerThan && lastLine ? lastLine[x - xComparison] : 0;\n    let f4Add = paethPredictor(f4Left, f4Up, f4UpLeft);\n    unfilteredLine[x] = rawByte + f4Add;\n  }\n};\n\nFilter.prototype._reverseFilterLine = function (rawData) {\n  let filter = rawData[0];\n  let unfilteredLine;\n  let currentImage = this._images[this._imageIndex];\n  let byteWidth = currentImage.byteWidth;\n\n  if (filter === 0) {\n    unfilteredLine = rawData.slice(1, byteWidth + 1);\n  } else {\n    unfilteredLine = Buffer.alloc(byteWidth);\n\n    switch (filter) {\n      case 1:\n        this._unFilterType1(rawData, unfilteredLine, byteWidth);\n        break;\n      case 2:\n        this._unFilterType2(rawData, unfilteredLine, byteWidth);\n        break;\n      case 3:\n        this._unFilterType3(rawData, unfilteredLine, byteWidth);\n        break;\n      case 4:\n        this._unFilterType4(rawData, unfilteredLine, byteWidth);\n        break;\n      default:\n        throw new Error(\"Unrecognised filter type - \" + filter);\n    }\n  }\n\n  this.write(unfilteredLine);\n\n  currentImage.lineIndex++;\n  if (currentImage.lineIndex >= currentImage.height) {\n    this._lastLine = null;\n    this._imageIndex++;\n    currentImage = this._images[this._imageIndex];\n  } else {\n    this._lastLine = unfilteredLine;\n  }\n\n  if (currentImage) {\n    // read, using the byte width that may be from the new current image\n    this.read(currentImage.byteWidth + 1, this._reverseFilterLine.bind(this));\n  } else {\n    this._lastLine = null;\n    this.complete();\n  }\n};\n", "\"use strict\";\n\nlet util = require(\"util\");\nlet ChunkStream = require(\"./chunkstream\");\nlet Filter = require(\"./filter-parse\");\n\nlet FilterAsync = (module.exports = function (bitmapInfo) {\n  ChunkStream.call(this);\n\n  let buffers = [];\n  let that = this;\n  this._filter = new Filter(bitmapInfo, {\n    read: this.read.bind(this),\n    write: function (buffer) {\n      buffers.push(buffer);\n    },\n    complete: function () {\n      that.emit(\"complete\", Buffer.concat(buffers));\n    },\n  });\n\n  this._filter.start();\n});\nutil.inherits(FilterAsync, ChunkStream);\n", "\"use strict\";\n\nmodule.exports = {\n  PNG_SIGNATURE: [0x89, 0x50, 0x4e, 0x47, 0x0d, 0x0a, 0x1a, 0x0a],\n\n  TYPE_IHDR: 0x49484452,\n  TYPE_IEND: 0x49454e44,\n  TYPE_IDAT: 0x49444154,\n  TYPE_PLTE: 0x504c5445,\n  TYPE_tRNS: 0x74524e53, // eslint-disable-line camelcase\n  TYPE_gAMA: 0x67414d41, // eslint-disable-line camelcase\n\n  // color-type bits\n  COLORTYPE_GRAYSCALE: 0,\n  COLORTYPE_PALETTE: 1,\n  COLORTYPE_COLOR: 2,\n  COLORTYPE_ALPHA: 4, // e.g. grayscale and alpha\n\n  // color-type combinations\n  COLORTYPE_PALETTE_COLOR: 3,\n  COLORTYPE_COLOR_ALPHA: 6,\n\n  COLORTYPE_TO_BPP_MAP: {\n    0: 1,\n    2: 3,\n    3: 1,\n    4: 2,\n    6: 4,\n  },\n\n  GAMMA_DIVISION: 100000,\n};\n", "\"use strict\";\n\nlet crcTable = [];\n\n(function () {\n  for (let i = 0; i < 256; i++) {\n    let currentCrc = i;\n    for (let j = 0; j < 8; j++) {\n      if (currentCrc & 1) {\n        currentCrc = 0xedb88320 ^ (currentCrc >>> 1);\n      } else {\n        currentCrc = currentCrc >>> 1;\n      }\n    }\n    crcTable[i] = currentCrc;\n  }\n})();\n\nlet CrcCalculator = (module.exports = function () {\n  this._crc = -1;\n});\n\nCrcCalculator.prototype.write = function (data) {\n  for (let i = 0; i < data.length; i++) {\n    this._crc = crcTable[(this._crc ^ data[i]) & 0xff] ^ (this._crc >>> 8);\n  }\n  return true;\n};\n\nCrcCalculator.prototype.crc32 = function () {\n  return this._crc ^ -1;\n};\n\nCrcCalculator.crc32 = function (buf) {\n  let crc = -1;\n  for (let i = 0; i < buf.length; i++) {\n    crc = crcTable[(crc ^ buf[i]) & 0xff] ^ (crc >>> 8);\n  }\n  return crc ^ -1;\n};\n", "\"use strict\";\n\nlet constants = require(\"./constants\");\nlet CrcCalculator = require(\"./crc\");\n\nlet Parser = (module.exports = function (options, dependencies) {\n  this._options = options;\n  options.checkCRC = options.checkCRC !== false;\n\n  this._hasIHDR = false;\n  this._hasIEND = false;\n  this._emittedHeadersFinished = false;\n\n  // input flags/metadata\n  this._palette = [];\n  this._colorType = 0;\n\n  this._chunks = {};\n  this._chunks[constants.TYPE_IHDR] = this._handleIHDR.bind(this);\n  this._chunks[constants.TYPE_IEND] = this._handleIEND.bind(this);\n  this._chunks[constants.TYPE_IDAT] = this._handleIDAT.bind(this);\n  this._chunks[constants.TYPE_PLTE] = this._handlePLTE.bind(this);\n  this._chunks[constants.TYPE_tRNS] = this._handleTRNS.bind(this);\n  this._chunks[constants.TYPE_gAMA] = this._handleGAMA.bind(this);\n\n  this.read = dependencies.read;\n  this.error = dependencies.error;\n  this.metadata = dependencies.metadata;\n  this.gamma = dependencies.gamma;\n  this.transColor = dependencies.transColor;\n  this.palette = dependencies.palette;\n  this.parsed = dependencies.parsed;\n  this.inflateData = dependencies.inflateData;\n  this.finished = dependencies.finished;\n  this.simpleTransparency = dependencies.simpleTransparency;\n  this.headersFinished = dependencies.headersFinished || function () {};\n});\n\nParser.prototype.start = function () {\n  this.read(constants.PNG_SIGNATURE.length, this._parseSignature.bind(this));\n};\n\nParser.prototype._parseSignature = function (data) {\n  let signature = constants.PNG_SIGNATURE;\n\n  for (let i = 0; i < signature.length; i++) {\n    if (data[i] !== signature[i]) {\n      this.error(new Error(\"Invalid file signature\"));\n      return;\n    }\n  }\n  this.read(8, this._parseChunkBegin.bind(this));\n};\n\nParser.prototype._parseChunkBegin = function (data) {\n  // chunk content length\n  let length = data.readUInt32BE(0);\n\n  // chunk type\n  let type = data.readUInt32BE(4);\n  let name = \"\";\n  for (let i = 4; i < 8; i++) {\n    name += String.fromCharCode(data[i]);\n  }\n\n  //console.log('chunk ', name, length);\n\n  // chunk flags\n  let ancillary = Boolean(data[4] & 0x20); // or critical\n  //    priv = Boolean(data[5] & 0x20), // or public\n  //    safeToCopy = Boolean(data[7] & 0x20); // or unsafe\n\n  if (!this._hasIHDR && type !== constants.TYPE_IHDR) {\n    this.error(new Error(\"Expected IHDR on beggining\"));\n    return;\n  }\n\n  this._crc = new CrcCalculator();\n  this._crc.write(Buffer.from(name));\n\n  if (this._chunks[type]) {\n    return this._chunks[type](length);\n  }\n\n  if (!ancillary) {\n    this.error(new Error(\"Unsupported critical chunk type \" + name));\n    return;\n  }\n\n  this.read(length + 4, this._skipChunk.bind(this));\n};\n\nParser.prototype._skipChunk = function (/*data*/) {\n  this.read(8, this._parseChunkBegin.bind(this));\n};\n\nParser.prototype._handleChunkEnd = function () {\n  this.read(4, this._parseChunkEnd.bind(this));\n};\n\nParser.prototype._parseChunkEnd = function (data) {\n  let fileCrc = data.readInt32BE(0);\n  let calcCrc = this._crc.crc32();\n\n  // check CRC\n  if (this._options.checkCRC && calcCrc !== fileCrc) {\n    this.error(new Error(\"Crc error - \" + fileCrc + \" - \" + calcCrc));\n    return;\n  }\n\n  if (!this._hasIEND) {\n    this.read(8, this._parseChunkBegin.bind(this));\n  }\n};\n\nParser.prototype._handleIHDR = function (length) {\n  this.read(length, this._parseIHDR.bind(this));\n};\nParser.prototype._parseIHDR = function (data) {\n  this._crc.write(data);\n\n  let width = data.readUInt32BE(0);\n  let height = data.readUInt32BE(4);\n  let depth = data[8];\n  let colorType = data[9]; // bits: 1 palette, 2 color, 4 alpha\n  let compr = data[10];\n  let filter = data[11];\n  let interlace = data[12];\n\n  // console.log('    width', width, 'height', height,\n  //     'depth', depth, 'colorType', colorType,\n  //     'compr', compr, 'filter', filter, 'interlace', interlace\n  // );\n\n  if (\n    depth !== 8 &&\n    depth !== 4 &&\n    depth !== 2 &&\n    depth !== 1 &&\n    depth !== 16\n  ) {\n    this.error(new Error(\"Unsupported bit depth \" + depth));\n    return;\n  }\n  if (!(colorType in constants.COLORTYPE_TO_BPP_MAP)) {\n    this.error(new Error(\"Unsupported color type\"));\n    return;\n  }\n  if (compr !== 0) {\n    this.error(new Error(\"Unsupported compression method\"));\n    return;\n  }\n  if (filter !== 0) {\n    this.error(new Error(\"Unsupported filter method\"));\n    return;\n  }\n  if (interlace !== 0 && interlace !== 1) {\n    this.error(new Error(\"Unsupported interlace method\"));\n    return;\n  }\n\n  this._colorType = colorType;\n\n  let bpp = constants.COLORTYPE_TO_BPP_MAP[this._colorType];\n\n  this._hasIHDR = true;\n\n  this.metadata({\n    width: width,\n    height: height,\n    depth: depth,\n    interlace: Boolean(interlace),\n    palette: Boolean(colorType & constants.COLORTYPE_PALETTE),\n    color: Boolean(colorType & constants.COLORTYPE_COLOR),\n    alpha: Boolean(colorType & constants.COLORTYPE_ALPHA),\n    bpp: bpp,\n    colorType: colorType,\n  });\n\n  this._handleChunkEnd();\n};\n\nParser.prototype._handlePLTE = function (length) {\n  this.read(length, this._parsePLTE.bind(this));\n};\nParser.prototype._parsePLTE = function (data) {\n  this._crc.write(data);\n\n  let entries = Math.floor(data.length / 3);\n  // console.log('Palette:', entries);\n\n  for (let i = 0; i < entries; i++) {\n    this._palette.push([data[i * 3], data[i * 3 + 1], data[i * 3 + 2], 0xff]);\n  }\n\n  this.palette(this._palette);\n\n  this._handleChunkEnd();\n};\n\nParser.prototype._handleTRNS = function (length) {\n  this.simpleTransparency();\n  this.read(length, this._parseTRNS.bind(this));\n};\nParser.prototype._parseTRNS = function (data) {\n  this._crc.write(data);\n\n  // palette\n  if (this._colorType === constants.COLORTYPE_PALETTE_COLOR) {\n    if (this._palette.length === 0) {\n      this.error(new Error(\"Transparency chunk must be after palette\"));\n      return;\n    }\n    if (data.length > this._palette.length) {\n      this.error(new Error(\"More transparent colors than palette size\"));\n      return;\n    }\n    for (let i = 0; i < data.length; i++) {\n      this._palette[i][3] = data[i];\n    }\n    this.palette(this._palette);\n  }\n\n  // for colorType 0 (grayscale) and 2 (rgb)\n  // there might be one gray/color defined as transparent\n  if (this._colorType === constants.COLORTYPE_GRAYSCALE) {\n    // grey, 2 bytes\n    this.transColor([data.readUInt16BE(0)]);\n  }\n  if (this._colorType === constants.COLORTYPE_COLOR) {\n    this.transColor([\n      data.readUInt16BE(0),\n      data.readUInt16BE(2),\n      data.readUInt16BE(4),\n    ]);\n  }\n\n  this._handleChunkEnd();\n};\n\nParser.prototype._handleGAMA = function (length) {\n  this.read(length, this._parseGAMA.bind(this));\n};\nParser.prototype._parseGAMA = function (data) {\n  this._crc.write(data);\n  this.gamma(data.readUInt32BE(0) / constants.GAMMA_DIVISION);\n\n  this._handleChunkEnd();\n};\n\nParser.prototype._handleIDAT = function (length) {\n  if (!this._emittedHeadersFinished) {\n    this._emittedHeadersFinished = true;\n    this.headersFinished();\n  }\n  this.read(-length, this._parseIDAT.bind(this, length));\n};\nParser.prototype._parseIDAT = function (length, data) {\n  this._crc.write(data);\n\n  if (\n    this._colorType === constants.COLORTYPE_PALETTE_COLOR &&\n    this._palette.length === 0\n  ) {\n    throw new Error(\"Expected palette not found\");\n  }\n\n  this.inflateData(data);\n  let leftOverLength = length - data.length;\n\n  if (leftOverLength > 0) {\n    this._handleIDAT(leftOverLength);\n  } else {\n    this._handleChunkEnd();\n  }\n};\n\nParser.prototype._handleIEND = function (length) {\n  this.read(length, this._parseIEND.bind(this));\n};\nParser.prototype._parseIEND = function (data) {\n  this._crc.write(data);\n\n  this._hasIEND = true;\n  this._handleChunkEnd();\n\n  if (this.finished) {\n    this.finished();\n  }\n};\n", "\"use strict\";\n\nlet interlaceUtils = require(\"./interlace\");\n\nlet pixelBppMapper = [\n  // 0 - dummy entry\n  function () {},\n\n  // 1 - L\n  // 0: 0, 1: 0, 2: 0, 3: 0xff\n  function (pxData, data, pxPos, rawPos) {\n    if (rawPos === data.length) {\n      throw new Error(\"Ran out of data\");\n    }\n\n    let pixel = data[rawPos];\n    pxData[pxPos] = pixel;\n    pxData[pxPos + 1] = pixel;\n    pxData[pxPos + 2] = pixel;\n    pxData[pxPos + 3] = 0xff;\n  },\n\n  // 2 - LA\n  // 0: 0, 1: 0, 2: 0, 3: 1\n  function (pxData, data, pxPos, rawPos) {\n    if (rawPos + 1 >= data.length) {\n      throw new Error(\"Ran out of data\");\n    }\n\n    let pixel = data[rawPos];\n    pxData[pxPos] = pixel;\n    pxData[pxPos + 1] = pixel;\n    pxData[pxPos + 2] = pixel;\n    pxData[pxPos + 3] = data[rawPos + 1];\n  },\n\n  // 3 - RGB\n  // 0: 0, 1: 1, 2: 2, 3: 0xff\n  function (pxData, data, pxPos, rawPos) {\n    if (rawPos + 2 >= data.length) {\n      throw new Error(\"Ran out of data\");\n    }\n\n    pxData[pxPos] = data[rawPos];\n    pxData[pxPos + 1] = data[rawPos + 1];\n    pxData[pxPos + 2] = data[rawPos + 2];\n    pxData[pxPos + 3] = 0xff;\n  },\n\n  // 4 - RGBA\n  // 0: 0, 1: 1, 2: 2, 3: 3\n  function (pxData, data, pxPos, rawPos) {\n    if (rawPos + 3 >= data.length) {\n      throw new Error(\"Ran out of data\");\n    }\n\n    pxData[pxPos] = data[rawPos];\n    pxData[pxPos + 1] = data[rawPos + 1];\n    pxData[pxPos + 2] = data[rawPos + 2];\n    pxData[pxPos + 3] = data[rawPos + 3];\n  },\n];\n\nlet pixelBppCustomMapper = [\n  // 0 - dummy entry\n  function () {},\n\n  // 1 - L\n  // 0: 0, 1: 0, 2: 0, 3: 0xff\n  function (pxData, pixelData, pxPos, maxBit) {\n    let pixel = pixelData[0];\n    pxData[pxPos] = pixel;\n    pxData[pxPos + 1] = pixel;\n    pxData[pxPos + 2] = pixel;\n    pxData[pxPos + 3] = maxBit;\n  },\n\n  // 2 - LA\n  // 0: 0, 1: 0, 2: 0, 3: 1\n  function (pxData, pixelData, pxPos) {\n    let pixel = pixelData[0];\n    pxData[pxPos] = pixel;\n    pxData[pxPos + 1] = pixel;\n    pxData[pxPos + 2] = pixel;\n    pxData[pxPos + 3] = pixelData[1];\n  },\n\n  // 3 - RGB\n  // 0: 0, 1: 1, 2: 2, 3: 0xff\n  function (pxData, pixelData, pxPos, maxBit) {\n    pxData[pxPos] = pixelData[0];\n    pxData[pxPos + 1] = pixelData[1];\n    pxData[pxPos + 2] = pixelData[2];\n    pxData[pxPos + 3] = maxBit;\n  },\n\n  // 4 - RGBA\n  // 0: 0, 1: 1, 2: 2, 3: 3\n  function (pxData, pixelData, pxPos) {\n    pxData[pxPos] = pixelData[0];\n    pxData[pxPos + 1] = pixelData[1];\n    pxData[pxPos + 2] = pixelData[2];\n    pxData[pxPos + 3] = pixelData[3];\n  },\n];\n\nfunction bitRetriever(data, depth) {\n  let leftOver = [];\n  let i = 0;\n\n  function split() {\n    if (i === data.length) {\n      throw new Error(\"Ran out of data\");\n    }\n    let byte = data[i];\n    i++;\n    let byte8, byte7, byte6, byte5, byte4, byte3, byte2, byte1;\n    switch (depth) {\n      default:\n        throw new Error(\"unrecognised depth\");\n      case 16:\n        byte2 = data[i];\n        i++;\n        leftOver.push((byte << 8) + byte2);\n        break;\n      case 4:\n        byte2 = byte & 0x0f;\n        byte1 = byte >> 4;\n        leftOver.push(byte1, byte2);\n        break;\n      case 2:\n        byte4 = byte & 3;\n        byte3 = (byte >> 2) & 3;\n        byte2 = (byte >> 4) & 3;\n        byte1 = (byte >> 6) & 3;\n        leftOver.push(byte1, byte2, byte3, byte4);\n        break;\n      case 1:\n        byte8 = byte & 1;\n        byte7 = (byte >> 1) & 1;\n        byte6 = (byte >> 2) & 1;\n        byte5 = (byte >> 3) & 1;\n        byte4 = (byte >> 4) & 1;\n        byte3 = (byte >> 5) & 1;\n        byte2 = (byte >> 6) & 1;\n        byte1 = (byte >> 7) & 1;\n        leftOver.push(byte1, byte2, byte3, byte4, byte5, byte6, byte7, byte8);\n        break;\n    }\n  }\n\n  return {\n    get: function (count) {\n      while (leftOver.length < count) {\n        split();\n      }\n      let returner = leftOver.slice(0, count);\n      leftOver = leftOver.slice(count);\n      return returner;\n    },\n    resetAfterLine: function () {\n      leftOver.length = 0;\n    },\n    end: function () {\n      if (i !== data.length) {\n        throw new Error(\"extra data found\");\n      }\n    },\n  };\n}\n\nfunction mapImage8Bit(image, pxData, getPxPos, bpp, data, rawPos) {\n  // eslint-disable-line max-params\n  let imageWidth = image.width;\n  let imageHeight = image.height;\n  let imagePass = image.index;\n  for (let y = 0; y < imageHeight; y++) {\n    for (let x = 0; x < imageWidth; x++) {\n      let pxPos = getPxPos(x, y, imagePass);\n      pixelBppMapper[bpp](pxData, data, pxPos, rawPos);\n      rawPos += bpp; //eslint-disable-line no-param-reassign\n    }\n  }\n  return rawPos;\n}\n\nfunction mapImageCustomBit(image, pxData, getPxPos, bpp, bits, maxBit) {\n  // eslint-disable-line max-params\n  let imageWidth = image.width;\n  let imageHeight = image.height;\n  let imagePass = image.index;\n  for (let y = 0; y < imageHeight; y++) {\n    for (let x = 0; x < imageWidth; x++) {\n      let pixelData = bits.get(bpp);\n      let pxPos = getPxPos(x, y, imagePass);\n      pixelBppCustomMapper[bpp](pxData, pixelData, pxPos, maxBit);\n    }\n    bits.resetAfterLine();\n  }\n}\n\nexports.dataToBitMap = function (data, bitmapInfo) {\n  let width = bitmapInfo.width;\n  let height = bitmapInfo.height;\n  let depth = bitmapInfo.depth;\n  let bpp = bitmapInfo.bpp;\n  let interlace = bitmapInfo.interlace;\n  let bits;\n\n  if (depth !== 8) {\n    bits = bitRetriever(data, depth);\n  }\n  let pxData;\n  if (depth <= 8) {\n    pxData = Buffer.alloc(width * height * 4);\n  } else {\n    pxData = new Uint16Array(width * height * 4);\n  }\n  let maxBit = Math.pow(2, depth) - 1;\n  let rawPos = 0;\n  let images;\n  let getPxPos;\n\n  if (interlace) {\n    images = interlaceUtils.getImagePasses(width, height);\n    getPxPos = interlaceUtils.getInterlaceIterator(width, height);\n  } else {\n    let nonInterlacedPxPos = 0;\n    getPxPos = function () {\n      let returner = nonInterlacedPxPos;\n      nonInterlacedPxPos += 4;\n      return returner;\n    };\n    images = [{ width: width, height: height }];\n  }\n\n  for (let imageIndex = 0; imageIndex < images.length; imageIndex++) {\n    if (depth === 8) {\n      rawPos = mapImage8Bit(\n        images[imageIndex],\n        pxData,\n        getPxPos,\n        bpp,\n        data,\n        rawPos\n      );\n    } else {\n      mapImageCustomBit(\n        images[imageIndex],\n        pxData,\n        getPxPos,\n        bpp,\n        bits,\n        maxBit\n      );\n    }\n  }\n  if (depth === 8) {\n    if (rawPos !== data.length) {\n      throw new Error(\"extra data found\");\n    }\n  } else {\n    bits.end();\n  }\n\n  return pxData;\n};\n", "\"use strict\";\n\nfunction dePalette(indata, outdata, width, height, palette) {\n  let pxPos = 0;\n  // use values from palette\n  for (let y = 0; y < height; y++) {\n    for (let x = 0; x < width; x++) {\n      let color = palette[indata[pxPos]];\n\n      if (!color) {\n        throw new Error(\"index \" + indata[pxPos] + \" not in palette\");\n      }\n\n      for (let i = 0; i < 4; i++) {\n        outdata[pxPos + i] = color[i];\n      }\n      pxPos += 4;\n    }\n  }\n}\n\nfunction replaceTransparentColor(indata, outdata, width, height, transColor) {\n  let pxPos = 0;\n  for (let y = 0; y < height; y++) {\n    for (let x = 0; x < width; x++) {\n      let makeTrans = false;\n\n      if (transColor.length === 1) {\n        if (transColor[0] === indata[pxPos]) {\n          makeTrans = true;\n        }\n      } else if (\n        transColor[0] === indata[pxPos] &&\n        transColor[1] === indata[pxPos + 1] &&\n        transColor[2] === indata[pxPos + 2]\n      ) {\n        makeTrans = true;\n      }\n      if (makeTrans) {\n        for (let i = 0; i < 4; i++) {\n          outdata[pxPos + i] = 0;\n        }\n      }\n      pxPos += 4;\n    }\n  }\n}\n\nfunction scaleDepth(indata, outdata, width, height, depth) {\n  let maxOutSample = 255;\n  let maxInSample = Math.pow(2, depth) - 1;\n  let pxPos = 0;\n\n  for (let y = 0; y < height; y++) {\n    for (let x = 0; x < width; x++) {\n      for (let i = 0; i < 4; i++) {\n        outdata[pxPos + i] = Math.floor(\n          (indata[pxPos + i] * maxOutSample) / maxInSample + 0.5\n        );\n      }\n      pxPos += 4;\n    }\n  }\n}\n\nmodule.exports = function (indata, imageData) {\n  let depth = imageData.depth;\n  let width = imageData.width;\n  let height = imageData.height;\n  let colorType = imageData.colorType;\n  let transColor = imageData.transColor;\n  let palette = imageData.palette;\n\n  let outdata = indata; // only different for 16 bits\n\n  if (colorType === 3) {\n    // paletted\n    dePalette(indata, outdata, width, height, palette);\n  } else {\n    if (transColor) {\n      replaceTransparentColor(indata, outdata, width, height, transColor);\n    }\n    // if it needs scaling\n    if (depth !== 8) {\n      // if we need to change the buffer size\n      if (depth === 16) {\n        outdata = Buffer.alloc(width * height * 4);\n      }\n      scaleDepth(indata, outdata, width, height, depth);\n    }\n  }\n  return outdata;\n};\n", "\"use strict\";\n\nlet util = require(\"util\");\nlet zlib = require(\"zlib\");\nlet ChunkStream = require(\"./chunkstream\");\nlet FilterAsync = require(\"./filter-parse-async\");\nlet Parser = require(\"./parser\");\nlet bitmapper = require(\"./bitmapper\");\nlet formatNormaliser = require(\"./format-normaliser\");\n\nlet ParserAsync = (module.exports = function (options) {\n  ChunkStream.call(this);\n\n  this._parser = new Parser(options, {\n    read: this.read.bind(this),\n    error: this._handleError.bind(this),\n    metadata: this._handleMetaData.bind(this),\n    gamma: this.emit.bind(this, \"gamma\"),\n    palette: this._handlePalette.bind(this),\n    transColor: this._handleTransColor.bind(this),\n    finished: this._finished.bind(this),\n    inflateData: this._inflateData.bind(this),\n    simpleTransparency: this._simpleTransparency.bind(this),\n    headersFinished: this._headersFinished.bind(this),\n  });\n  this._options = options;\n  this.writable = true;\n\n  this._parser.start();\n});\nutil.inherits(ParserAsync, ChunkStream);\n\nParserAsync.prototype._handleError = function (err) {\n  this.emit(\"error\", err);\n\n  this.writable = false;\n\n  this.destroy();\n\n  if (this._inflate && this._inflate.destroy) {\n    this._inflate.destroy();\n  }\n\n  if (this._filter) {\n    this._filter.destroy();\n    // For backward compatibility with Node 7 and below.\n    // Suppress errors due to _inflate calling write() even after\n    // it's destroy()'ed.\n    this._filter.on(\"error\", function () {});\n  }\n\n  this.errord = true;\n};\n\nParserAsync.prototype._inflateData = function (data) {\n  if (!this._inflate) {\n    if (this._bitmapInfo.interlace) {\n      this._inflate = zlib.createInflate();\n\n      this._inflate.on(\"error\", this.emit.bind(this, \"error\"));\n      this._filter.on(\"complete\", this._complete.bind(this));\n\n      this._inflate.pipe(this._filter);\n    } else {\n      let rowSize =\n        ((this._bitmapInfo.width *\n          this._bitmapInfo.bpp *\n          this._bitmapInfo.depth +\n          7) >>\n          3) +\n        1;\n      let imageSize = rowSize * this._bitmapInfo.height;\n      let chunkSize = Math.max(imageSize, zlib.Z_MIN_CHUNK);\n\n      this._inflate = zlib.createInflate({ chunkSize: chunkSize });\n      let leftToInflate = imageSize;\n\n      let emitError = this.emit.bind(this, \"error\");\n      this._inflate.on(\"error\", function (err) {\n        if (!leftToInflate) {\n          return;\n        }\n\n        emitError(err);\n      });\n      this._filter.on(\"complete\", this._complete.bind(this));\n\n      let filterWrite = this._filter.write.bind(this._filter);\n      this._inflate.on(\"data\", function (chunk) {\n        if (!leftToInflate) {\n          return;\n        }\n\n        if (chunk.length > leftToInflate) {\n          chunk = chunk.slice(0, leftToInflate);\n        }\n\n        leftToInflate -= chunk.length;\n\n        filterWrite(chunk);\n      });\n\n      this._inflate.on(\"end\", this._filter.end.bind(this._filter));\n    }\n  }\n  this._inflate.write(data);\n};\n\nParserAsync.prototype._handleMetaData = function (metaData) {\n  this._metaData = metaData;\n  this._bitmapInfo = Object.create(metaData);\n\n  this._filter = new FilterAsync(this._bitmapInfo);\n};\n\nParserAsync.prototype._handleTransColor = function (transColor) {\n  this._bitmapInfo.transColor = transColor;\n};\n\nParserAsync.prototype._handlePalette = function (palette) {\n  this._bitmapInfo.palette = palette;\n};\n\nParserAsync.prototype._simpleTransparency = function () {\n  this._metaData.alpha = true;\n};\n\nParserAsync.prototype._headersFinished = function () {\n  // Up until this point, we don't know if we have a tRNS chunk (alpha)\n  // so we can't emit metadata any earlier\n  this.emit(\"metadata\", this._metaData);\n};\n\nParserAsync.prototype._finished = function () {\n  if (this.errord) {\n    return;\n  }\n\n  if (!this._inflate) {\n    this.emit(\"error\", \"No Inflate block\");\n  } else {\n    // no more data to inflate\n    this._inflate.end();\n  }\n};\n\nParserAsync.prototype._complete = function (filteredData) {\n  if (this.errord) {\n    return;\n  }\n\n  let normalisedBitmapData;\n\n  try {\n    let bitmapData = bitmapper.dataToBitMap(filteredData, this._bitmapInfo);\n\n    normalisedBitmapData = formatNormaliser(bitmapData, this._bitmapInfo);\n    bitmapData = null;\n  } catch (ex) {\n    this._handleError(ex);\n    return;\n  }\n\n  this.emit(\"parsed\", normalisedBitmapData);\n};\n", "\"use strict\";\n\nlet constants = require(\"./constants\");\n\nmodule.exports = function (dataIn, width, height, options) {\n  let outHasAlpha =\n    [constants.COLORTYPE_COLOR_ALPHA, constants.COLORTYPE_ALPHA].indexOf(\n      options.colorType\n    ) !== -1;\n  if (options.colorType === options.inputColorType) {\n    let bigEndian = (function () {\n      let buffer = new ArrayBuffer(2);\n      new DataView(buffer).setInt16(0, 256, true /* littleEndian */);\n      // Int16Array uses the platform's endianness.\n      return new Int16Array(buffer)[0] !== 256;\n    })();\n    // If no need to convert to grayscale and alpha is present/absent in both, take a fast route\n    if (options.bitDepth === 8 || (options.bitDepth === 16 && bigEndian)) {\n      return dataIn;\n    }\n  }\n\n  // map to a UInt16 array if data is 16bit, fix endianness below\n  let data = options.bitDepth !== 16 ? dataIn : new Uint16Array(dataIn.buffer);\n\n  let maxValue = 255;\n  let inBpp = constants.COLORTYPE_TO_BPP_MAP[options.inputColorType];\n  if (inBpp === 4 && !options.inputHasAlpha) {\n    inBpp = 3;\n  }\n  let outBpp = constants.COLORTYPE_TO_BPP_MAP[options.colorType];\n  if (options.bitDepth === 16) {\n    maxValue = 65535;\n    outBpp *= 2;\n  }\n  let outData = Buffer.alloc(width * height * outBpp);\n\n  let inIndex = 0;\n  let outIndex = 0;\n\n  let bgColor = options.bgColor || {};\n  if (bgColor.red === undefined) {\n    bgColor.red = maxValue;\n  }\n  if (bgColor.green === undefined) {\n    bgColor.green = maxValue;\n  }\n  if (bgColor.blue === undefined) {\n    bgColor.blue = maxValue;\n  }\n\n  function getRGBA() {\n    let red;\n    let green;\n    let blue;\n    let alpha = maxValue;\n    switch (options.inputColorType) {\n      case constants.COLORTYPE_COLOR_ALPHA:\n        alpha = data[inIndex + 3];\n        red = data[inIndex];\n        green = data[inIndex + 1];\n        blue = data[inIndex + 2];\n        break;\n      case constants.COLORTYPE_COLOR:\n        red = data[inIndex];\n        green = data[inIndex + 1];\n        blue = data[inIndex + 2];\n        break;\n      case constants.COLORTYPE_ALPHA:\n        alpha = data[inIndex + 1];\n        red = data[inIndex];\n        green = red;\n        blue = red;\n        break;\n      case constants.COLORTYPE_GRAYSCALE:\n        red = data[inIndex];\n        green = red;\n        blue = red;\n        break;\n      default:\n        throw new Error(\n          \"input color type:\" +\n            options.inputColorType +\n            \" is not supported at present\"\n        );\n    }\n\n    if (options.inputHasAlpha) {\n      if (!outHasAlpha) {\n        alpha /= maxValue;\n        red = Math.min(\n          Math.max(Math.round((1 - alpha) * bgColor.red + alpha * red), 0),\n          maxValue\n        );\n        green = Math.min(\n          Math.max(Math.round((1 - alpha) * bgColor.green + alpha * green), 0),\n          maxValue\n        );\n        blue = Math.min(\n          Math.max(Math.round((1 - alpha) * bgColor.blue + alpha * blue), 0),\n          maxValue\n        );\n      }\n    }\n    return { red: red, green: green, blue: blue, alpha: alpha };\n  }\n\n  for (let y = 0; y < height; y++) {\n    for (let x = 0; x < width; x++) {\n      let rgba = getRGBA(data, inIndex);\n\n      switch (options.colorType) {\n        case constants.COLORTYPE_COLOR_ALPHA:\n        case constants.COLORTYPE_COLOR:\n          if (options.bitDepth === 8) {\n            outData[outIndex] = rgba.red;\n            outData[outIndex + 1] = rgba.green;\n            outData[outIndex + 2] = rgba.blue;\n            if (outHasAlpha) {\n              outData[outIndex + 3] = rgba.alpha;\n            }\n          } else {\n            outData.writeUInt16BE(rgba.red, outIndex);\n            outData.writeUInt16BE(rgba.green, outIndex + 2);\n            outData.writeUInt16BE(rgba.blue, outIndex + 4);\n            if (outHasAlpha) {\n              outData.writeUInt16BE(rgba.alpha, outIndex + 6);\n            }\n          }\n          break;\n        case constants.COLORTYPE_ALPHA:\n        case constants.COLORTYPE_GRAYSCALE: {\n          // Convert to grayscale and alpha\n          let grayscale = (rgba.red + rgba.green + rgba.blue) / 3;\n          if (options.bitDepth === 8) {\n            outData[outIndex] = grayscale;\n            if (outHasAlpha) {\n              outData[outIndex + 1] = rgba.alpha;\n            }\n          } else {\n            outData.writeUInt16BE(grayscale, outIndex);\n            if (outHasAlpha) {\n              outData.writeUInt16BE(rgba.alpha, outIndex + 2);\n            }\n          }\n          break;\n        }\n        default:\n          throw new Error(\"unrecognised color Type \" + options.colorType);\n      }\n\n      inIndex += inBpp;\n      outIndex += outBpp;\n    }\n  }\n\n  return outData;\n};\n", "\"use strict\";\n\nlet paethPredictor = require(\"./paeth-predictor\");\n\nfunction filterNone(pxData, pxPos, byteWidth, rawData, rawPos) {\n  for (let x = 0; x < byteWidth; x++) {\n    rawData[rawPos + x] = pxData[pxPos + x];\n  }\n}\n\nfunction filterSumNone(pxData, pxPos, byteWidth) {\n  let sum = 0;\n  let length = pxPos + byteWidth;\n\n  for (let i = pxPos; i < length; i++) {\n    sum += Math.abs(pxData[i]);\n  }\n  return sum;\n}\n\nfunction filterSub(pxData, pxPos, byteWidth, rawData, rawPos, bpp) {\n  for (let x = 0; x < byteWidth; x++) {\n    let left = x >= bpp ? pxData[pxPos + x - bpp] : 0;\n    let val = pxData[pxPos + x] - left;\n\n    rawData[rawPos + x] = val;\n  }\n}\n\nfunction filterSumSub(pxData, pxPos, byteWidth, bpp) {\n  let sum = 0;\n  for (let x = 0; x < byteWidth; x++) {\n    let left = x >= bpp ? pxData[pxPos + x - bpp] : 0;\n    let val = pxData[pxPos + x] - left;\n\n    sum += Math.abs(val);\n  }\n\n  return sum;\n}\n\nfunction filterUp(pxData, pxPos, byteWidth, rawData, rawPos) {\n  for (let x = 0; x < byteWidth; x++) {\n    let up = pxPos > 0 ? pxData[pxPos + x - byteWidth] : 0;\n    let val = pxData[pxPos + x] - up;\n\n    rawData[rawPos + x] = val;\n  }\n}\n\nfunction filterSumUp(pxData, pxPos, byteWidth) {\n  let sum = 0;\n  let length = pxPos + byteWidth;\n  for (let x = pxPos; x < length; x++) {\n    let up = pxPos > 0 ? pxData[x - byteWidth] : 0;\n    let val = pxData[x] - up;\n\n    sum += Math.abs(val);\n  }\n\n  return sum;\n}\n\nfunction filterAvg(pxData, pxPos, byteWidth, rawData, rawPos, bpp) {\n  for (let x = 0; x < byteWidth; x++) {\n    let left = x >= bpp ? pxData[pxPos + x - bpp] : 0;\n    let up = pxPos > 0 ? pxData[pxPos + x - byteWidth] : 0;\n    let val = pxData[pxPos + x] - ((left + up) >> 1);\n\n    rawData[rawPos + x] = val;\n  }\n}\n\nfunction filterSumAvg(pxData, pxPos, byteWidth, bpp) {\n  let sum = 0;\n  for (let x = 0; x < byteWidth; x++) {\n    let left = x >= bpp ? pxData[pxPos + x - bpp] : 0;\n    let up = pxPos > 0 ? pxData[pxPos + x - byteWidth] : 0;\n    let val = pxData[pxPos + x] - ((left + up) >> 1);\n\n    sum += Math.abs(val);\n  }\n\n  return sum;\n}\n\nfunction filterPaeth(pxData, pxPos, byteWidth, rawData, rawPos, bpp) {\n  for (let x = 0; x < byteWidth; x++) {\n    let left = x >= bpp ? pxData[pxPos + x - bpp] : 0;\n    let up = pxPos > 0 ? pxData[pxPos + x - byteWidth] : 0;\n    let upleft =\n      pxPos > 0 && x >= bpp ? pxData[pxPos + x - (byteWidth + bpp)] : 0;\n    let val = pxData[pxPos + x] - paethPredictor(left, up, upleft);\n\n    rawData[rawPos + x] = val;\n  }\n}\n\nfunction filterSumPaeth(pxData, pxPos, byteWidth, bpp) {\n  let sum = 0;\n  for (let x = 0; x < byteWidth; x++) {\n    let left = x >= bpp ? pxData[pxPos + x - bpp] : 0;\n    let up = pxPos > 0 ? pxData[pxPos + x - byteWidth] : 0;\n    let upleft =\n      pxPos > 0 && x >= bpp ? pxData[pxPos + x - (byteWidth + bpp)] : 0;\n    let val = pxData[pxPos + x] - paethPredictor(left, up, upleft);\n\n    sum += Math.abs(val);\n  }\n\n  return sum;\n}\n\nlet filters = {\n  0: filterNone,\n  1: filterSub,\n  2: filterUp,\n  3: filterAvg,\n  4: filterPaeth,\n};\n\nlet filterSums = {\n  0: filterSumNone,\n  1: filterSumSub,\n  2: filterSumUp,\n  3: filterSumAvg,\n  4: filterSumPaeth,\n};\n\nmodule.exports = function (pxData, width, height, options, bpp) {\n  let filterTypes;\n  if (!(\"filterType\" in options) || options.filterType === -1) {\n    filterTypes = [0, 1, 2, 3, 4];\n  } else if (typeof options.filterType === \"number\") {\n    filterTypes = [options.filterType];\n  } else {\n    throw new Error(\"unrecognised filter types\");\n  }\n\n  if (options.bitDepth === 16) {\n    bpp *= 2;\n  }\n  let byteWidth = width * bpp;\n  let rawPos = 0;\n  let pxPos = 0;\n  let rawData = Buffer.alloc((byteWidth + 1) * height);\n\n  let sel = filterTypes[0];\n\n  for (let y = 0; y < height; y++) {\n    if (filterTypes.length > 1) {\n      // find best filter for this line (with lowest sum of values)\n      let min = Infinity;\n\n      for (let i = 0; i < filterTypes.length; i++) {\n        let sum = filterSums[filterTypes[i]](pxData, pxPos, byteWidth, bpp);\n        if (sum < min) {\n          sel = filterTypes[i];\n          min = sum;\n        }\n      }\n    }\n\n    rawData[rawPos] = sel;\n    rawPos++;\n    filters[sel](pxData, pxPos, byteWidth, rawData, rawPos, bpp);\n    rawPos += byteWidth;\n    pxPos += byteWidth;\n  }\n  return rawData;\n};\n", "\"use strict\";\n\nlet constants = require(\"./constants\");\nlet CrcStream = require(\"./crc\");\nlet bitPacker = require(\"./bitpacker\");\nlet filter = require(\"./filter-pack\");\nlet zlib = require(\"zlib\");\n\nlet Packer = (module.exports = function (options) {\n  this._options = options;\n\n  options.deflateChunkSize = options.deflateChunkSize || 32 * 1024;\n  options.deflateLevel =\n    options.deflateLevel != null ? options.deflateLevel : 9;\n  options.deflateStrategy =\n    options.deflateStrategy != null ? options.deflateStrategy : 3;\n  options.inputHasAlpha =\n    options.inputHasAlpha != null ? options.inputHasAlpha : true;\n  options.deflateFactory = options.deflateFactory || zlib.createDeflate;\n  options.bitDepth = options.bitDepth || 8;\n  // This is outputColorType\n  options.colorType =\n    typeof options.colorType === \"number\"\n      ? options.colorType\n      : constants.COLORTYPE_COLOR_ALPHA;\n  options.inputColorType =\n    typeof options.inputColorType === \"number\"\n      ? options.inputColorType\n      : constants.COLORTYPE_COLOR_ALPHA;\n\n  if (\n    [\n      constants.COLORTYPE_GRAYSCALE,\n      constants.COLORTYPE_COLOR,\n      constants.COLORTYPE_COLOR_ALPHA,\n      constants.COLORTYPE_ALPHA,\n    ].indexOf(options.colorType) === -1\n  ) {\n    throw new Error(\n      \"option color type:\" + options.colorType + \" is not supported at present\"\n    );\n  }\n  if (\n    [\n      constants.COLORTYPE_GRAYSCALE,\n      constants.COLORTYPE_COLOR,\n      constants.COLORTYPE_COLOR_ALPHA,\n      constants.COLORTYPE_ALPHA,\n    ].indexOf(options.inputColorType) === -1\n  ) {\n    throw new Error(\n      \"option input color type:\" +\n        options.inputColorType +\n        \" is not supported at present\"\n    );\n  }\n  if (options.bitDepth !== 8 && options.bitDepth !== 16) {\n    throw new Error(\n      \"option bit depth:\" + options.bitDepth + \" is not supported at present\"\n    );\n  }\n});\n\nPacker.prototype.getDeflateOptions = function () {\n  return {\n    chunkSize: this._options.deflateChunkSize,\n    level: this._options.deflateLevel,\n    strategy: this._options.deflateStrategy,\n  };\n};\n\nPacker.prototype.createDeflate = function () {\n  return this._options.deflateFactory(this.getDeflateOptions());\n};\n\nPacker.prototype.filterData = function (data, width, height) {\n  // convert to correct format for filtering (e.g. right bpp and bit depth)\n  let packedData = bitPacker(data, width, height, this._options);\n\n  // filter pixel data\n  let bpp = constants.COLORTYPE_TO_BPP_MAP[this._options.colorType];\n  let filteredData = filter(packedData, width, height, this._options, bpp);\n  return filteredData;\n};\n\nPacker.prototype._packChunk = function (type, data) {\n  let len = data ? data.length : 0;\n  let buf = Buffer.alloc(len + 12);\n\n  buf.writeUInt32BE(len, 0);\n  buf.writeUInt32BE(type, 4);\n\n  if (data) {\n    data.copy(buf, 8);\n  }\n\n  buf.writeInt32BE(\n    CrcStream.crc32(buf.slice(4, buf.length - 4)),\n    buf.length - 4\n  );\n  return buf;\n};\n\nPacker.prototype.packGAMA = function (gamma) {\n  let buf = Buffer.alloc(4);\n  buf.writeUInt32BE(Math.floor(gamma * constants.GAMMA_DIVISION), 0);\n  return this._packChunk(constants.TYPE_gAMA, buf);\n};\n\nPacker.prototype.packIHDR = function (width, height) {\n  let buf = Buffer.alloc(13);\n  buf.writeUInt32BE(width, 0);\n  buf.writeUInt32BE(height, 4);\n  buf[8] = this._options.bitDepth; // Bit depth\n  buf[9] = this._options.colorType; // colorType\n  buf[10] = 0; // compression\n  buf[11] = 0; // filter\n  buf[12] = 0; // interlace\n\n  return this._packChunk(constants.TYPE_IHDR, buf);\n};\n\nPacker.prototype.packIDAT = function (data) {\n  return this._packChunk(constants.TYPE_IDAT, data);\n};\n\nPacker.prototype.packIEND = function () {\n  return this._packChunk(constants.TYPE_IEND, null);\n};\n", "\"use strict\";\n\nlet util = require(\"util\");\nlet Stream = require(\"stream\");\nlet constants = require(\"./constants\");\nlet Packer = require(\"./packer\");\n\nlet PackerAsync = (module.exports = function (opt) {\n  Stream.call(this);\n\n  let options = opt || {};\n\n  this._packer = new Packer(options);\n  this._deflate = this._packer.createDeflate();\n\n  this.readable = true;\n});\nutil.inherits(PackerAsync, Stream);\n\nPackerAsync.prototype.pack = function (data, width, height, gamma) {\n  // Signature\n  this.emit(\"data\", Buffer.from(constants.PNG_SIGNATURE));\n  this.emit(\"data\", this._packer.packIHDR(width, height));\n\n  if (gamma) {\n    this.emit(\"data\", this._packer.packGAMA(gamma));\n  }\n\n  let filteredData = this._packer.filterData(data, width, height);\n\n  // compress it\n  this._deflate.on(\"error\", this.emit.bind(this, \"error\"));\n\n  this._deflate.on(\n    \"data\",\n    function (compressedData) {\n      this.emit(\"data\", this._packer.packIDAT(compressedData));\n    }.bind(this)\n  );\n\n  this._deflate.on(\n    \"end\",\n    function () {\n      this.emit(\"data\", this._packer.packIEND());\n      this.emit(\"end\");\n    }.bind(this)\n  );\n\n  this._deflate.end(filteredData);\n};\n", "\"use strict\";\n\nlet assert = require(\"assert\").ok;\nlet zlib = require(\"zlib\");\nlet util = require(\"util\");\n\nlet kMaxLength = require(\"buffer\").kMaxLength;\n\nfunction Inflate(opts) {\n  if (!(this instanceof Inflate)) {\n    return new Inflate(opts);\n  }\n\n  if (opts && opts.chunkSize < zlib.Z_MIN_CHUNK) {\n    opts.chunkSize = zlib.Z_MIN_CHUNK;\n  }\n\n  zlib.Inflate.call(this, opts);\n\n  // Node 8 --> 9 compatibility check\n  this._offset = this._offset === undefined ? this._outOffset : this._offset;\n  this._buffer = this._buffer || this._outBuffer;\n\n  if (opts && opts.maxLength != null) {\n    this._maxLength = opts.maxLength;\n  }\n}\n\nfunction createInflate(opts) {\n  return new Inflate(opts);\n}\n\nfunction _close(engine, callback) {\n  if (callback) {\n    process.nextTick(callback);\n  }\n\n  // Caller may invoke .close after a zlib error (which will null _handle).\n  if (!engine._handle) {\n    return;\n  }\n\n  engine._handle.close();\n  engine._handle = null;\n}\n\nInflate.prototype._processChunk = function (chunk, flushFlag, asyncCb) {\n  if (typeof asyncCb === \"function\") {\n    return zlib.Inflate._processChunk.call(this, chunk, flushFlag, asyncCb);\n  }\n\n  let self = this;\n\n  let availInBefore = chunk && chunk.length;\n  let availOutBefore = this._chunkSize - this._offset;\n  let leftToInflate = this._maxLength;\n  let inOff = 0;\n\n  let buffers = [];\n  let nread = 0;\n\n  let error;\n  this.on(\"error\", function (err) {\n    error = err;\n  });\n\n  function handleChunk(availInAfter, availOutAfter) {\n    if (self._hadError) {\n      return;\n    }\n\n    let have = availOutBefore - availOutAfter;\n    assert(have >= 0, \"have should not go down\");\n\n    if (have > 0) {\n      let out = self._buffer.slice(self._offset, self._offset + have);\n      self._offset += have;\n\n      if (out.length > leftToInflate) {\n        out = out.slice(0, leftToInflate);\n      }\n\n      buffers.push(out);\n      nread += out.length;\n      leftToInflate -= out.length;\n\n      if (leftToInflate === 0) {\n        return false;\n      }\n    }\n\n    if (availOutAfter === 0 || self._offset >= self._chunkSize) {\n      availOutBefore = self._chunkSize;\n      self._offset = 0;\n      self._buffer = Buffer.allocUnsafe(self._chunkSize);\n    }\n\n    if (availOutAfter === 0) {\n      inOff += availInBefore - availInAfter;\n      availInBefore = availInAfter;\n\n      return true;\n    }\n\n    return false;\n  }\n\n  assert(this._handle, \"zlib binding closed\");\n  let res;\n  do {\n    res = this._handle.writeSync(\n      flushFlag,\n      chunk, // in\n      inOff, // in_off\n      availInBefore, // in_len\n      this._buffer, // out\n      this._offset, //out_off\n      availOutBefore\n    ); // out_len\n    // Node 8 --> 9 compatibility check\n    res = res || this._writeState;\n  } while (!this._hadError && handleChunk(res[0], res[1]));\n\n  if (this._hadError) {\n    throw error;\n  }\n\n  if (nread >= kMaxLength) {\n    _close(this);\n    throw new RangeError(\n      \"Cannot create final Buffer. It would be larger than 0x\" +\n        kMaxLength.toString(16) +\n        \" bytes\"\n    );\n  }\n\n  let buf = Buffer.concat(buffers, nread);\n  _close(this);\n\n  return buf;\n};\n\nutil.inherits(Inflate, zlib.Inflate);\n\nfunction zlibBufferSync(engine, buffer) {\n  if (typeof buffer === \"string\") {\n    buffer = Buffer.from(buffer);\n  }\n  if (!(buffer instanceof Buffer)) {\n    throw new TypeError(\"Not a string or buffer\");\n  }\n\n  let flushFlag = engine._finishFlushFlag;\n  if (flushFlag == null) {\n    flushFlag = zlib.Z_FINISH;\n  }\n\n  return engine._processChunk(buffer, flushFlag);\n}\n\nfunction inflateSync(buffer, opts) {\n  return zlibBufferSync(new Inflate(opts), buffer);\n}\n\nmodule.exports = exports = inflateSync;\nexports.Inflate = Inflate;\nexports.createInflate = createInflate;\nexports.inflateSync = inflateSync;\n", "\"use strict\";\n\nlet SyncReader = (module.exports = function (buffer) {\n  this._buffer = buffer;\n  this._reads = [];\n});\n\nSyncReader.prototype.read = function (length, callback) {\n  this._reads.push({\n    length: Math.abs(length), // if length < 0 then at most this length\n    allowLess: length < 0,\n    func: callback,\n  });\n};\n\nSyncReader.prototype.process = function () {\n  // as long as there is any data and read requests\n  while (this._reads.length > 0 && this._buffer.length) {\n    let read = this._reads[0];\n\n    if (\n      this._buffer.length &&\n      (this._buffer.length >= read.length || read.allowLess)\n    ) {\n      // ok there is any data so that we can satisfy this request\n      this._reads.shift(); // == read\n\n      let buf = this._buffer;\n\n      this._buffer = buf.slice(read.length);\n\n      read.func.call(this, buf.slice(0, read.length));\n    } else {\n      break;\n    }\n  }\n\n  if (this._reads.length > 0) {\n    return new Error(\"There are some read requests waitng on finished stream\");\n  }\n\n  if (this._buffer.length > 0) {\n    return new Error(\"unrecognised content at end of stream\");\n  }\n};\n", "\"use strict\";\n\nlet SyncReader = require(\"./sync-reader\");\nlet Filter = require(\"./filter-parse\");\n\nexports.process = function (inBuffer, bitmapInfo) {\n  let outBuffers = [];\n  let reader = new SyncReader(inBuffer);\n  let filter = new Filter(bitmapInfo, {\n    read: reader.read.bind(reader),\n    write: function (bufferPart) {\n      outBuffers.push(bufferPart);\n    },\n    complete: function () {},\n  });\n\n  filter.start();\n  reader.process();\n\n  return Buffer.concat(outBuffers);\n};\n", "\"use strict\";\n\nlet hasSyncZlib = true;\nlet zlib = require(\"zlib\");\nlet inflateSync = require(\"./sync-inflate\");\nif (!zlib.deflateSync) {\n  hasSyncZlib = false;\n}\nlet SyncReader = require(\"./sync-reader\");\nlet FilterSync = require(\"./filter-parse-sync\");\nlet Parser = require(\"./parser\");\nlet bitmapper = require(\"./bitmapper\");\nlet formatNormaliser = require(\"./format-normaliser\");\n\nmodule.exports = function (buffer, options) {\n  if (!hasSyncZlib) {\n    throw new Error(\n      \"To use the sync capability of this library in old node versions, please pin pngjs to v2.3.0\"\n    );\n  }\n\n  let err;\n  function handleError(_err_) {\n    err = _err_;\n  }\n\n  let metaData;\n  function handleMetaData(_metaData_) {\n    metaData = _metaData_;\n  }\n\n  function handleTransColor(transColor) {\n    metaData.transColor = transColor;\n  }\n\n  function handlePalette(palette) {\n    metaData.palette = palette;\n  }\n\n  function handleSimpleTransparency() {\n    metaData.alpha = true;\n  }\n\n  let gamma;\n  function handleGamma(_gamma_) {\n    gamma = _gamma_;\n  }\n\n  let inflateDataList = [];\n  function handleInflateData(inflatedData) {\n    inflateDataList.push(inflatedData);\n  }\n\n  let reader = new SyncReader(buffer);\n\n  let parser = new Parser(options, {\n    read: reader.read.bind(reader),\n    error: handleError,\n    metadata: handleMetaData,\n    gamma: handleGamma,\n    palette: handlePalette,\n    transColor: handleTransColor,\n    inflateData: handleInflateData,\n    simpleTransparency: handleSimpleTransparency,\n  });\n\n  parser.start();\n  reader.process();\n\n  if (err) {\n    throw err;\n  }\n\n  //join together the inflate datas\n  let inflateData = Buffer.concat(inflateDataList);\n  inflateDataList.length = 0;\n\n  let inflatedData;\n  if (metaData.interlace) {\n    inflatedData = zlib.inflateSync(inflateData);\n  } else {\n    let rowSize =\n      ((metaData.width * metaData.bpp * metaData.depth + 7) >> 3) + 1;\n    let imageSize = rowSize * metaData.height;\n    inflatedData = inflateSync(inflateData, {\n      chunkSize: imageSize,\n      maxLength: imageSize,\n    });\n  }\n  inflateData = null;\n\n  if (!inflatedData || !inflatedData.length) {\n    throw new Error(\"bad png - invalid inflate data response\");\n  }\n\n  let unfilteredData = FilterSync.process(inflatedData, metaData);\n  inflateData = null;\n\n  let bitmapData = bitmapper.dataToBitMap(unfilteredData, metaData);\n  unfilteredData = null;\n\n  let normalisedBitmapData = formatNormaliser(bitmapData, metaData);\n\n  metaData.data = normalisedBitmapData;\n  metaData.gamma = gamma || 0;\n\n  return metaData;\n};\n", "\"use strict\";\n\nlet hasSyncZlib = true;\nlet zlib = require(\"zlib\");\nif (!zlib.deflateSync) {\n  hasSyncZlib = false;\n}\nlet constants = require(\"./constants\");\nlet Packer = require(\"./packer\");\n\nmodule.exports = function (metaData, opt) {\n  if (!hasSyncZlib) {\n    throw new Error(\n      \"To use the sync capability of this library in old node versions, please pin pngjs to v2.3.0\"\n    );\n  }\n\n  let options = opt || {};\n\n  let packer = new Packer(options);\n\n  let chunks = [];\n\n  // Signature\n  chunks.push(Buffer.from(constants.PNG_SIGNATURE));\n\n  // Header\n  chunks.push(packer.packIHDR(metaData.width, metaData.height));\n\n  if (metaData.gamma) {\n    chunks.push(packer.packGAMA(metaData.gamma));\n  }\n\n  let filteredData = packer.filterData(\n    metaData.data,\n    metaData.width,\n    metaData.height\n  );\n\n  // compress it\n  let compressedData = zlib.deflateSync(\n    filteredData,\n    packer.getDeflateOptions()\n  );\n  filteredData = null;\n\n  if (!compressedData || !compressedData.length) {\n    throw new Error(\"bad png - invalid compressed data response\");\n  }\n  chunks.push(packer.packIDAT(compressedData));\n\n  // End\n  chunks.push(packer.packIEND());\n\n  return Buffer.concat(chunks);\n};\n", "\"use strict\";\n\nlet parse = require(\"./parser-sync\");\nlet pack = require(\"./packer-sync\");\n\nexports.read = function (buffer, options) {\n  return parse(buffer, options || {});\n};\n\nexports.write = function (png, options) {\n  return pack(png, options);\n};\n", "\"use strict\";\n\nlet util = require(\"util\");\nlet Stream = require(\"stream\");\nlet Parser = require(\"./parser-async\");\nlet Packer = require(\"./packer-async\");\nlet PNGSync = require(\"./png-sync\");\n\nlet PNG = (exports.PNG = function (options) {\n  Stream.call(this);\n\n  options = options || {}; // eslint-disable-line no-param-reassign\n\n  // coerce pixel dimensions to integers (also coerces undefined -> 0):\n  this.width = options.width | 0;\n  this.height = options.height | 0;\n\n  this.data =\n    this.width > 0 && this.height > 0\n      ? Buffer.alloc(4 * this.width * this.height)\n      : null;\n\n  if (options.fill && this.data) {\n    this.data.fill(0);\n  }\n\n  this.gamma = 0;\n  this.readable = this.writable = true;\n\n  this._parser = new Parser(options);\n\n  this._parser.on(\"error\", this.emit.bind(this, \"error\"));\n  this._parser.on(\"close\", this._handleClose.bind(this));\n  this._parser.on(\"metadata\", this._metadata.bind(this));\n  this._parser.on(\"gamma\", this._gamma.bind(this));\n  this._parser.on(\n    \"parsed\",\n    function (data) {\n      this.data = data;\n      this.emit(\"parsed\", data);\n    }.bind(this)\n  );\n\n  this._packer = new Packer(options);\n  this._packer.on(\"data\", this.emit.bind(this, \"data\"));\n  this._packer.on(\"end\", this.emit.bind(this, \"end\"));\n  this._parser.on(\"close\", this._handleClose.bind(this));\n  this._packer.on(\"error\", this.emit.bind(this, \"error\"));\n});\nutil.inherits(PNG, Stream);\n\nPNG.sync = PNGSync;\n\nPNG.prototype.pack = function () {\n  if (!this.data || !this.data.length) {\n    this.emit(\"error\", \"No data provided\");\n    return this;\n  }\n\n  process.nextTick(\n    function () {\n      this._packer.pack(this.data, this.width, this.height, this.gamma);\n    }.bind(this)\n  );\n\n  return this;\n};\n\nPNG.prototype.parse = function (data, callback) {\n  if (callback) {\n    let onParsed, onError;\n\n    onParsed = function (parsedData) {\n      this.removeListener(\"error\", onError);\n\n      this.data = parsedData;\n      callback(null, this);\n    }.bind(this);\n\n    onError = function (err) {\n      this.removeListener(\"parsed\", onParsed);\n\n      callback(err, null);\n    }.bind(this);\n\n    this.once(\"parsed\", onParsed);\n    this.once(\"error\", onError);\n  }\n\n  this.end(data);\n  return this;\n};\n\nPNG.prototype.write = function (data) {\n  this._parser.write(data);\n  return true;\n};\n\nPNG.prototype.end = function (data) {\n  this._parser.end(data);\n};\n\nPNG.prototype._metadata = function (metadata) {\n  this.width = metadata.width;\n  this.height = metadata.height;\n\n  this.emit(\"metadata\", metadata);\n};\n\nPNG.prototype._gamma = function (gamma) {\n  this.gamma = gamma;\n};\n\nPNG.prototype._handleClose = function () {\n  if (!this._parser.writable && !this._packer.readable) {\n    this.emit(\"close\");\n  }\n};\n\nPNG.bitblt = function (src, dst, srcX, srcY, width, height, deltaX, deltaY) {\n  // eslint-disable-line max-params\n  // coerce pixel dimensions to integers (also coerces undefined -> 0):\n  /* eslint-disable no-param-reassign */\n  srcX |= 0;\n  srcY |= 0;\n  width |= 0;\n  height |= 0;\n  deltaX |= 0;\n  deltaY |= 0;\n  /* eslint-enable no-param-reassign */\n\n  if (\n    srcX > src.width ||\n    srcY > src.height ||\n    srcX + width > src.width ||\n    srcY + height > src.height\n  ) {\n    throw new Error(\"bitblt reading outside image\");\n  }\n\n  if (\n    deltaX > dst.width ||\n    deltaY > dst.height ||\n    deltaX + width > dst.width ||\n    deltaY + height > dst.height\n  ) {\n    throw new Error(\"bitblt writing outside image\");\n  }\n\n  for (let y = 0; y < height; y++) {\n    src.data.copy(\n      dst.data,\n      ((deltaY + y) * dst.width + deltaX) << 2,\n      ((srcY + y) * src.width + srcX) << 2,\n      ((srcY + y) * src.width + srcX + width) << 2\n    );\n  }\n};\n\nPNG.prototype.bitblt = function (\n  dst,\n  srcX,\n  srcY,\n  width,\n  height,\n  deltaX,\n  deltaY\n) {\n  // eslint-disable-line max-params\n\n  PNG.bitblt(this, dst, srcX, srcY, width, height, deltaX, deltaY);\n  return this;\n};\n\nPNG.adjustGamma = function (src) {\n  if (src.gamma) {\n    for (let y = 0; y < src.height; y++) {\n      for (let x = 0; x < src.width; x++) {\n        let idx = (src.width * y + x) << 2;\n\n        for (let i = 0; i < 3; i++) {\n          let sample = src.data[idx + i] / 255;\n          sample = Math.pow(sample, 1 / 2.2 / src.gamma);\n          src.data[idx + i] = Math.round(sample * 255);\n        }\n      }\n    }\n    src.gamma = 0;\n  }\n};\n\nPNG.prototype.adjustGamma = function () {\n  PNG.adjustGamma(this);\n};\n", "function hex2rgba (hex) {\n  if (typeof hex === 'number') {\n    hex = hex.toString()\n  }\n\n  if (typeof hex !== 'string') {\n    throw new Error('Color should be defined as hex string')\n  }\n\n  let hexCode = hex.slice().replace('#', '').split('')\n  if (hexCode.length < 3 || hexCode.length === 5 || hexCode.length > 8) {\n    throw new Error('Invalid hex color: ' + hex)\n  }\n\n  // Convert from short to long form (fff -> ffffff)\n  if (hexCode.length === 3 || hexCode.length === 4) {\n    hexCode = Array.prototype.concat.apply([], hexCode.map(function (c) {\n      return [c, c]\n    }))\n  }\n\n  // Add default alpha value\n  if (hexCode.length === 6) hexCode.push('F', 'F')\n\n  const hexValue = parseInt(hexCode.join(''), 16)\n\n  return {\n    r: (hexValue >> 24) & 255,\n    g: (hexValue >> 16) & 255,\n    b: (hexValue >> 8) & 255,\n    a: hexValue & 255,\n    hex: '#' + hexCode.slice(0, 6).join('')\n  }\n}\n\nexports.getOptions = function getOptions (options) {\n  if (!options) options = {}\n  if (!options.color) options.color = {}\n\n  const margin = typeof options.margin === 'undefined' ||\n    options.margin === null ||\n    options.margin < 0\n    ? 4\n    : options.margin\n\n  const width = options.width && options.width >= 21 ? options.width : undefined\n  const scale = options.scale || 4\n\n  return {\n    width: width,\n    scale: width ? 4 : scale,\n    margin: margin,\n    color: {\n      dark: hex2rgba(options.color.dark || '#000000ff'),\n      light: hex2rgba(options.color.light || '#ffffffff')\n    },\n    type: options.type,\n    rendererOpts: options.rendererOpts || {}\n  }\n}\n\nexports.getScale = function getScale (qrSize, opts) {\n  return opts.width && opts.width >= qrSize + opts.margin * 2\n    ? opts.width / (qrSize + opts.margin * 2)\n    : opts.scale\n}\n\nexports.getImageWidth = function getImageWidth (qrSize, opts) {\n  const scale = exports.getScale(qrSize, opts)\n  return Math.floor((qrSize + opts.margin * 2) * scale)\n}\n\nexports.qrToImageData = function qrToImageData (imgData, qr, opts) {\n  const size = qr.modules.size\n  const data = qr.modules.data\n  const scale = exports.getScale(size, opts)\n  const symbolSize = Math.floor((size + opts.margin * 2) * scale)\n  const scaledMargin = opts.margin * scale\n  const palette = [opts.color.light, opts.color.dark]\n\n  for (let i = 0; i < symbolSize; i++) {\n    for (let j = 0; j < symbolSize; j++) {\n      let posDst = (i * symbolSize + j) * 4\n      let pxColor = opts.color.light\n\n      if (i >= scaledMargin && j >= scaledMargin &&\n        i < symbolSize - scaledMargin && j < symbolSize - scaledMargin) {\n        const iSrc = Math.floor((i - scaledMargin) / scale)\n        const jSrc = Math.floor((j - scaledMargin) / scale)\n        pxColor = palette[data[iSrc * size + jSrc] ? 1 : 0]\n      }\n\n      imgData[posDst++] = pxColor.r\n      imgData[posDst++] = pxColor.g\n      imgData[posDst++] = pxColor.b\n      imgData[posDst] = pxColor.a\n    }\n  }\n}\n", "const fs = require('fs')\nconst PNG = require('pngjs').PNG\nconst Utils = require('./utils')\n\nexports.render = function render (qrData, options) {\n  const opts = Utils.getOptions(options)\n  const pngOpts = opts.rendererOpts\n  const size = Utils.getImageWidth(qrData.modules.size, opts)\n\n  pngOpts.width = size\n  pngOpts.height = size\n\n  const pngImage = new PNG(pngOpts)\n  Utils.qrToImageData(pngImage.data, qrData, opts)\n\n  return pngImage\n}\n\nexports.renderToDataURL = function renderToDataURL (qrData, options, cb) {\n  if (typeof cb === 'undefined') {\n    cb = options\n    options = undefined\n  }\n\n  exports.renderToBuffer(qrData, options, function (err, output) {\n    if (err) cb(err)\n    let url = 'data:image/png;base64,'\n    url += output.toString('base64')\n    cb(null, url)\n  })\n}\n\nexports.renderToBuffer = function renderToBuffer (qrData, options, cb) {\n  if (typeof cb === 'undefined') {\n    cb = options\n    options = undefined\n  }\n\n  const png = exports.render(qrData, options)\n  const buffer = []\n\n  png.on('error', cb)\n\n  png.on('data', function (data) {\n    buffer.push(data)\n  })\n\n  png.on('end', function () {\n    cb(null, Buffer.concat(buffer))\n  })\n\n  png.pack()\n}\n\nexports.renderToFile = function renderToFile (path, qrData, options, cb) {\n  if (typeof cb === 'undefined') {\n    cb = options\n    options = undefined\n  }\n\n  let called = false\n  const done = (...args) => {\n    if (called) return\n    called = true\n    cb.apply(null, args)\n  }\n  const stream = fs.createWriteStream(path)\n\n  stream.on('error', done)\n  stream.on('close', done)\n\n  exports.renderToFileStream(stream, qrData, options)\n}\n\nexports.renderToFileStream = function renderToFileStream (stream, qrData, options) {\n  const png = exports.render(qrData, options)\n  png.pack().pipe(stream)\n}\n", "const Utils = require('./utils')\n\nconst BLOCK_CHAR = {\n  WW: ' ',\n  WB: '\u2584',\n  BB: '\u2588',\n  BW: '\u2580'\n}\n\nconst INVERTED_BLOCK_CHAR = {\n  BB: ' ',\n  BW: '\u2584',\n  WW: '\u2588',\n  WB: '\u2580'\n}\n\nfunction getBlockChar (top, bottom, blocks) {\n  if (top && bottom) return blocks.BB\n  if (top && !bottom) return blocks.BW\n  if (!top && bottom) return blocks.WB\n  return blocks.WW\n}\n\nexports.render = function (qrData, options, cb) {\n  const opts = Utils.getOptions(options)\n  let blocks = BLOCK_CHAR\n  if (opts.color.dark.hex === '#ffffff' || opts.color.light.hex === '#000000') {\n    blocks = INVERTED_BLOCK_CHAR\n  }\n\n  const size = qrData.modules.size\n  const data = qrData.modules.data\n\n  let output = ''\n  let hMargin = Array(size + (opts.margin * 2) + 1).join(blocks.WW)\n  hMargin = Array((opts.margin / 2) + 1).join(hMargin + '\\n')\n\n  const vMargin = Array(opts.margin + 1).join(blocks.WW)\n\n  output += hMargin\n  for (let i = 0; i < size; i += 2) {\n    output += vMargin\n    for (let j = 0; j < size; j++) {\n      const topModule = data[i * size + j]\n      const bottomModule = data[(i + 1) * size + j]\n\n      output += getBlockChar(topModule, bottomModule, blocks)\n    }\n\n    output += vMargin + '\\n'\n  }\n\n  output += hMargin.slice(0, -1)\n\n  if (typeof cb === 'function') {\n    cb(null, output)\n  }\n\n  return output\n}\n\nexports.renderToFile = function renderToFile (path, qrData, options, cb) {\n  if (typeof cb === 'undefined') {\n    cb = options\n    options = undefined\n  }\n\n  const fs = require('fs')\n  const utf8 = exports.render(qrData, options)\n  fs.writeFile(path, utf8, cb)\n}\n", "// let Utils = require('./utils')\n\nexports.render = function (qrData, options, cb) {\n  const size = qrData.modules.size\n  const data = qrData.modules.data\n\n  // let opts = Utils.getOptions(options)\n\n  // use same scheme as https://github.com/gtanner/qrcode-terminal because it actually works! =)\n  const black = '\\x1b[40m  \\x1b[0m'\n  const white = '\\x1b[47m  \\x1b[0m'\n\n  let output = ''\n  const hMargin = Array(size + 3).join(white)\n  const vMargin = Array(2).join(white)\n\n  output += hMargin + '\\n'\n  for (let i = 0; i < size; ++i) {\n    output += white\n    for (let j = 0; j < size; j++) {\n      // let topModule = data[i * size + j]\n      // let bottomModule = data[(i + 1) * size + j]\n\n      output += data[i * size + j] ? black : white// getBlockChar(topModule, bottomModule)\n    }\n    // output += white+'\\n'\n    output += vMargin + '\\n'\n  }\n\n  output += hMargin + '\\n'\n\n  if (typeof cb === 'function') {\n    cb(null, output)\n  }\n\n  return output\n}\n/*\nexports.renderToFile = function renderToFile (path, qrData, options, cb) {\n  if (typeof cb === 'undefined') {\n    cb = options\n    options = undefined\n  }\n\n  let fs = require('fs')\n  let utf8 = exports.render(qrData, options)\n  fs.writeFile(path, utf8, cb)\n}\n*/\n", "const backgroundWhite = '\\x1b[47m'\nconst backgroundBlack = '\\x1b[40m'\nconst foregroundWhite = '\\x1b[37m'\nconst foregroundBlack = '\\x1b[30m'\nconst reset = '\\x1b[0m'\nconst lineSetupNormal = backgroundWhite + foregroundBlack // setup colors\nconst lineSetupInverse = backgroundBlack + foregroundWhite // setup colors\n\nconst createPalette = function (lineSetup, foregroundWhite, foregroundBlack) {\n  return {\n    // 1 ... white, 2 ... black, 0 ... transparent (default)\n\n    '00': reset + ' ' + lineSetup,\n    '01': reset + foregroundWhite + '\u2584' + lineSetup,\n    '02': reset + foregroundBlack + '\u2584' + lineSetup,\n    10: reset + foregroundWhite + '\u2580' + lineSetup,\n    11: ' ',\n    12: '\u2584',\n    20: reset + foregroundBlack + '\u2580' + lineSetup,\n    21: '\u2580',\n    22: '\u2588'\n  }\n}\n\n/**\n * Returns code for QR pixel\n * @param {boolean[][]} modules\n * @param {number} size\n * @param {number} x\n * @param {number} y\n * @return {'0' | '1' | '2'}\n */\nconst mkCodePixel = function (modules, size, x, y) {\n  const sizePlus = size + 1\n  if ((x >= sizePlus) || (y >= sizePlus) || (y < -1) || (x < -1)) return '0'\n  if ((x >= size) || (y >= size) || (y < 0) || (x < 0)) return '1'\n  const idx = (y * size) + x\n  return modules[idx] ? '2' : '1'\n}\n\n/**\n * Returns code for four QR pixels. Suitable as key in palette.\n * @param {boolean[][]} modules\n * @param {number} size\n * @param {number} x\n * @param {number} y\n * @return {keyof palette}\n */\nconst mkCode = function (modules, size, x, y) {\n  return (\n    mkCodePixel(modules, size, x, y) +\n    mkCodePixel(modules, size, x, y + 1)\n  )\n}\n\nexports.render = function (qrData, options, cb) {\n  const size = qrData.modules.size\n  const data = qrData.modules.data\n\n  const inverse = !!(options && options.inverse)\n  const lineSetup = options && options.inverse ? lineSetupInverse : lineSetupNormal\n  const white = inverse ? foregroundBlack : foregroundWhite\n  const black = inverse ? foregroundWhite : foregroundBlack\n\n  const palette = createPalette(lineSetup, white, black)\n  const newLine = reset + '\\n' + lineSetup\n\n  let output = lineSetup // setup colors\n\n  for (let y = -1; y < size + 1; y += 2) {\n    for (let x = -1; x < size; x++) {\n      output += palette[mkCode(data, size, x, y)]\n    }\n\n    output += palette[mkCode(data, size, size, y)] + newLine\n  }\n\n  output += reset\n\n  if (typeof cb === 'function') {\n    cb(null, output)\n  }\n\n  return output\n}\n", "const big = require('./terminal/terminal')\nconst small = require('./terminal/terminal-small')\n\nexports.render = function (qrData, options, cb) {\n  if (options && options.small) {\n    return small.render(qrData, options, cb)\n  }\n  return big.render(qrData, options, cb)\n}\n", "const Utils = require('./utils')\n\nfunction getColorAttrib (color, attrib) {\n  const alpha = color.a / 255\n  const str = attrib + '=\"' + color.hex + '\"'\n\n  return alpha < 1\n    ? str + ' ' + attrib + '-opacity=\"' + alpha.toFixed(2).slice(1) + '\"'\n    : str\n}\n\nfunction svgCmd (cmd, x, y) {\n  let str = cmd + x\n  if (typeof y !== 'undefined') str += ' ' + y\n\n  return str\n}\n\nfunction qrToPath (data, size, margin) {\n  let path = ''\n  let moveBy = 0\n  let newRow = false\n  let lineLength = 0\n\n  for (let i = 0; i < data.length; i++) {\n    const col = Math.floor(i % size)\n    const row = Math.floor(i / size)\n\n    if (!col && !newRow) newRow = true\n\n    if (data[i]) {\n      lineLength++\n\n      if (!(i > 0 && col > 0 && data[i - 1])) {\n        path += newRow\n          ? svgCmd('M', col + margin, 0.5 + row + margin)\n          : svgCmd('m', moveBy, 0)\n\n        moveBy = 0\n        newRow = false\n      }\n\n      if (!(col + 1 < size && data[i + 1])) {\n        path += svgCmd('h', lineLength)\n        lineLength = 0\n      }\n    } else {\n      moveBy++\n    }\n  }\n\n  return path\n}\n\nexports.render = function render (qrData, options, cb) {\n  const opts = Utils.getOptions(options)\n  const size = qrData.modules.size\n  const data = qrData.modules.data\n  const qrcodesize = size + opts.margin * 2\n\n  const bg = !opts.color.light.a\n    ? ''\n    : '<path ' + getColorAttrib(opts.color.light, 'fill') +\n      ' d=\"M0 0h' + qrcodesize + 'v' + qrcodesize + 'H0z\"/>'\n\n  const path =\n    '<path ' + getColorAttrib(opts.color.dark, 'stroke') +\n    ' d=\"' + qrToPath(data, size, opts.margin) + '\"/>'\n\n  const viewBox = 'viewBox=\"' + '0 0 ' + qrcodesize + ' ' + qrcodesize + '\"'\n\n  const width = !opts.width ? '' : 'width=\"' + opts.width + '\" height=\"' + opts.width + '\" '\n\n  const svgTag = '<svg xmlns=\"http://www.w3.org/2000/svg\" ' + width + viewBox + ' shape-rendering=\"crispEdges\">' + bg + path + '</svg>\\n'\n\n  if (typeof cb === 'function') {\n    cb(null, svgTag)\n  }\n\n  return svgTag\n}\n", "const svgTagRenderer = require('./svg-tag')\n\nexports.render = svgTagRenderer.render\n\nexports.renderToFile = function renderToFile (path, qrData, options, cb) {\n  if (typeof cb === 'undefined') {\n    cb = options\n    options = undefined\n  }\n\n  const fs = require('fs')\n  const svgTag = exports.render(qrData, options)\n\n  const xmlStr = '<?xml version=\"1.0\" encoding=\"utf-8\"?>' +\n    '<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\" \"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\">' +\n    svgTag\n\n  fs.writeFile(path, xmlStr, cb)\n}\n", "const Utils = require('./utils')\n\nfunction clearCanvas (ctx, canvas, size) {\n  ctx.clearRect(0, 0, canvas.width, canvas.height)\n\n  if (!canvas.style) canvas.style = {}\n  canvas.height = size\n  canvas.width = size\n  canvas.style.height = size + 'px'\n  canvas.style.width = size + 'px'\n}\n\nfunction getCanvasElement () {\n  try {\n    return document.createElement('canvas')\n  } catch (e) {\n    throw new Error('You need to specify a canvas element')\n  }\n}\n\nexports.render = function render (qrData, canvas, options) {\n  let opts = options\n  let canvasEl = canvas\n\n  if (typeof opts === 'undefined' && (!canvas || !canvas.getContext)) {\n    opts = canvas\n    canvas = undefined\n  }\n\n  if (!canvas) {\n    canvasEl = getCanvasElement()\n  }\n\n  opts = Utils.getOptions(opts)\n  const size = Utils.getImageWidth(qrData.modules.size, opts)\n\n  const ctx = canvasEl.getContext('2d')\n  const image = ctx.createImageData(size, size)\n  Utils.qrToImageData(image.data, qrData, opts)\n\n  clearCanvas(ctx, canvasEl, size)\n  ctx.putImageData(image, 0, 0)\n\n  return canvasEl\n}\n\nexports.renderToDataURL = function renderToDataURL (qrData, canvas, options) {\n  let opts = options\n\n  if (typeof opts === 'undefined' && (!canvas || !canvas.getContext)) {\n    opts = canvas\n    canvas = undefined\n  }\n\n  if (!opts) opts = {}\n\n  const canvasEl = exports.render(qrData, canvas, opts)\n\n  const type = opts.type || 'image/png'\n  const rendererOpts = opts.rendererOpts || {}\n\n  return canvasEl.toDataURL(type, rendererOpts.quality)\n}\n", "\nconst canPromise = require('./can-promise')\n\nconst QRCode = require('./core/qrcode')\nconst CanvasRenderer = require('./renderer/canvas')\nconst SvgRenderer = require('./renderer/svg-tag.js')\n\nfunction renderCanvas (renderFunc, canvas, text, opts, cb) {\n  const args = [].slice.call(arguments, 1)\n  const argsNum = args.length\n  const isLastArgCb = typeof args[argsNum - 1] === 'function'\n\n  if (!isLastArgCb && !canPromise()) {\n    throw new Error('Callback required as last argument')\n  }\n\n  if (isLastArgCb) {\n    if (argsNum < 2) {\n      throw new Error('Too few arguments provided')\n    }\n\n    if (argsNum === 2) {\n      cb = text\n      text = canvas\n      canvas = opts = undefined\n    } else if (argsNum === 3) {\n      if (canvas.getContext && typeof cb === 'undefined') {\n        cb = opts\n        opts = undefined\n      } else {\n        cb = opts\n        opts = text\n        text = canvas\n        canvas = undefined\n      }\n    }\n  } else {\n    if (argsNum < 1) {\n      throw new Error('Too few arguments provided')\n    }\n\n    if (argsNum === 1) {\n      text = canvas\n      canvas = opts = undefined\n    } else if (argsNum === 2 && !canvas.getContext) {\n      opts = text\n      text = canvas\n      canvas = undefined\n    }\n\n    return new Promise(function (resolve, reject) {\n      try {\n        const data = QRCode.create(text, opts)\n        resolve(renderFunc(data, canvas, opts))\n      } catch (e) {\n        reject(e)\n      }\n    })\n  }\n\n  try {\n    const data = QRCode.create(text, opts)\n    cb(null, renderFunc(data, canvas, opts))\n  } catch (e) {\n    cb(e)\n  }\n}\n\nexports.create = QRCode.create\nexports.toCanvas = renderCanvas.bind(null, CanvasRenderer.render)\nexports.toDataURL = renderCanvas.bind(null, CanvasRenderer.renderToDataURL)\n\n// only svg for now.\nexports.toString = renderCanvas.bind(null, function (data, _, opts) {\n  return SvgRenderer.render(data, opts)\n})\n", "const canPromise = require('./can-promise')\nconst QRCode = require('./core/qrcode')\nconst PngRenderer = require('./renderer/png')\nconst Utf8Renderer = require('./renderer/utf8')\nconst TerminalRenderer = require('./renderer/terminal')\nconst SvgRenderer = require('./renderer/svg')\n\nfunction checkParams (text, opts, cb) {\n  if (typeof text === 'undefined') {\n    throw new Error('String required as first argument')\n  }\n\n  if (typeof cb === 'undefined') {\n    cb = opts\n    opts = {}\n  }\n\n  if (typeof cb !== 'function') {\n    if (!canPromise()) {\n      throw new Error('Callback required as last argument')\n    } else {\n      opts = cb || {}\n      cb = null\n    }\n  }\n\n  return {\n    opts: opts,\n    cb: cb\n  }\n}\n\nfunction getTypeFromFilename (path) {\n  return path.slice((path.lastIndexOf('.') - 1 >>> 0) + 2).toLowerCase()\n}\n\nfunction getRendererFromType (type) {\n  switch (type) {\n    case 'svg':\n      return SvgRenderer\n\n    case 'txt':\n    case 'utf8':\n      return Utf8Renderer\n\n    case 'png':\n    case 'image/png':\n    default:\n      return PngRenderer\n  }\n}\n\nfunction getStringRendererFromType (type) {\n  switch (type) {\n    case 'svg':\n      return SvgRenderer\n\n    case 'terminal':\n      return TerminalRenderer\n\n    case 'utf8':\n    default:\n      return Utf8Renderer\n  }\n}\n\nfunction render (renderFunc, text, params) {\n  if (!params.cb) {\n    return new Promise(function (resolve, reject) {\n      try {\n        const data = QRCode.create(text, params.opts)\n        return renderFunc(data, params.opts, function (err, data) {\n          return err ? reject(err) : resolve(data)\n        })\n      } catch (e) {\n        reject(e)\n      }\n    })\n  }\n\n  try {\n    const data = QRCode.create(text, params.opts)\n    return renderFunc(data, params.opts, params.cb)\n  } catch (e) {\n    params.cb(e)\n  }\n}\n\nexports.create = QRCode.create\n\nexports.toCanvas = require('./browser').toCanvas\n\nexports.toString = function toString (text, opts, cb) {\n  const params = checkParams(text, opts, cb)\n  const type = params.opts ? params.opts.type : undefined\n  const renderer = getStringRendererFromType(type)\n  return render(renderer.render, text, params)\n}\n\nexports.toDataURL = function toDataURL (text, opts, cb) {\n  const params = checkParams(text, opts, cb)\n  const renderer = getRendererFromType(params.opts.type)\n  return render(renderer.renderToDataURL, text, params)\n}\n\nexports.toBuffer = function toBuffer (text, opts, cb) {\n  const params = checkParams(text, opts, cb)\n  const renderer = getRendererFromType(params.opts.type)\n  return render(renderer.renderToBuffer, text, params)\n}\n\nexports.toFile = function toFile (path, text, opts, cb) {\n  if (typeof path !== 'string' || !(typeof text === 'string' || typeof text === 'object')) {\n    throw new Error('Invalid argument')\n  }\n\n  if ((arguments.length < 3) && !canPromise()) {\n    throw new Error('Too few arguments provided')\n  }\n\n  const params = checkParams(text, opts, cb)\n  const type = params.opts.type || getTypeFromFilename(path)\n  const renderer = getRendererFromType(type)\n  const renderToFile = renderer.renderToFile.bind(null, path)\n\n  return render(renderToFile, text, params)\n}\n\nexports.toFileStream = function toFileStream (stream, text, opts) {\n  if (arguments.length < 2) {\n    throw new Error('Too few arguments provided')\n  }\n\n  const params = checkParams(text, opts, stream.emit.bind(stream, 'error'))\n  const renderer = getRendererFromType('png') // Only png support for now\n  const renderToFileStream = renderer.renderToFileStream.bind(null, stream)\n  render(renderToFileStream, text, params)\n}\n", "/*\n*copyright Ryan Day 2012\n*\n* Licensed under the MIT license:\n*   http://www.opensource.org/licenses/mit-license.php\n*\n* this is the main server side application file for node-qrcode.\n* these exports use serverside canvas api methods for file IO and buffers\n*\n*/\n\nmodule.exports = require('./server')\n", "import { WebSocketServer, WebSocket } from 'ws';\r\nimport { IncomingMessage } from 'http';\r\nimport { randomBytes, createHmac } from 'crypto';\r\nimport { networkInterfaces } from 'os';\r\nimport qrcode from 'qrcode';\r\nimport { EventEmitter } from 'events';\r\nimport { BrowserWindow, app } from 'electron';\r\nimport * as path from 'path';\r\nimport * as fs from 'fs';\r\n\r\n/**\r\n * Connection details for mobile pairing\r\n */\r\ninterface ConnectionDetails {\r\n  token: string;\r\n  ip: string;\r\n  port: number;\r\n  appId: string;\r\n  expires: number;\r\n}\r\n\r\n/**\r\n * Client device information\r\n */\r\ninterface ClientDevice {\r\n  id: string;\r\n  name: string;\r\n  platform: string;\r\n  lastConnected: Date;\r\n  ipAddress: string;\r\n}\r\n\r\n/**\r\n * WebSocket message structure\r\n */\r\ninterface WebSocketMessage {\r\n  type: string;\r\n  [key: string]: any;\r\n}\r\n\r\n/**\r\n * Proxy server configuration\r\n */\r\ninterface ProxyServerConfig {\r\n  port?: number;\r\n  tokenExpiryMinutes?: number;\r\n  maxConnections?: number;\r\n  storageRoot?: string;\r\n}\r\n\r\n/**\r\n * ProxyServer class for handling mobile connections\r\n */\r\nexport class ProxyServer extends EventEmitter {\r\n  private server: WebSocketServer | null = null;\r\n  private clients: Map<string, { ws: WebSocket, device: ClientDevice }> = new Map();\r\n  private pairingTokens: Map<string, { token: string, expiry: number }> = new Map();\r\n  private port: number;\r\n  private tokenExpiryMinutes: number;\r\n  private maxConnections: number;\r\n  private storageRoot: string;\r\n  private isRunning: boolean = false;\r\n  private statusWindow: BrowserWindow | null = null;\r\n  \r\n  /**\r\n   * Create a new ProxyServer instance\r\n   */\r\n  constructor(config: ProxyServerConfig = {}) {\r\n    super();\r\n    this.port = config.port || 0; // Dynamic port if not specified\r\n    this.tokenExpiryMinutes = config.tokenExpiryMinutes || 10;\r\n    this.maxConnections = config.maxConnections || 10;\r\n    this.storageRoot = config.storageRoot || path.join(app.getPath('userData'), 'mobile_clients');\r\n    \r\n    // Ensure storage directory exists\r\n    this.ensureStorageDirectory();\r\n  }\r\n  \r\n  /**\r\n   * Start the proxy server\r\n   */\r\n  public async start(): Promise<number> {\r\n    if (this.isRunning) {\r\n      return this.port;\r\n    }\r\n    \r\n    return new Promise((resolve, reject) => {\r\n      try {\r\n        this.server = new WebSocketServer({ port: this.port });\r\n        \r\n        this.server.on('listening', () => {\r\n          const address = this.server?.address();\r\n          if (address && typeof address === 'object') {\r\n            this.port = address.port;\r\n            this.isRunning = true;\r\n            console.log(`Proxy server started on port ${this.port}`);\r\n            this.emit('started', this.port);\r\n            resolve(this.port);\r\n          }\r\n        });\r\n        \r\n        this.server.on('connection', this.handleConnection.bind(this));\r\n        \r\n        this.server.on('error', (error) => {\r\n          console.error('Proxy server error:', error);\r\n          this.emit('error', error);\r\n          reject(error);\r\n        });\r\n      } catch (error) {\r\n        console.error('Failed to start proxy server:', error);\r\n        this.emit('error', error);\r\n        reject(error);\r\n      }\r\n    });\r\n  }\r\n  \r\n  /**\r\n   * Stop the proxy server\r\n   */\r\n  public stop(): Promise<void> {\r\n    return new Promise((resolve) => {\r\n      if (!this.isRunning || !this.server) {\r\n        this.isRunning = false;\r\n        resolve();\r\n        return;\r\n      }\r\n      \r\n      // Close all client connections\r\n      this.clients.forEach(({ ws }) => {\r\n        try {\r\n          ws.close(1000, 'Server shutting down');\r\n        } catch (e) {\r\n          // Ignore errors when closing connections\r\n        }\r\n      });\r\n      \r\n      this.server.close(() => {\r\n        this.isRunning = false;\r\n        this.server = null;\r\n        this.clients.clear();\r\n        this.emit('stopped');\r\n        resolve();\r\n      });\r\n    });\r\n  }\r\n  \r\n  /**\r\n   * Generate a pairing token and QR code\r\n   */\r\n  public generatePairingQRCode(): Promise<{ qrCode: string, token: string, connectionUrl: string }> {\r\n    return new Promise(async (resolve, reject) => {\r\n      try {\r\n        // Generate secure random token\r\n        const token = randomBytes(16).toString('hex');\r\n        const expiry = Date.now() + (this.tokenExpiryMinutes * 60 * 1000);\r\n        \r\n        // Store token with expiry\r\n        this.pairingTokens.set(token, { token, expiry });\r\n        \r\n        // Clean up expired tokens\r\n        this.cleanupExpiredTokens();\r\n        \r\n        // Get local IP address\r\n        const ip = this.getLocalIP();\r\n        \r\n        if (!ip) {\r\n          reject(new Error('Could not determine local IP address'));\r\n          return;\r\n        }\r\n        \r\n        // Create connection details\r\n        const connectionDetails: ConnectionDetails = {\r\n          token,\r\n          ip,\r\n          port: this.port,\r\n          appId: 'tanukimcp-atlas',\r\n          expires: expiry\r\n        };\r\n        \r\n        // Generate connection URL for QR code\r\n        const connectionUrl = `tanukimcp://connect?${Object.entries(connectionDetails)\r\n          .map(([key, value]) => `${key}=${encodeURIComponent(String(value))}`)\r\n          .join('&')}`;\r\n        \r\n        // Generate QR code\r\n        const qrCode = await qrcode.toDataURL(connectionUrl);\r\n        \r\n        this.emit('pairing-generated', { token, connectionUrl });\r\n        resolve({ qrCode, token, connectionUrl });\r\n      } catch (error) {\r\n        reject(error);\r\n      }\r\n    });\r\n  }\r\n  \r\n  /**\r\n   * Handle incoming WebSocket connection\r\n   */\r\n  private handleConnection(ws: WebSocket, request: IncomingMessage) {\r\n    const clientIp = request.socket.remoteAddress || '';\r\n    console.log(`New connection from ${clientIp}`);\r\n    \r\n    // Set up message handler\r\n    ws.on('message', (data: Buffer) => {\r\n      try {\r\n        const message = JSON.parse(data.toString()) as WebSocketMessage;\r\n        this.handleMessage(ws, message, clientIp);\r\n      } catch (error) {\r\n        console.error('Error parsing message:', error);\r\n        this.sendErrorMessage(ws, 'invalid_message', 'Invalid message format');\r\n      }\r\n    });\r\n    \r\n    // Set up close handler\r\n    ws.on('close', (code, reason) => {\r\n      // Find and remove client\r\n      let clientId = '';\r\n      this.clients.forEach((client, id) => {\r\n        if (client.ws === ws) {\r\n          clientId = id;\r\n        }\r\n      });\r\n      \r\n      if (clientId) {\r\n        const client = this.clients.get(clientId);\r\n        this.clients.delete(clientId);\r\n        this.emit('client-disconnected', client?.device);\r\n        console.log(`Client disconnected: ${clientId}, Code: ${code}, Reason: ${reason.toString()}`);\r\n      }\r\n    });\r\n    \r\n    // Set up error handler\r\n    ws.on('error', (error) => {\r\n      console.error('WebSocket error:', error);\r\n    });\r\n    \r\n    // Set initial timeout for authentication\r\n    const authTimeout = setTimeout(() => {\r\n      if (!this.isClientAuthenticated(ws)) {\r\n        ws.close(1008, 'Authentication timeout');\r\n      }\r\n    }, 30000); // 30 seconds to authenticate\r\n    \r\n    // Store timeout to clear it later\r\n    (ws as any).authTimeout = authTimeout;\r\n  }\r\n  \r\n  /**\r\n   * Handle incoming WebSocket message\r\n   */\r\n  private handleMessage(ws: WebSocket, message: WebSocketMessage, clientIp: string) {\r\n    // Check message type\r\n    switch (message.type) {\r\n      case 'auth':\r\n        this.handleAuth(ws, message, clientIp);\r\n        break;\r\n        \r\n      case 'heartbeat':\r\n        this.handleHeartbeat(ws, message);\r\n        break;\r\n        \r\n      case 'chat_message':\r\n        this.handleChatMessage(ws, message);\r\n        break;\r\n        \r\n      case 'file_request':\r\n        this.handleFileRequest(ws, message);\r\n        break;\r\n        \r\n      case 'media_process':\r\n        this.handleMediaProcess(ws, message);\r\n        break;\r\n        \r\n      default:\r\n        console.warn(`Unknown message type: ${message.type}`);\r\n        this.sendErrorMessage(ws, 'unknown_type', `Unknown message type: ${message.type}`);\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * Handle authentication message\r\n   */\r\n  private handleAuth(ws: WebSocket, message: WebSocketMessage, clientIp: string) {\r\n    const { token, deviceId, deviceName, platform } = message;\r\n    \r\n    // Clear auth timeout\r\n    if ((ws as any).authTimeout) {\r\n      clearTimeout((ws as any).authTimeout);\r\n      delete (ws as any).authTimeout;\r\n    }\r\n    \r\n    // Validate token\r\n    const tokenInfo = this.pairingTokens.get(token);\r\n    if (!tokenInfo || tokenInfo.expiry < Date.now()) {\r\n      this.sendErrorMessage(ws, 'auth_failed', 'Invalid or expired token');\r\n      ws.close(1008, 'Authentication failed');\r\n      return;\r\n    }\r\n    \r\n    // Check if max connections reached\r\n    if (this.clients.size >= this.maxConnections) {\r\n      this.sendErrorMessage(ws, 'auth_failed', 'Maximum connections reached');\r\n      ws.close(1008, 'Too many connections');\r\n      return;\r\n    }\r\n    \r\n    // Generate client ID if not provided\r\n    const clientId = deviceId || randomBytes(8).toString('hex');\r\n    \r\n    // Create client device info\r\n    const device: ClientDevice = {\r\n      id: clientId,\r\n      name: deviceName || `Mobile Device ${clientId.substring(0, 4)}`,\r\n      platform: platform || 'unknown',\r\n      lastConnected: new Date(),\r\n      ipAddress: clientIp\r\n    };\r\n    \r\n    // Store client\r\n    this.clients.set(clientId, { ws, device });\r\n    \r\n    // Remove used token\r\n    this.pairingTokens.delete(token);\r\n    \r\n    // Send success response\r\n    this.sendMessage(ws, {\r\n      type: 'auth_success',\r\n      clientId,\r\n      serverInfo: {\r\n        name: 'TanukiMCP Atlas Desktop',\r\n        version: app.getVersion(),\r\n        platform: process.platform\r\n      }\r\n    });\r\n    \r\n    // Create client storage directory\r\n    this.ensureClientDirectory(clientId);\r\n    \r\n    // Emit client connected event\r\n    this.emit('client-connected', device);\r\n    \r\n    console.log(`Client authenticated: ${device.name} (${device.id})`);\r\n  }\r\n  \r\n  /**\r\n   * Handle heartbeat message\r\n   */\r\n  private handleHeartbeat(ws: WebSocket, message: WebSocketMessage) {\r\n    // Send heartbeat response\r\n    this.sendMessage(ws, {\r\n      type: 'heartbeat_response',\r\n      timestamp: Date.now()\r\n    });\r\n  }\r\n  \r\n  /**\r\n   * Handle chat message\r\n   */\r\n  private handleChatMessage(ws: WebSocket, message: WebSocketMessage) {\r\n    const clientId = this.getClientIdFromWebSocket(ws);\r\n    if (!clientId) {\r\n      this.sendErrorMessage(ws, 'unauthorized', 'Not authenticated');\r\n      return;\r\n    }\r\n    \r\n    // Emit chat message event\r\n    this.emit('chat-message', {\r\n      clientId,\r\n      message: message.content,\r\n      timestamp: Date.now()\r\n    });\r\n    \r\n    // The main application will handle the actual LLM processing\r\n    // and send responses back through sendChatResponse\r\n  }\r\n  \r\n  /**\r\n   * Handle file request\r\n   */\r\n  private handleFileRequest(ws: WebSocket, message: WebSocketMessage) {\r\n    const clientId = this.getClientIdFromWebSocket(ws);\r\n    if (!clientId) {\r\n      this.sendErrorMessage(ws, 'unauthorized', 'Not authenticated');\r\n      return;\r\n    }\r\n    \r\n    const { operation, path: filePath, content } = message;\r\n    \r\n    // Validate file access\r\n    if (!this.validateFileAccess(filePath, clientId)) {\r\n      this.sendErrorMessage(ws, 'access_denied', 'Access to this file is denied');\r\n      return;\r\n    }\r\n    \r\n    // Handle different file operations\r\n    switch (operation) {\r\n      case 'read':\r\n        this.handleFileRead(ws, clientId, filePath);\r\n        break;\r\n        \r\n      case 'write':\r\n        this.handleFileWrite(ws, clientId, filePath, content);\r\n        break;\r\n        \r\n      case 'list':\r\n        this.handleFileList(ws, clientId, filePath);\r\n        break;\r\n        \r\n      case 'delete':\r\n        this.handleFileDelete(ws, clientId, filePath);\r\n        break;\r\n        \r\n      default:\r\n        this.sendErrorMessage(ws, 'invalid_operation', `Invalid file operation: ${operation}`);\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * Handle media processing request\r\n   */\r\n  private handleMediaProcess(ws: WebSocket, message: WebSocketMessage) {\r\n    const clientId = this.getClientIdFromWebSocket(ws);\r\n    if (!clientId) {\r\n      this.sendErrorMessage(ws, 'unauthorized', 'Not authenticated');\r\n      return;\r\n    }\r\n    \r\n    const { mediaType, mediaId, data, options } = message;\r\n    \r\n    // Emit media processing event\r\n    this.emit('media-process', {\r\n      clientId,\r\n      mediaType,\r\n      mediaId,\r\n      data,\r\n      options\r\n    });\r\n    \r\n    // Acknowledge receipt\r\n    this.sendMessage(ws, {\r\n      type: 'media_processing',\r\n      mediaId,\r\n      status: 'processing'\r\n    });\r\n    \r\n    // The main application will handle the actual media processing\r\n    // and send results back through sendMediaResult\r\n  }\r\n  \r\n  /**\r\n   * Handle file read operation\r\n   */\r\n  private handleFileRead(ws: WebSocket, clientId: string, filePath: string) {\r\n    try {\r\n      const fullPath = this.getClientFilePath(clientId, filePath);\r\n      \r\n      if (!fs.existsSync(fullPath)) {\r\n        this.sendErrorMessage(ws, 'file_not_found', `File not found: ${filePath}`);\r\n        return;\r\n      }\r\n      \r\n      const content = fs.readFileSync(fullPath, 'utf8');\r\n      \r\n      this.sendMessage(ws, {\r\n        type: 'file_response',\r\n        operation: 'read',\r\n        path: filePath,\r\n        content,\r\n        success: true\r\n      });\r\n    } catch (error: any) {\r\n      console.error('Error reading file:', error);\r\n      this.sendErrorMessage(ws, 'file_error', `Error reading file: ${error.message}`);\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * Handle file write operation\r\n   */\r\n  private handleFileWrite(ws: WebSocket, clientId: string, filePath: string, content: string) {\r\n    try {\r\n      const fullPath = this.getClientFilePath(clientId, filePath);\r\n      \r\n      // Ensure directory exists\r\n      const dirPath = path.dirname(fullPath);\r\n      if (!fs.existsSync(dirPath)) {\r\n        fs.mkdirSync(dirPath, { recursive: true });\r\n      }\r\n      \r\n      fs.writeFileSync(fullPath, content, 'utf8');\r\n      \r\n      this.sendMessage(ws, {\r\n        type: 'file_response',\r\n        operation: 'write',\r\n        path: filePath,\r\n        success: true\r\n      });\r\n    } catch (error: any) {\r\n      console.error('Error writing file:', error);\r\n      this.sendErrorMessage(ws, 'file_error', `Error writing file: ${error.message}`);\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * Handle file list operation\r\n   */\r\n  private handleFileList(ws: WebSocket, clientId: string, dirPath: string) {\r\n    try {\r\n      const fullPath = this.getClientFilePath(clientId, dirPath);\r\n      \r\n      if (!fs.existsSync(fullPath)) {\r\n        this.sendErrorMessage(ws, 'directory_not_found', `Directory not found: ${dirPath}`);\r\n        return;\r\n      }\r\n      \r\n      const stats = fs.statSync(fullPath);\r\n      if (!stats.isDirectory()) {\r\n        this.sendErrorMessage(ws, 'not_a_directory', `Not a directory: ${dirPath}`);\r\n        return;\r\n      }\r\n      \r\n      const files = fs.readdirSync(fullPath);\r\n      const fileList = files.map(file => {\r\n        const fileStat = fs.statSync(path.join(fullPath, file));\r\n        return {\r\n          name: file,\r\n          path: path.join(dirPath, file).replace(/\\\\/g, '/'),\r\n          type: fileStat.isDirectory() ? 'directory' : 'file',\r\n          size: fileStat.size,\r\n          modified: fileStat.mtime.toISOString()\r\n        };\r\n      });\r\n      \r\n      this.sendMessage(ws, {\r\n        type: 'file_response',\r\n        operation: 'list',\r\n        path: dirPath,\r\n        files: fileList,\r\n        success: true\r\n      });\r\n    } catch (error: any) {\r\n      console.error('Error listing files:', error);\r\n      this.sendErrorMessage(ws, 'file_error', `Error listing files: ${error.message}`);\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * Handle file delete operation\r\n   */\r\n  private handleFileDelete(ws: WebSocket, clientId: string, filePath: string) {\r\n    try {\r\n      const fullPath = this.getClientFilePath(clientId, filePath);\r\n      \r\n      if (!fs.existsSync(fullPath)) {\r\n        this.sendErrorMessage(ws, 'file_not_found', `File not found: ${filePath}`);\r\n        return;\r\n      }\r\n      \r\n      fs.unlinkSync(fullPath);\r\n      \r\n      this.sendMessage(ws, {\r\n        type: 'file_response',\r\n        operation: 'delete',\r\n        path: filePath,\r\n        success: true\r\n      });\r\n    } catch (error: any) {\r\n      console.error('Error deleting file:', error);\r\n      this.sendErrorMessage(ws, 'file_error', `Error deleting file: ${error.message}`);\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * Send a chat response to a client\r\n   */\r\n  public sendChatResponse(clientId: string, message: string, messageId: string): boolean {\r\n    const client = this.clients.get(clientId);\r\n    if (!client) return false;\r\n    \r\n    return this.sendMessage(client.ws, {\r\n      type: 'chat_response',\r\n      content: message,\r\n      messageId,\r\n      timestamp: Date.now()\r\n    });\r\n  }\r\n  \r\n  /**\r\n   * Send a media processing result to a client\r\n   */\r\n  public sendMediaResult(clientId: string, mediaId: string, result: any): boolean {\r\n    const client = this.clients.get(clientId);\r\n    if (!client) return false;\r\n    \r\n    return this.sendMessage(client.ws, {\r\n      type: 'media_result',\r\n      mediaId,\r\n      result,\r\n      timestamp: Date.now()\r\n    });\r\n  }\r\n  \r\n  /**\r\n   * Send a status update to a client\r\n   */\r\n  public sendStatusUpdate(clientId: string, status: { [key: string]: any }): boolean {\r\n    const client = this.clients.get(clientId);\r\n    if (!client) return false;\r\n    \r\n    return this.sendMessage(client.ws, {\r\n      type: 'status_update',\r\n      status,\r\n      timestamp: Date.now()\r\n    });\r\n  }\r\n  \r\n  /**\r\n   * Send a message to a WebSocket client\r\n   */\r\n  private sendMessage(ws: WebSocket, message: any): boolean {\r\n    try {\r\n      if (ws.readyState === WebSocket.OPEN) {\r\n        ws.send(JSON.stringify(message));\r\n        return true;\r\n      }\r\n      return false;\r\n    } catch (error) {\r\n      console.error('Error sending message:', error);\r\n      return false;\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * Send an error message to a WebSocket client\r\n   */\r\n  private sendErrorMessage(ws: WebSocket, code: string, message: string): boolean {\r\n    return this.sendMessage(ws, {\r\n      type: 'error',\r\n      code,\r\n      message,\r\n      timestamp: Date.now()\r\n    });\r\n  }\r\n  \r\n  /**\r\n   * Get the client ID associated with a WebSocket\r\n   */\r\n  private getClientIdFromWebSocket(ws: WebSocket): string | null {\r\n    for (const [clientId, client] of this.clients.entries()) {\r\n      if (client.ws === ws) {\r\n        return clientId;\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n  \r\n  /**\r\n   * Check if a WebSocket client is authenticated\r\n   */\r\n  private isClientAuthenticated(ws: WebSocket): boolean {\r\n    return this.getClientIdFromWebSocket(ws) !== null;\r\n  }\r\n  \r\n  /**\r\n   * Validate file access permission for a client\r\n   */\r\n  private validateFileAccess(filePath: string, clientId: string): boolean {\r\n    // Normalize path\r\n    const normalizedPath = path.normalize(filePath).replace(/\\\\/g, '/');\r\n    \r\n    // Don't allow absolute paths or paths with ..\r\n    if (path.isAbsolute(normalizedPath) || normalizedPath.includes('..')) {\r\n      return false;\r\n    }\r\n    \r\n    return true;\r\n  }\r\n  \r\n  /**\r\n   * Get the full file path for a client's file\r\n   */\r\n  private getClientFilePath(clientId: string, filePath: string): string {\r\n    // Normalize path\r\n    const normalizedPath = path.normalize(filePath).replace(/\\\\/g, '/');\r\n    \r\n    // Create path within client's directory\r\n    return path.join(this.getClientRoot(clientId), normalizedPath);\r\n  }\r\n  \r\n  /**\r\n   * Get the root directory for a client's files\r\n   */\r\n  private getClientRoot(clientId: string): string {\r\n    return path.join(this.storageRoot, 'client_files', clientId);\r\n  }\r\n  \r\n  /**\r\n   * Ensure the storage directory exists\r\n   */\r\n  private ensureStorageDirectory(): void {\r\n    if (!fs.existsSync(this.storageRoot)) {\r\n      fs.mkdirSync(this.storageRoot, { recursive: true });\r\n    }\r\n    \r\n    const clientFilesDir = path.join(this.storageRoot, 'client_files');\r\n    if (!fs.existsSync(clientFilesDir)) {\r\n      fs.mkdirSync(clientFilesDir, { recursive: true });\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * Ensure the client directory exists\r\n   */\r\n  private ensureClientDirectory(clientId: string): void {\r\n    const clientDir = this.getClientRoot(clientId);\r\n    if (!fs.existsSync(clientDir)) {\r\n      fs.mkdirSync(clientDir, { recursive: true });\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * Clean up expired pairing tokens\r\n   */\r\n  private cleanupExpiredTokens(): void {\r\n    const now = Date.now();\r\n    for (const [token, info] of this.pairingTokens.entries()) {\r\n      if (info.expiry < now) {\r\n        this.pairingTokens.delete(token);\r\n      }\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * Get the local IP address for connections\r\n   */\r\n  private getLocalIP(): string | null {\r\n    const interfaces = networkInterfaces();\r\n    \r\n    for (const name of Object.keys(interfaces)) {\r\n      const networkInterface = interfaces[name];\r\n      \r\n      if (!networkInterface) continue;\r\n      \r\n      for (const iface of networkInterface) {\r\n        // Skip internal and non-IPv4 addresses\r\n        if (!iface.internal && iface.family === 'IPv4') {\r\n          return iface.address;\r\n        }\r\n      }\r\n    }\r\n    \r\n    return null;\r\n  }\r\n  \r\n  /**\r\n   * Get connected clients\r\n   */\r\n  public getConnectedClients(): ClientDevice[] {\r\n    const clients: ClientDevice[] = [];\r\n    for (const [, client] of this.clients.entries()) {\r\n      clients.push(client.device);\r\n    }\r\n    return clients;\r\n  }\r\n  \r\n  /**\r\n   * Get server status\r\n   */\r\n  public getStatus(): { \r\n    running: boolean;\r\n    port: number;\r\n    clientCount: number;\r\n    clients: ClientDevice[];\r\n  } {\r\n    return {\r\n      running: this.isRunning,\r\n      port: this.port,\r\n      clientCount: this.clients.size,\r\n      clients: this.getConnectedClients()\r\n    };\r\n  }\r\n  \r\n  /**\r\n   * Show status window\r\n   */\r\n  public async showStatusWindow(): Promise<void> {\r\n    if (this.statusWindow) {\r\n      this.statusWindow.focus();\r\n      return;\r\n    }\r\n    \r\n    this.statusWindow = new BrowserWindow({\r\n      width: 400,\r\n      height: 500,\r\n      title: 'TanukiMCP Atlas Mobile Proxy',\r\n      webPreferences: {\r\n        nodeIntegration: true,\r\n        contextIsolation: false\r\n      }\r\n    });\r\n    \r\n    // Generate QR code ahead of time to avoid await in template string\r\n    let qrCodeDataUrl = '';\r\n    try {\r\n      const qrResult = await this.generatePairingQRCode();\r\n      qrCodeDataUrl = qrResult.qrCode;\r\n    } catch (error) {\r\n      console.error('Failed to generate QR code:', error);\r\n      qrCodeDataUrl = '';\r\n    }\r\n    \r\n    // Get clients HTML\r\n    const clientsHtml = Array.from(this.clients.values())\r\n      .map(client => `\r\n        <div class=\"client\">\r\n          <p>Name: ${client.device.name}</p>\r\n          <p>ID: ${client.device.id}</p>\r\n          <p>Platform: ${client.device.platform}</p>\r\n          <p>Connected: ${client.device.lastConnected.toISOString()}</p>\r\n        </div>\r\n      `)\r\n      .join('');\r\n    \r\n    // Load status page\r\n    // In a real implementation, this would load an HTML file\r\n    this.statusWindow.loadURL(`data:text/html,\r\n      <html>\r\n        <head>\r\n          <title>Mobile Proxy Status</title>\r\n          <style>\r\n            body { font-family: sans-serif; padding: 20px; }\r\n            h1 { font-size: 18px; }\r\n            .status { margin-bottom: 20px; }\r\n            .client { border: 1px solid #ccc; padding: 10px; margin-bottom: 10px; }\r\n            .qr-container { text-align: center; margin: 20px 0; }\r\n            button { padding: 8px 16px; }\r\n          </style>\r\n        </head>\r\n        <body>\r\n          <h1>TanukiMCP Atlas Mobile Proxy</h1>\r\n          <div class=\"status\">\r\n            <p>Status: ${this.isRunning ? 'Running' : 'Stopped'}</p>\r\n            <p>Port: ${this.port}</p>\r\n            <p>Connected Clients: ${this.clients.size}</p>\r\n          </div>\r\n          <div class=\"qr-container\">\r\n            <img id=\"qrcode\" width=\"200\" height=\"200\" src=\"${qrCodeDataUrl}\" />\r\n          </div>\r\n          <button id=\"regenerate\">Regenerate QR Code</button>\r\n          <h2>Connected Clients</h2>\r\n          <div id=\"clients\">${clientsHtml}</div>\r\n          <script>\r\n            // Simple script to update the status\r\n            const updateStatus = async () => {\r\n              // In a real implementation, this would fetch data from the main process\r\n              // This is a placeholder that would be replaced with actual IPC calls\r\n              console.log('Update status triggered');\r\n            };\r\n            \r\n            // Generate QR code\r\n            const generateQR = async () => {\r\n              // In a real implementation, this would call the main process\r\n              // This is a placeholder that would be replaced with actual IPC calls\r\n              console.log('Generate QR triggered');\r\n            };\r\n            \r\n            // Initial updates\r\n            updateStatus();\r\n            \r\n            // Set up refresh\r\n            document.getElementById('regenerate').addEventListener('click', generateQR);\r\n            setInterval(updateStatus, 5000);\r\n          </script>\r\n        </body>\r\n      </html>\r\n    `);\r\n    \r\n    this.statusWindow.on('closed', () => {\r\n      this.statusWindow = null;\r\n    });\r\n  }\r\n}\r\n\r\n// Export singleton instance\r\nexport const proxyServer = new ProxyServer(); ", "import { app, ipcMain, IpcMainInvokeEvent, dialog, BrowserWindow } from 'electron';\nimport { getDatabase, getRawDatabase, checkDatabaseHealth } from '../database/connection';\nimport { v4 as uuidv4 } from 'uuid';\nimport { tanukiApp } from '../main';\nimport {\n  processRequest as enhancedProcessRequest,\n  getStatus as enhancedGetStatus,\n  testComplexityAssessment as enhancedTestComplexity,\n  setLLMDrivenComplexity as enhancedSetLLMDrivenComplexity\n} from '../../../llm-enhanced/src';\nimport { join } from 'path';\nimport { readFileSync, writeFileSync, existsSync, mkdirSync } from 'fs';\n\n// Define IPC channel types for type safety\nexport interface IPCChannels {\n  // Database operations\n  'db:query': { params: [string, any[]?]; result: any };\n  'db:health': { params: []; result: { isHealthy: boolean; details: any } };\n  \n  // Application state\n  'app:getVersion': { params: []; result: string };\n  'app:getPath': { params: [string]; result: string };\n  \n  // Settings management\n  'settings:get': { params: [string]; result: any };\n  'settings:set': { params: [string, any]; result: void };\n  'settings:getAll': { params: []; result: any[] };\n  \n  // Chat session management\n  'chat:createSession': { params: [any]; result: any };\n  'chat:getSession': { params: [string]; result: any };\n  'chat:updateSession': { params: [string, any]; result: any };\n  'chat:deleteSession': { params: [string]; result: void };\n  'chat:listSessions': { params: []; result: any[] };\n  \n  // File system operations (placeholder for Phase 3)\n  'fs:readFile': { params: [string]; result: string | null };\n  'fs:writeFile': { params: [string, string]; result: void };\n  'fs:exists': { params: [string]; result: boolean };\n  \n  // Phase 2: LLM and Model Management (OpenRouter only)\n  'openrouter:listModels': { params: []; result: any[] };\n  'openrouter:generate': { params: [any]; result: any };\n  'openrouter:checkHealth': { params: []; result: boolean };\n  \n  'system:getCapabilities': { params: []; result: any };\n  'system:getCurrentMetrics': { params: []; result: any };\n  \n  'models:getRecommendations': { params: []; result: any[] };\n  'models:getInstallationStatus': { params: [string]; result: any };\n  \n  'optimization:getProfiles': { params: []; result: any[] };\n  'optimization:getActiveProfile': { params: []; result: any };\n  'optimization:setProfile': { params: [string]; result: void };\n  \n  // Enhanced LLM operations\n  'enhancedLLM:processRequest': { params: [any]; result: any };\n  'enhancedLLM:getStatus': { params: []; result: any };\n  'enhancedLLM:testComplexity': { params: [string]; result: boolean };\n  'enhancedLLM:setLLMDrivenComplexity': { params: [boolean]; result: void };\n  \n  // MCP Hub operations\n  'mcpHub:listServers': { params: []; result: any[] };\n  'mcpHub:connectServer': { params: [string]; result: void };\n  'mcpHub:disconnectServer': { params: [string]; result: void };\n  'mcpHub:executeCommand': { params: [string, string, any]; result: any };\n  'optimization:optimizeForHardware': { params: [any]; result: any };\n  \n  'parameters:getPreset': { params: [string]; result: any };\n  'parameters:getAllPresets': { params: []; result: any };\n  'parameters:optimizeForTask': { params: [string, string]; result: any };\n  \n  'context:store': { params: [string, string, string, string, number?]; result: void };\n  'context:retrieve': { params: [string, string, number?]; result: any[] };\n  'context:optimize': { params: [string]; result: void };\n}\n\nexport function setupIPC(): void {\n  console.log('\uD83D\uDD0C Setting up IPC handlers...');\n  \n  // Phase 1: Essential handlers\n  setupDatabaseHandlers();\n  setupAppHandlers(); \n  setupSettingsHandlers();\n  \n  // Chat session handlers\n  setupChatHandlers();\n  \n  // File system handlers (basic implementation for Phase 1)\n  setupFileSystemHandlers();\n  \n  // Phase 2: LLM and Model Management handlers\n  setupLLMHandlers();\n  \n  // Window control handlers\n  setupWindowControlHandlers();\n  \n  // Mobile proxy handlers\n  setupProxyHandlers();\n  \n  console.log('\u2705 IPC handlers registered');\n}\n\nfunction setupDatabaseHandlers(): void {\n  // Generic database query handler (with caution)\n  ipcMain.handle('db:query', async (event: IpcMainInvokeEvent, query: string, params?: any[]) => {\n    try {\n      const db = getRawDatabase();\n      \n      // Basic safety check - only allow SELECT, INSERT, UPDATE for now\n      const queryType = query.trim().toUpperCase().split(' ')[0];\n      if (!['SELECT', 'INSERT', 'UPDATE', 'DELETE'].includes(queryType)) {\n        throw new Error(`Query type ${queryType} not allowed`);\n      }\n      \n      if (params) {\n        return db.prepare(query).all(params);\n      } else {\n        return db.prepare(query).all();\n      }\n    } catch (error) {\n      console.error('Database query failed:', error);\n      throw error;\n    }\n  });\n  \n  // Database health check\n  ipcMain.handle('db:health', async () => {\n    return checkDatabaseHealth();\n  });\n}\n\nfunction setupAppHandlers(): void {\n  // Get application version\n  ipcMain.handle('app:getVersion', () => {\n    return process.env.npm_package_version || '1.0.0';\n  });\n  \n  // Get application paths\n  ipcMain.handle('app:getPath', async (event: IpcMainInvokeEvent, name: string) => {\n    const { app } = require('electron');\n    \n    try {\n      return app.getPath(name as any);\n    } catch (error) {\n      console.error(`Failed to get path for ${name}:`, error);\n      throw error;\n    }\n  });\n  \n  // Handle directory selection from renderer\n  ipcMain.handle('dialog:showOpenDialog', async (event: IpcMainInvokeEvent, options: Electron.OpenDialogOptions) => {\n    const win = BrowserWindow.fromWebContents(event.sender);\n    try {\n      let result;\n      if (win) {\n        result = await dialog.showOpenDialog(win, options);\n      } else {\n        result = await dialog.showOpenDialog(options);\n      }\n      return result;\n    } catch (error) {\n      console.error('Failed to show open dialog:', error);\n      throw error;\n    }\n  });\n  \n  // Set working directory\n  ipcMain.handle('app:setWorkingDirectory', async (event: IpcMainInvokeEvent, dirPath: string) => {\n    try {\n      const fs = require('fs').promises;\n      const path = require('path');\n      \n      // Check if directory exists\n      await fs.access(dirPath);\n      \n      // Change process working directory\n      process.chdir(dirPath);\n      \n      console.log(`Changed working directory to: ${dirPath}`);\n      \n      // Notify renderer about directory change\n      const sender = event.sender;\n      if (sender) {\n        sender.send('app:workingDirectoryChanged', dirPath);\n      }\n      \n      return { success: true, path: dirPath };\n    } catch (error) {\n      console.error(`Failed to set working directory to ${dirPath}:`, error);\n      throw error;\n    }\n  });\n  \n  // Get current working directory\n  ipcMain.handle('app:getWorkingDirectory', async () => {\n    try {\n      return process.cwd();\n    } catch (error) {\n      console.error('Failed to get working directory:', error);\n      throw error;\n    }\n  });\n}\n\nfunction setupSettingsHandlers(): void {\n  // Get setting value\n  ipcMain.handle('settings:get', async (event: IpcMainInvokeEvent, key: string) => {\n    try {\n      const db = getRawDatabase();\n      const result = db.prepare('SELECT value FROM settings WHERE key = ?').get(key) as { value: string } | undefined;\n      \n      if (result) {\n        return JSON.parse(result.value);\n      }\n      return null;\n    } catch (error) {\n      console.error(`Failed to get setting ${key}:`, error);\n      throw error;\n    }\n  });\n  \n  // Set setting value\n  ipcMain.handle('settings:set', async (event: IpcMainInvokeEvent, key: string, value: any) => {\n    try {\n      const db = getRawDatabase();\n      const stmt = db.prepare(`\n        INSERT OR REPLACE INTO settings (key, value, updated)\n        VALUES (?, ?, ?)\n      `);\n      \n      stmt.run(key, JSON.stringify(value), Date.now());\n    } catch (error) {\n      console.error(`Failed to set setting ${key}:`, error);\n      throw error;\n    }\n  });\n  \n  // Remove setting value\n  ipcMain.handle('storage:remove', async (event: IpcMainInvokeEvent, key: string) => {\n    try {\n      const db = getRawDatabase();\n      db.prepare('DELETE FROM settings WHERE key = ?').run(key);\n      return true;\n    } catch (error) {\n      console.error(`Failed to remove setting ${key}:`, error);\n      throw error;\n    }\n  });\n  \n  // Get all settings\n  ipcMain.handle('settings:getAll', async () => {\n    try {\n      const db = getRawDatabase();\n      const results = db.prepare('SELECT * FROM settings').all() as any[];\n      \n      return results.map(row => ({\n        ...row,\n        value: JSON.parse(row.value)\n      }));\n    } catch (error) {\n      console.error('Failed to get all settings:', error);\n      throw error;\n    }\n  });\n}\n\nfunction setupChatHandlers(): void {\n  // Create new chat session\n  ipcMain.handle('chat:createSession', async (event: IpcMainInvokeEvent, sessionData: any) => {\n    try {\n      const db = getRawDatabase();\n      const id = uuidv4();\n      const now = Date.now();\n      \n      const stmt = db.prepare(`\n        INSERT INTO chat_sessions (\n          id, title, description, created, updated, subject_mode\n        ) VALUES (?, ?, ?, ?, ?, ?)\n      `);\n      \n      stmt.run(\n        id,\n        sessionData.title || 'New Chat',\n        sessionData.description || null,\n        now,\n        now,\n        sessionData.subjectMode || 'general'\n      );\n      \n      return {\n        id,\n        title: sessionData.title || 'New Chat',\n        description: sessionData.description || null,\n        created: now,\n        updated: now,\n        subjectMode: sessionData.subjectMode || 'general',\n        messageCount: 0,\n        isArchived: false,\n        isFavorite: false\n      };\n    } catch (error) {\n      console.error('Failed to create chat session:', error);\n      throw error;\n    }\n  });\n  \n  // Get chat session\n  ipcMain.handle('chat:getSession', async (event: IpcMainInvokeEvent, sessionId: string) => {\n    try {\n      const db = getRawDatabase();\n      const session = db.prepare('SELECT * FROM chat_sessions WHERE id = ?').get(sessionId);\n      \n      if (!session) {\n        throw new Error(`Chat session ${sessionId} not found`);\n      }\n      \n      return session;\n    } catch (error) {\n      console.error(`Failed to get chat session ${sessionId}:`, error);\n      throw error;\n    }\n  });\n  \n  // Update chat session\n  ipcMain.handle('chat:updateSession', async (event: IpcMainInvokeEvent, sessionId: string, updates: any) => {\n    try {\n      const db = getRawDatabase();\n      const updateFields: string[] = [];\n      const updateValues: any[] = [];\n      \n      // Build dynamic update query\n      if (updates.title !== undefined) {\n        updateFields.push('title = ?');\n        updateValues.push(updates.title);\n      }\n      if (updates.description !== undefined) {\n        updateFields.push('description = ?');\n        updateValues.push(updates.description);\n      }\n      if (updates.isArchived !== undefined) {\n        updateFields.push('is_archived = ?');\n        updateValues.push(updates.isArchived ? 1 : 0);\n      }\n      if (updates.isFavorite !== undefined) {\n        updateFields.push('is_favorite = ?');\n        updateValues.push(updates.isFavorite ? 1 : 0);\n      }\n      \n      if (updateFields.length > 0) {\n        updateFields.push('updated = ?');\n        updateValues.push(Date.now());\n        updateValues.push(sessionId);\n        \n        const query = `UPDATE chat_sessions SET ${updateFields.join(', ')} WHERE id = ?`;\n        const stmt = db.prepare(query);\n        stmt.run(...updateValues);\n      }\n      \n      return true;\n    } catch (error) {\n      console.error(`Failed to update chat session ${sessionId}:`, error);\n      throw error;\n    }\n  });\n  \n  // Delete chat session\n  ipcMain.handle('chat:deleteSession', async (event: IpcMainInvokeEvent, sessionId: string) => {\n    try {\n      const db = getRawDatabase();\n      \n      // Delete session and all related data (cascading deletes handled by foreign keys)\n      db.prepare('DELETE FROM chat_sessions WHERE id = ?').run(sessionId);\n      \n      return true;\n    } catch (error) {\n      console.error(`Failed to delete chat session ${sessionId}:`, error);\n      throw error;\n    }\n  });\n  \n  // List chat sessions\n  ipcMain.handle('chat:listSessions', async () => {\n    try {\n      const db = getRawDatabase();\n      const sessions = db.prepare(`\n        SELECT * FROM chat_sessions \n        ORDER BY updated DESC\n      `).all();\n      \n      return sessions;\n    } catch (error) {\n      console.error('Failed to list chat sessions:', error);\n      throw error;\n    }\n  });\n}\n\nfunction setupFileSystemHandlers(): void {\n  // Get workspace files\n  ipcMain.handle('filesystem:getWorkspaceFiles', async (event: IpcMainInvokeEvent, rootPath?: string) => {\n    try {\n      const fs = require('fs').promises;\n      const path = require('path');\n      \n      // Use provided rootPath or default to the current working directory\n      const workspacePath = rootPath || process.cwd();\n      \n      async function getFiles(dirPath: string, basePath: string = workspacePath): Promise<any[]> {\n        const items: any[] = [];\n        \n        try {\n          const entries = await fs.readdir(dirPath, { withFileTypes: true });\n          \n          for (const entry of entries) {\n            // Skip hidden files and node_modules\n            if (entry.name.startsWith('.') || entry.name === 'node_modules') {\n              continue;\n            }\n            \n            const fullPath = path.join(dirPath, entry.name);\n            const relativePath = path.relative(basePath, fullPath);\n            \n            const item = {\n              name: entry.name,\n              path: fullPath,\n              relativePath: relativePath || entry.name,\n              type: entry.isDirectory() ? 'directory' : 'file',\n              children: undefined as any[] | undefined\n            };\n            \n            // For directories, recursively get children (limit depth to avoid performance issues)\n            if (entry.isDirectory() && relativePath.split(path.sep).length < 3) {\n              try {\n                item.children = await getFiles(fullPath, basePath);\n              } catch (error) {\n                // Skip directories we can't read\n                console.warn(`Cannot read directory ${fullPath}:`, error);\n                item.children = [];\n              }\n            }\n            \n            items.push(item);\n          }\n        } catch (error) {\n          console.error(`Error reading directory ${dirPath}:`, error);\n        }\n        \n        return items.sort((a, b) => {\n          // Directories first, then files, both alphabetically\n          if (a.type === 'directory' && b.type === 'file') return -1;\n          if (a.type === 'file' && b.type === 'directory') return 1;\n          return a.name.localeCompare(b.name);\n        });\n      }\n      \n      const files = await getFiles(workspacePath);\n      console.log(`\uD83D\uDCC1 Retrieved ${files.length} workspace files from ${workspacePath}`);\n      return files;\n      \n    } catch (error) {\n      console.error('Error getting workspace files:', error);\n      return [];\n    }\n  });\n\n  // Read file with content\n  ipcMain.handle('fs:readFileContent', async (event: IpcMainInvokeEvent, filePath: string) => {\n    try {\n      const fs = require('fs').promises;\n      const path = require('path');\n      \n      // Security: resolve path relative to current working directory\n      const fullPath = path.resolve(process.cwd(), filePath);\n      \n      // Security: ensure file is within the workspace\n      if (!fullPath.startsWith(process.cwd())) {\n        throw new Error('Access denied: file outside workspace');\n      }\n      \n      const content = await fs.readFile(fullPath, 'utf8');\n      console.log(`\uD83D\uDCC1 Read file: ${filePath}`);\n      return content;\n    } catch (error) {\n      console.error(`Failed to read file ${filePath}:`, error);\n      throw error;\n    }\n  });\n  \n  // Write file with content\n  ipcMain.handle('fs:writeFileContent', async (event: IpcMainInvokeEvent, filePath: string, content: string) => {\n    try {\n      const fs = require('fs').promises;\n      const path = require('path');\n      \n      const fullPath = path.resolve(process.cwd(), filePath);\n      \n      // Security check\n      if (!fullPath.startsWith(process.cwd())) {\n        throw new Error('Access denied: file outside workspace');\n      }\n      \n      // Ensure directory exists\n      await fs.mkdir(path.dirname(fullPath), { recursive: true });\n      await fs.writeFile(fullPath, content, 'utf8');\n      console.log(`\uD83D\uDCC1 Wrote file: ${filePath}`);\n      return true;\n    } catch (error) {\n      console.error(`Failed to write file ${filePath}:`, error);\n      throw error;\n    }\n  });\n  \n  // Create directory\n  ipcMain.handle('fs:createDirectory', async (event: IpcMainInvokeEvent, dirPath: string) => {\n    try {\n      const fs = require('fs').promises;\n      const path = require('path');\n      \n      const fullPath = path.resolve(process.cwd(), dirPath);\n      \n      if (!fullPath.startsWith(process.cwd())) {\n        throw new Error('Access denied: directory outside workspace');\n      }\n      \n      await fs.mkdir(fullPath, { recursive: true });\n      console.log(`\uD83D\uDCC1 Created directory: ${dirPath}`);\n      return true;\n    } catch (error) {\n      console.error(`Failed to create directory ${dirPath}:`, error);\n      throw error;\n    }\n  });\n  \n  // Delete file\n  ipcMain.handle('fs:deleteFile', async (event: IpcMainInvokeEvent, filePath: string) => {\n    try {\n      const fs = require('fs').promises;\n      const path = require('path');\n      \n      const fullPath = path.resolve(process.cwd(), filePath);\n      \n      if (!fullPath.startsWith(process.cwd())) {\n        throw new Error('Access denied: file outside workspace');\n      }\n      \n      await fs.unlink(fullPath);\n      console.log(`\uD83D\uDCC1 Deleted file: ${filePath}`);\n      return true;\n    } catch (error) {\n      console.error(`Failed to delete file ${filePath}:`, error);\n      throw error;\n    }\n  });\n  \n  // Delete directory\n  ipcMain.handle('fs:deleteDirectory', async (event: IpcMainInvokeEvent, dirPath: string) => {\n    try {\n      const fs = require('fs').promises;\n      const path = require('path');\n      \n      const fullPath = path.resolve(process.cwd(), dirPath);\n      \n      if (!fullPath.startsWith(process.cwd())) {\n        throw new Error('Access denied: directory outside workspace');\n      }\n      \n      await fs.rmdir(fullPath, { recursive: true });\n      console.log(`\uD83D\uDCC1 Deleted directory: ${dirPath}`);\n      return true;\n    } catch (error) {\n      console.error(`Failed to delete directory ${dirPath}:`, error);\n      throw error;\n    }\n  });\n\n  // Move file or directory\n  ipcMain.handle('fs:moveFile', async (event: IpcMainInvokeEvent, sourcePath: string, destPath: string) => {\n    try {\n      const fs = require('fs').promises;\n      const path = require('path');\n      const workspace = process.cwd();\n      const fullSource = path.resolve(workspace, sourcePath);\n      const fullDest = path.resolve(workspace, destPath);\n\n      // Security: ensure both source and dest are within workspace\n      if (!fullSource.startsWith(workspace) || !fullDest.startsWith(workspace)) {\n        throw new Error('Access denied: cannot move items outside workspace');\n      }\n\n      // Ensure destination directory exists\n      await fs.mkdir(path.dirname(fullDest), { recursive: true });\n      // Perform rename/move\n      await fs.rename(fullSource, fullDest);\n      console.log(`\uD83D\uDCC1 Moved item from ${sourcePath} to ${destPath}`);\n      return true;\n    } catch (error) {\n      console.error(`Failed to move item from ${sourcePath} to ${destPath}:`, error);\n      throw error;\n    }\n  });\n\n  // Basic file system operations (placeholder for Phase 3)\n  \n  // Read file (placeholder)\n  ipcMain.handle('fs:readFile', async (event: IpcMainInvokeEvent, filePath: string) => {\n    // This will be implemented in Phase 3 with proper security\n    console.log(`\uD83D\uDCC1 [Placeholder] Read file: ${filePath}`);\n    return null;\n  });\n  \n  // Write file (placeholder)\n  ipcMain.handle('fs:writeFile', async (event: IpcMainInvokeEvent, filePath: string, content: string) => {\n    // This will be implemented in Phase 3 with proper security\n    console.log(`\uD83D\uDCC1 [Placeholder] Write file: ${filePath}`);\n    return true;\n  });\n  \n  // Check if file exists (placeholder)\n  ipcMain.handle('fs:exists', async (event: IpcMainInvokeEvent, filePath: string) => {\n    // This will be implemented in Phase 3 with proper security\n    console.log(`\uD83D\uDCC1 [Placeholder] Check file exists: ${filePath}`);\n    return false;\n  });\n}\n\n// Error handling wrapper for IPC handlers\nfunction handleIPC<T extends keyof IPCChannels>(\n  channel: T,\n  handler: (event: IpcMainInvokeEvent, ...args: any[]) => Promise<IPCChannels[T]['result']>\n): void {\n  ipcMain.handle(channel, async (event: IpcMainInvokeEvent, ...args: any[]) => {\n    try {\n      return await handler(event, ...args);\n    } catch (error) {\n      console.error(`IPC Error in ${channel}:`, error);\n      \n      // Return structured error for renderer to handle\n      return {\n        error: true,\n        message: error instanceof Error ? error.message : 'Unknown error',\n        stack: error instanceof Error ? error.stack : undefined\n      };\n    }\n  });\n}\n\nfunction setupSystemHandlers(): void {\n  // Get system capabilities (RAM, CPU, GPU, disk space)\n  ipcMain.handle('system:getCapabilities', async () => {\n    try {\n      const os = require('os');\n      const fs = require('fs').promises;\n      const path = require('path');\n      const { execSync } = require('child_process');\n      \n      // Get total and available RAM\n      const totalRam = Math.round(os.totalmem() / (1024 * 1024)); // Convert to MB\n      const freeRam = Math.round(os.freemem() / (1024 * 1024)); // Convert to MB\n      \n      // Get CPU info\n      const cpuCores = os.cpus().length;\n      \n      // Get disk space (for the current drive)\n      let diskSpace = 0;\n      let availableDiskSpace = 0;\n      \n      try {\n        // Different commands based on platform\n        if (process.platform === 'win32') {\n          // Windows\n          const homeDir = os.homedir();\n          const drive = homeDir.split(path.sep)[0];\n          const output = execSync(`wmic logicaldisk where \"DeviceID='${drive}'\" get Size,FreeSpace /format:csv`).toString();\n          const lines = output.trim().split('\\n');\n          if (lines.length >= 2) {\n            const values = lines[1].split(',');\n            if (values.length >= 3) {\n              availableDiskSpace = Math.round(parseInt(values[1]) / (1024 * 1024)); // Convert to MB\n              diskSpace = Math.round(parseInt(values[2]) / (1024 * 1024)); // Convert to MB\n            }\n          }\n        } else if (process.platform === 'darwin') {\n          // macOS\n          const homeDir = os.homedir();\n          const output = execSync(`df -k \"${homeDir}\"`).toString();\n          const lines = output.trim().split('\\n');\n          if (lines.length >= 2) {\n            const values = lines[1].split(/\\s+/);\n            if (values.length >= 4) {\n              diskSpace = Math.round(parseInt(values[1]) * 1024 / (1024 * 1024)); // Convert to MB\n              availableDiskSpace = Math.round(parseInt(values[3]) * 1024 / (1024 * 1024)); // Convert to MB\n            }\n          }\n        } else if (process.platform === 'linux') {\n          // Linux\n          const homeDir = os.homedir();\n          const output = execSync(`df -k \"${homeDir}\"`).toString();\n          const lines = output.trim().split('\\n');\n          if (lines.length >= 2) {\n            const values = lines[1].split(/\\s+/);\n            if (values.length >= 4) {\n              diskSpace = Math.round(parseInt(values[1]) * 1024 / (1024 * 1024)); // Convert to MB\n              availableDiskSpace = Math.round(parseInt(values[3]) * 1024 / (1024 * 1024)); // Convert to MB\n            }\n          }\n        }\n      } catch (error) {\n        console.error('Error getting disk space:', error);\n      }\n      \n      // Try to get GPU info\n      let gpuInfo = null;\n      try {\n        if (process.platform === 'win32') {\n          // Windows\n          const output = execSync('wmic path win32_VideoController get Name,AdapterRAM /format:csv').toString();\n          const lines = output.trim().split('\\n');\n          if (lines.length >= 2) {\n            const values = lines[1].split(',');\n            if (values.length >= 3) {\n              const gpuName = values[1];\n              const gpuMemory = Math.round(parseInt(values[2]) / (1024 * 1024)); // Convert to MB\n              gpuInfo = {\n                name: gpuName,\n                memory: gpuMemory\n              };\n            }\n          }\n        } else if (process.platform === 'darwin') {\n          // macOS\n          const output = execSync('system_profiler SPDisplaysDataType').toString();\n          const match = output.match(/Chipset Model: (.+?)[\\r\\n]/);\n          const vramMatch = output.match(/VRAM \\(Total\\): (\\d+) MB/);\n          if (match && vramMatch) {\n            gpuInfo = {\n              name: match[1],\n              memory: parseInt(vramMatch[1])\n            };\n          }\n        } else if (process.platform === 'linux') {\n          // Linux\n          try {\n            const output = execSync('lspci | grep -i vga').toString();\n            const match = output.match(/VGA compatible controller: (.+)/);\n            if (match) {\n              gpuInfo = {\n                name: match[1],\n                memory: 0 // Can't reliably get VRAM on Linux without additional tools\n              };\n            }\n          } catch (error) {\n            console.error('Error getting GPU info on Linux:', error);\n          }\n        }\n      } catch (error) {\n        console.error('Error getting GPU info:', error);\n      }\n      \n      // Determine recommended models based on available RAM\n      const recommendedModels = [];\n      \n      if (freeRam >= 8 * 1024) { // 8 GB+\n        recommendedModels.push('llama2-13b-chat-q4_0', 'mixtral-8x7b-instruct-v0.1-q4_0');\n      } else if (freeRam >= 4 * 1024) { // 4 GB+\n        recommendedModels.push('llama2-7b-chat-q4_0', 'mistral-7b-instruct-v0.1-q4_0');\n      } else if (freeRam >= 2 * 1024) { // 2 GB+\n        recommendedModels.push('orca-mini-3b-q4_0', 'phi-2-q4_0');\n      }\n      \n      return {\n        totalRam,\n        availableRam: freeRam,\n        cpuCores,\n        diskSpace,\n        availableDiskSpace,\n        gpuInfo,\n        recommendedModels\n      };\n    } catch (error) {\n      console.error('Error getting system capabilities:', error);\n      throw error;\n    }\n  });\n\n  // Hardware assessment for LLM usage\n  ipcMain.handle('system:assessHardwareForLLM', async () => {\n    try {\n      const { HardwareAssessor } = require('../services/hardware-assessor');\n      const hardwareAssessor = new HardwareAssessor();\n      \n      const assessment = await hardwareAssessor.assessHardwareForLLM();\n      return assessment;\n    } catch (error) {\n      console.error('Error assessing hardware for LLM:', error);\n      return {\n        isCapable: false,\n        warnings: ['Failed to assess hardware capabilities'],\n        limitations: ['Hardware assessment failed'],\n        optimizationTips: ['Try running the application with administrator privileges']\n      };\n    }\n  });\n}\n\nfunction setupLLMHandlers(): void {\n  const services = tanukiApp.getServices();\n  const openrouterService = services.openrouter;\n\n  // OpenRouter specific handlers\n  ipcMain.handle('openrouter:checkHealth', async () => {\n    if (!openrouterService) throw new Error('OpenRouterService not available via getServices().openrouter');\n    try {\n      const health = await openrouterService.checkHealth();\n      return health;\n    } catch (error) {\n      console.error('Error checking OpenRouter health:', error);\n      return {\n        isConnected: false,\n        availableModels: [],\n        lastChecked: new Date(),\n        error: error instanceof Error ? error.message : 'Unknown error'\n      };\n    }\n  });\n\n  ipcMain.handle('openrouter:listModels', async () => {\n    if (!openrouterService) throw new Error('OpenRouterService not available via getServices().openrouter');\n    try {\n      return await openrouterService.getAvailableFreeModels();\n    } catch (error) {\n      console.error('Error listing OpenRouter models:', error);\n      return [];\n    }\n  });\n\n  ipcMain.handle('openrouter:generate', async (event: IpcMainInvokeEvent, params: any) => {\n    if (!openrouterService) throw new Error('OpenRouterService not available via getServices().openrouter');\n    try {\n      return await openrouterService.generate(params);\n    } catch (error) {\n      console.error('Error generating with OpenRouter:', error);\n      throw error;\n    }\n  });\n\n  ipcMain.handle('openrouter:updateApiKey', async (event: IpcMainInvokeEvent, apiKey: string) => {\n    if (!openrouterService) throw new Error('OpenRouterService not available via getServices().openrouter');\n    try {\n      openrouterService.setApiKey(apiKey);\n      return true;\n    } catch (error) {\n      console.error('Error updating OpenRouter API key:', error);\n      throw error;\n    }\n  });\n\n  ipcMain.handle('openrouter:getRecommendations', async (event: IpcMainInvokeEvent, taskType: string) => {\n    if (!openrouterService) throw new Error('OpenRouterService not available via getServices().openrouter');\n    try {\n      return await openrouterService.getModelRecommendations(taskType as any);\n    } catch (error) {\n      console.error('Error getting model recommendations:', error);\n      return [];\n    }\n  });\n\n  ipcMain.handle('openrouter:getBestModel', async (event: IpcMainInvokeEvent, taskType: string) => {\n    if (!openrouterService) throw new Error('OpenRouterService not available via getServices().openrouter');\n    try {\n      return await openrouterService.getBestFreeModelForTask(taskType as any);\n    } catch (error) {\n      console.error('Error getting best model for task:', error);\n      return null;\n    }\n  });\n\n  // Enhanced LLM handlers\n  ipcMain.handle('enhancedLLM:processRequest', async (event: IpcMainInvokeEvent, request: any) => {\n    try {\n      return await enhancedProcessRequest(request);\n    } catch (error) {\n      console.error('Error processing enhancedLLM request:', error);\n      throw error;\n    }\n  });\n\n  ipcMain.handle('enhancedLLM:getStatus', async () => {\n    try {\n      return await enhancedGetStatus();\n    } catch (error) {\n      console.error('Error getting enhancedLLM status:', error);\n      throw error;\n    }\n  });\n\n  ipcMain.handle('enhancedLLM:testComplexity', async (event: IpcMainInvokeEvent, query: string) => {\n    try {\n      return await enhancedTestComplexity(query);\n    } catch (error) {\n      console.error('Error testing complexity with enhancedLLM:', error);\n      throw error;\n    }\n  });\n\n  ipcMain.handle('enhancedLLM:setLLMDrivenComplexity', async (event: IpcMainInvokeEvent, enabled: boolean) => {\n    try {\n      await enhancedSetLLMDrivenComplexity(enabled);\n      return { success: true };\n    } catch (error) {\n      console.error('Error setting LLM-driven complexity:', error);\n      throw new Error(`Failed to set LLM-driven complexity: ${error instanceof Error ? error.message : String(error)}`);\n    }\n  });\n\n  // System and Model Management Handlers (placeholders or to be reviewed)\n  // These might need to interact with systemMonitor or other services\n  ipcMain.handle('system:getCapabilities', async () => { \n    // const systemMonitor = tanukiApp.getServices()?.systemMonitor;\n    // return systemMonitor?.getCapabilities(); \n    return { /* placeholder */ }; \n  });\n  \n  ipcMain.handle('system:getCurrentMetrics', async () => { \n    // const systemMonitor = tanukiApp.getServices()?.systemMonitor;\n    // return systemMonitor?.getCurrentMetrics(); \n    return { /* placeholder */ }; \n  });\n  \n  ipcMain.handle('models:getRecommendations', async () => { \n    return []; /* placeholder */ \n  });\n  \n  ipcMain.handle('models:getInstallationStatus', async (event: IpcMainInvokeEvent, modelName: string) => { \n    return { modelName, installed: false }; /* placeholder */ \n  });\n}\n\nfunction setupWindowControlHandlers(): void {\n  const { BrowserWindow, ipcMain } = require('electron');\n  \n  // Minimize window\n  ipcMain.on('minimize-window', (event: Electron.IpcMainEvent) => {\n    const win = BrowserWindow.fromWebContents(event.sender);\n    if (win) {\n      win.minimize();\n    }\n  });\n  \n  // Maximize window\n  ipcMain.on('maximize-window', (event: Electron.IpcMainEvent) => {\n    const win = BrowserWindow.fromWebContents(event.sender);\n    if (win) {\n      if (win.isMaximized()) {\n        win.unmaximize();\n      } else {\n        win.maximize();\n      }\n      // Notify the renderer of the maximized state change\n      event.sender.send('window-maximized-change', win.isMaximized());\n    }\n  });\n  \n  // Close window\n  ipcMain.on('close-window', (event: Electron.IpcMainEvent) => {\n    const win = BrowserWindow.fromWebContents(event.sender);\n    if (win) {\n      win.close();\n    }\n  });\n  \n  // Toggle fullscreen\n  ipcMain.on('toggle-fullscreen', (event: Electron.IpcMainEvent) => {\n    const win = BrowserWindow.fromWebContents(event.sender);\n    if (win) {\n      win.setFullScreen(!win.isFullScreen());\n    }\n  });\n  \n  // Check if window is maximized\n  ipcMain.handle('window:isMaximized', (event: Electron.IpcMainInvokeEvent) => {\n    const win = BrowserWindow.fromWebContents(event.sender);\n    return win ? win.isMaximized() : false;\n  });\n  \n  // Check if window is in fullscreen\n  ipcMain.handle('window:isFullScreen', (event: Electron.IpcMainInvokeEvent) => {\n    const win = BrowserWindow.fromWebContents(event.sender);\n    return win ? win.isFullScreen() : false;\n  });\n  \n  // Set up event listeners for window state changes\n  const allWindows = BrowserWindow.getAllWindows();\n  allWindows.forEach((win: Electron.BrowserWindow) => {\n    win.on('maximize', () => {\n      win.webContents.send('window-maximized-change', true);\n    });\n    \n    win.on('unmaximize', () => {\n      win.webContents.send('window-maximized-change', false);\n    });\n    \n    win.on('enter-full-screen', () => {\n      win.webContents.send('window-fullscreen-change', true);\n    });\n    \n    win.on('leave-full-screen', () => {\n      win.webContents.send('window-fullscreen-change', false);\n    });\n  });\n}\n\nfunction setupProxyHandlers(): void {\n  // Import proxy server\n  const { proxyServer } = require('../ProxyServer');\n\n  // Get proxy status\n  ipcMain.handle('get-proxy-status', () => {\n    const status = proxyServer.getStatus();\n    return {\n      active: status.running,\n      port: status.port,\n      clients: status.clientCount,\n      clientDetails: status.clients\n    };\n  });\n  \n  // Start proxy server\n  ipcMain.handle('start-proxy-server', async () => {\n    try {\n      // Get the window state from main process\n      const mainWindow = require('../main').tanukiApp.getMainWindow();\n      const windowState = {\n        proxyActive: false,\n        proxyPort: null,\n        connectedClients: 0,\n        qrCodeUrl: null\n      };\n\n      if (windowState.proxyActive) {\n        return {\n          success: true,\n          active: true,\n          port: windowState.proxyPort,\n          clients: windowState.connectedClients\n        };\n      }\n\n      const port = await proxyServer.start();\n      \n      // Update window state\n      windowState.proxyActive = true;\n      windowState.proxyPort = port;\n      \n      return {\n        success: true,\n        active: true,\n        port,\n        clients: 0\n      };\n    } catch (error) {\n      console.error('Failed to start proxy server:', error);\n      return {\n        success: false,\n        error: error instanceof Error ? error.message : 'Unknown error'\n      };\n    }\n  });\n  \n  // Stop proxy server\n  ipcMain.handle('stop-proxy-server', async () => {\n    try {\n      await proxyServer.stop();\n      \n      // Update window state in main process\n      const mainWindow = require('../main').tanukiApp.getMainWindow();\n      const windowState = {\n        proxyActive: false,\n        proxyPort: null,\n        connectedClients: 0,\n        qrCodeUrl: null\n      };\n      \n      return { success: true };\n    } catch (error) {\n      console.error('Failed to stop proxy server:', error);\n      return {\n        success: false,\n        error: error instanceof Error ? error.message : 'Unknown error'\n      };\n    }\n  });\n  \n  // Generate pairing QR code\n  ipcMain.handle('generate-pairing-qrcode', async () => {\n    try {\n      const result = await proxyServer.generatePairingQRCode();\n      \n      // Update window state in main process\n      const mainWindow = require('../main').tanukiApp.getMainWindow();\n      const windowState = {\n        qrCodeUrl: result.qrCode\n      };\n      \n      return {\n        success: true,\n        qrCode: result.qrCode,\n        token: result.token,\n        connectionUrl: result.connectionUrl\n      };\n    } catch (error) {\n      console.error('Failed to generate QR code:', error);\n      return {\n        success: false,\n        error: error instanceof Error ? error.message : 'Unknown error'\n      };\n    }\n  });\n  \n  // Show proxy status window\n  ipcMain.handle('show-proxy-status-window', async () => {\n    try {\n      await proxyServer.showStatusWindow();\n      return { success: true };\n    } catch (error) {\n      console.error('Failed to show proxy status window:', error);\n      return {\n        success: false,\n        error: error instanceof Error ? error.message : 'Unknown error'\n      };\n    }\n  });\n  \n  // Send chat response to mobile client\n  ipcMain.handle('send-proxy-chat-response', async (event, args) => {\n    const { clientId, message, messageId } = args;\n    const success = proxyServer.sendChatResponse(clientId, message, messageId);\n    return { success };\n  });\n\n  // Forward proxy server lifecycle events to renderer\n  const mainWindow = tanukiApp.getMainWindow();\n  proxyServer.on('started', (port: number) => {\n    mainWindow?.webContents.send('proxy-status-changed', {\n      active: true,\n      port,\n      clients: proxyServer.getConnectedClients().length\n    });\n  });\n  proxyServer.on('stopped', () => {\n    mainWindow?.webContents.send('proxy-status-changed', {\n      active: false,\n      port: null,\n      clients: 0\n    });\n  });\n}\n\n// Clean up IPC handlers on app shutdown\nexport function cleanupIPC(): void {\n  // Remove all IPC handlers\n  ipcMain.removeAllListeners();\n  console.log('\uD83D\uDD0C IPC handlers cleaned up');\n} ", "interface OpenRouterModel {\n  id: string;\n  name: string;\n  description: string;\n  pricing: {\n    prompt: number;\n    completion: number;\n  };\n  context_length: number;\n  architecture: {\n    modality: string;\n    tokenizer: string;\n    instruct_type?: string;\n  };\n  top_provider: {\n    max_completion_tokens?: number;\n    is_moderated: boolean;\n  };\n  per_request_limits?: {\n    prompt_tokens: number;\n    completion_tokens: number;\n  };\n}\n\ninterface FreeModelConfig {\n  id: string;\n  displayName: string;\n  description: string;\n  specialization: string[];\n  isAvailable: boolean;\n  rateLimits: {\n    requestsPerMinute: number;\n    tokensPerDay: number;\n  };\n}\n\nexport class OpenRouterService {\n  private baseUrl = 'https://openrouter.ai/api/v1';\n  private apiKey: string | null = null;\n  private freeModels: FreeModelConfig[] = [\n    {\n      id: 'meta-llama/llama-3.1-8b-instruct:free',\n      displayName: 'Llama 3.1 8B (Free)',\n      description: 'Fast and capable model for general conversation and reasoning',\n      specialization: ['conversation', 'reasoning', 'general'],\n      isAvailable: true,\n      rateLimits: {\n        requestsPerMinute: 10,\n        tokensPerDay: 200000\n      }\n    },\n    {\n      id: 'google/gemma-2-9b-it:free',\n      displayName: 'Gemma 2 9B (Free)',\n      description: 'Google\\'s efficient model optimized for instruction following',\n      specialization: ['conversation', 'instruction-following', 'coding'],\n      isAvailable: true,\n      rateLimits: {\n        requestsPerMinute: 10,\n        tokensPerDay: 200000\n      }\n    },\n    {\n      id: 'microsoft/phi-3-mini-128k-instruct:free',\n      displayName: 'Phi-3 Mini (Free)',\n      description: 'Compact yet powerful model from Microsoft, great for coding tasks',\n      specialization: ['coding', 'problem-solving', 'reasoning'],\n      isAvailable: true,\n      rateLimits: {\n        requestsPerMinute: 15,\n        tokensPerDay: 100000\n      }\n    },\n    {\n      id: 'mistralai/mistral-7b-instruct:free',\n      displayName: 'Mistral 7B (Free)',\n      description: 'Balanced model with strong multilingual capabilities',\n      specialization: ['conversation', 'multilingual', 'creative-writing'],\n      isAvailable: true,\n      rateLimits: {\n        requestsPerMinute: 10,\n        tokensPerDay: 150000\n      }\n    }\n  ];\n\n  constructor() {\n    // API key is optional for free models, but improves rate limits when provided\n    this.apiKey = process.env.OPENROUTER_API_KEY || null;\n  }\n\n  setApiKey(apiKey: string): void {\n    this.apiKey = apiKey || null;\n  }\n\n  async checkHealth(): Promise<{\n    isConnected: boolean;\n    availableModels: FreeModelConfig[];\n    lastChecked: Date;\n    error?: string;\n  }> {\n    try {\n      // Make a test request to the OpenRouter API\n      const headers: Record<string, string> = {\n        'Content-Type': 'application/json',\n        'HTTP-Referer': 'https://tanukimcp.com',\n        'X-Title': 'TanukiMCP Atlas'\n      };\n\n      if (this.apiKey) {\n        headers['Authorization'] = `Bearer ${this.apiKey}`;\n      }\n\n      const response = await fetch(`${this.baseUrl}/models`, {\n        method: 'GET',\n        headers\n      });\n\n      if (!response.ok) {\n        throw new Error(`OpenRouter API error: ${response.status}`);\n      }\n\n      // If we get here, the connection is working\n      const availableModels = await this.getAvailableFreeModels();\n      return {\n        isConnected: true,\n        availableModels,\n        lastChecked: new Date()\n      };\n    } catch (error) {\n      console.error('OpenRouter health check failed:', error);\n      return {\n        isConnected: false,\n        availableModels: [],\n        lastChecked: new Date(),\n        error: error instanceof Error ? error.message : 'Unknown error'\n      };\n    }\n  }\n\n  async getAvailableFreeModels(): Promise<FreeModelConfig[]> {\n    try {\n      // For free models, we return our curated list\n      // In a real implementation, you might want to verify availability via API\n      return this.freeModels.filter(model => model.isAvailable);\n    } catch (error) {\n      console.error('Failed to get available free models:', error);\n      return [];\n    }\n  }\n\n  // Ensure model is a free model (used to enforce free-only approach)\n  ensureFreeModel(modelId: string): string {\n    // If the provided model ID is in our free model list, use it\n    const isFreeModel = this.freeModels.some(model => model.id === modelId);\n    \n    if (isFreeModel) {\n      return modelId;\n    }\n    \n    // If not a free model, return the default free model\n    console.log(`Warning: Non-free model requested (${modelId}). Using default free model instead.`);\n    return 'meta-llama/llama-3.1-8b-instruct:free';\n  }\n\n  async generate(request: {\n    model: string;\n    messages: Array<{ role: string; content: string }>;\n    temperature?: number;\n    max_tokens?: number;\n    stream?: boolean;\n  }): Promise<{\n    content: string;\n    usage: {\n      prompt_tokens: number;\n      completion_tokens: number;\n      total_tokens: number;\n    };\n  }> {\n    // Ensure we're only using free models\n    const model = this.ensureFreeModel(request.model);\n    \n    const headers: Record<string, string> = {\n      'Content-Type': 'application/json',\n      'HTTP-Referer': 'https://tanukimcp.com',\n      'X-Title': 'TanukiMCP Atlas'\n    };\n\n    if (this.apiKey) {\n      headers['Authorization'] = `Bearer ${this.apiKey}`;\n    }\n\n    const response = await fetch(`${this.baseUrl}/chat/completions`, {\n      method: 'POST',\n      headers,\n      body: JSON.stringify({\n        model: model,\n        messages: request.messages,\n        temperature: request.temperature || 0.7,\n        max_tokens: request.max_tokens || 1000,\n        stream: false // For simplicity, we'll start without streaming\n      })\n    });\n\n    if (!response.ok) {\n      const errorData = await response.text();\n      throw new Error(`OpenRouter API error: ${response.status} - ${errorData}`);\n    }\n\n    const data = await response.json();\n    \n    return {\n      content: data.choices[0].message.content,\n      usage: data.usage\n    };\n  }\n\n  async getModelRecommendations(taskType: 'coding' | 'reasoning' | 'conversation' | 'creative' | 'general'): Promise<FreeModelConfig[]> {\n    const availableModels = await this.getAvailableFreeModels();\n    \n    return availableModels\n      .filter(model => model.specialization.includes(taskType) || model.specialization.includes('general'))\n      .sort((a, b) => {\n        // Prioritize models that specialize in the requested task\n        const aSpecific = a.specialization.includes(taskType) ? 1 : 0;\n        const bSpecific = b.specialization.includes(taskType) ? 1 : 0;\n        return bSpecific - aSpecific;\n      });\n  }\n\n  // Helper method to get the best free model for a task\n  async getBestFreeModelForTask(taskType: 'coding' | 'reasoning' | 'conversation' | 'creative' | 'general'): Promise<FreeModelConfig | null> {\n    const recommendations = await this.getModelRecommendations(taskType);\n    return recommendations.length > 0 ? recommendations[0] : null;\n  }\n\n  // Check if we have enough quota for a request (simplified implementation)\n  canMakeRequest(modelId: string, estimatedTokens: number): boolean {\n    // In a real implementation, this would track actual usage\n    // For now, we assume we can always make requests within reasonable limits\n    return estimatedTokens < 4000; // Conservative token limit per request\n  }\n\n  getModelInfo(modelId: string): FreeModelConfig | null {\n    return this.freeModels.find(model => model.id === modelId) || null;\n  }\n} ", "interface SystemInfo {\n  cpu: {\n    brand: string;\n    model: string;\n    cores: number;\n    threads: number;\n    clockSpeed: number;\n    architecture: string;\n    cache: {\n      l1d?: number;\n      l1i?: number;\n      l2?: number;\n      l3?: number;\n    };\n  };\n  memory: {\n    total: number;\n    available: number;\n    used: number;\n    type: string;\n    speed?: number;\n    slots: number;\n  };\n  gpu: {\n    name: string;\n    vendor: string;\n    vram: number;\n    driver?: string;\n    computeCapability?: string;\n    supports: string[];\n  }[];\n  storage: {\n    drives: {\n      name: string;\n      type: 'SSD' | 'HDD' | 'NVMe';\n      size: number;\n      available: number;\n      speed?: number;\n    }[];\n  };\n}interface PerformanceMetrics {\n  cpu: {\n    usage: number;\n    temperature?: number;\n    frequency: number;\n  };\n  memory: {\n    usage: number;\n    available: number;\n    cached: number;\n  };\n  gpu: {\n    usage: number;\n    memory: number;\n    temperature?: number;\n  }[];\n  disk: {\n    readSpeed: number;\n    writeSpeed: number;\n    usage: number;\n  };\n}\n\nexport class SystemMonitor {\n  private metricsCache = new Map<string, PerformanceMetrics>();\n  private lastUpdate = 0;\n  private updateInterval = 5000; // 5 seconds\n\n  async getSystemInfo(): Promise<SystemInfo> {\n    const os = require('os');\n    const { execSync } = require('child_process');\n    \n    // CPU Information\n    const cpus = os.cpus();\n    const cpu = {\n      brand: this.getCPUBrand(),\n      model: cpus[0]?.model || 'Unknown',\n      cores: cpus.length,\n      threads: cpus.length, // Simplified\n      clockSpeed: cpus[0]?.speed || 0,\n      architecture: os.arch(),\n      cache: await this.getCPUCache()\n    };\n    \n    // Memory Information\n    const memory = {\n      total: Math.round(os.totalmem() / (1024 ** 3)),\n      available: Math.round(os.freemem() / (1024 ** 3)),\n      used: Math.round((os.totalmem() - os.freemem()) / (1024 ** 3)),\n      type: await this.getMemoryType(),\n      speed: await this.getMemorySpeed(),\n      slots: await this.getMemorySlots()\n    };\n    \n    return {\n      cpu,\n      memory,\n      gpu: await this.detectGPUs(),\n      storage: await this.getStorageInfo()\n    };\n  }\n\n  private getCPUBrand(): string {\n    const os = require('os');\n    const cpus = os.cpus();\n    if (cpus[0]?.model.includes('Intel')) return 'Intel';\n    if (cpus[0]?.model.includes('AMD')) return 'AMD';\n    return 'Unknown';\n  }\n\n  private async getCPUCache(): Promise<any> {\n    // Platform-specific cache detection would go here\n    return {\n      l1d: undefined,\n      l1i: undefined,\n      l2: undefined,\n      l3: undefined\n    };\n  }\n\n  private async getMemoryType(): Promise<string> {\n    // Memory type detection (DDR4, DDR5, etc.)\n    return 'DDR4'; // Simplified\n  }\n\n  private async getMemorySpeed(): Promise<number | undefined> {\n    // Memory speed detection\n    return undefined;\n  }\n\n  private async getMemorySlots(): Promise<number> {\n    // Memory slot detection\n    return 4; // Simplified\n  }\n\n  private async detectGPUs(): Promise<any[]> {\n    try {\n      const { execSync } = require('child_process');\n      \n      if (process.platform === 'win32') {\n        return await this.detectWindowsGPUs();\n      } else if (process.platform === 'linux') {\n        return await this.detectLinuxGPUs();\n      } else if (process.platform === 'darwin') {\n        return await this.detectMacGPUs();\n      }\n      \n      return [];\n    } catch (error) {\n      console.error('GPU detection failed:', error);\n      return [];\n    }\n  }\n\n  private async detectWindowsGPUs(): Promise<any[]> {\n    try {\n      const { execSync } = require('child_process');\n      // Use wmic to get GPU information\n      const output = execSync('wmic path win32_VideoController get name,AdapterRAM', { encoding: 'utf8' });\n      // Parse output and return GPU info\n      return [];\n    } catch (error) {\n      return [];\n    }\n  }\n\n  private async detectLinuxGPUs(): Promise<any[]> {\n    // Linux GPU detection using lspci, nvidia-smi, etc.\n    return [];\n  }\n\n  private async detectMacGPUs(): Promise<any[]> {\n    // macOS GPU detection using system_profiler\n    return [];\n  }\n\n  private async getStorageInfo(): Promise<any> {\n    const os = require('os');\n    \n    return {\n      drives: [{\n        name: 'Primary Drive',\n        type: 'SSD' as const,\n        size: 500, // GB - simplified\n        available: 250,\n        speed: undefined\n      }]\n    };\n  }\n\n  async getCurrentMetrics(): Promise<PerformanceMetrics> {\n    const now = Date.now();\n    \n    if (now - this.lastUpdate < this.updateInterval) {\n      return this.metricsCache.get('current') || this.getDefaultMetrics();\n    }\n    \n    const metrics = await this.collectMetrics();\n    this.metricsCache.set('current', metrics);\n    this.lastUpdate = now;\n    \n    return metrics;\n  }\n\n  private async collectMetrics(): Promise<PerformanceMetrics> {\n    const os = require('os');\n    \n    return {\n      cpu: {\n        usage: await this.getCPUUsage(),\n        temperature: undefined,\n        frequency: os.cpus()[0]?.speed || 0\n      },\n      memory: {\n        usage: Math.round(((os.totalmem() - os.freemem()) / os.totalmem()) * 100),\n        available: Math.round(os.freemem() / (1024 ** 3)),\n        cached: 0\n      },\n      gpu: [],\n      disk: {\n        readSpeed: 0,\n        writeSpeed: 0,\n        usage: 0\n      }\n    };\n  }\n\n  private async getCPUUsage(): Promise<number> {\n    // CPU usage calculation\n    return Math.random() * 100; // Simplified\n  }\n\n  private getDefaultMetrics(): PerformanceMetrics {\n    return {\n      cpu: { usage: 0, frequency: 0 },\n      memory: { usage: 0, available: 0, cached: 0 },\n      gpu: [],\n      disk: { readSpeed: 0, writeSpeed: 0, usage: 0 }\n    };\n  }\n}", "import { EventEmitter } from 'events';\r\nimport { TransportConfig } from '../types';\r\n\r\nexport interface TransportEvents {\r\n  'connect': () => void;\r\n  'disconnect': () => void;\r\n  'message': (message: any) => void;\r\n  'error': (error: Error) => void;\r\n}\r\n\r\nexport abstract class BaseTransport extends EventEmitter {\r\n  protected config: TransportConfig;\r\n  protected connected: boolean = false;\r\n  protected reconnectTimer?: NodeJS.Timeout;\r\n  protected connectionId?: string;\r\n\r\n  constructor(config: TransportConfig) {\r\n    super();\r\n    this.config = config;\r\n  }\r\n\r\n  abstract connect(): Promise<void>;\r\n  abstract disconnect(): Promise<void>;\r\n  abstract send(message: any): Promise<void>;\r\n\r\n  isConnected(): boolean {\r\n    return this.connected;\r\n  }\r\n\r\n  getConfig(): TransportConfig {\r\n    return this.config;\r\n  }\r\n\r\n  protected handleConnect(): void {\r\n    this.connected = true;\r\n    this.emit('connect');\r\n  }\r\n\r\n  protected handleDisconnect(): void {\r\n    this.connected = false;\r\n    this.emit('disconnect');\r\n  }\r\n\r\n  protected handleMessage(message: any): void {\r\n    this.emit('message', message);\r\n  }\r\n\r\n  protected handleError(error: Error): void {\r\n    this.emit('error', error);\r\n  }\r\n\r\n  protected scheduleReconnect(delay: number = 5000): void {\r\n    if (this.reconnectTimer) {\r\n      clearTimeout(this.reconnectTimer);\r\n    }\r\n\r\n    this.reconnectTimer = setTimeout(async () => {\r\n      try {\r\n        await this.connect();\r\n      } catch (error) {\r\n        this.handleError(error as Error);\r\n        this.scheduleReconnect(delay * 2); // Exponential backoff\r\n      }\r\n    }, delay);\r\n  }\r\n\r\n  destroy(): void {\r\n    if (this.reconnectTimer) {\r\n      clearTimeout(this.reconnectTimer);\r\n    }\r\n    this.removeAllListeners();\r\n  }\r\n} ", "import { spawn, ChildProcess } from 'child_process';\r\nimport { BaseTransport } from './base-transport';\r\nimport { StdioTransportConfig } from '../types';\r\n\r\nexport class StdioTransport extends BaseTransport {\r\n  private childProcess?: ChildProcess;\r\n  private messageBuffer: string = '';\r\n\r\n  constructor(config: StdioTransportConfig) {\r\n    super(config);\r\n  }\r\n\r\n  async connect(): Promise<void> {\r\n    if (this.connected || this.childProcess) {\r\n      await this.disconnect();\r\n    }\r\n\r\n    const config = this.config as StdioTransportConfig;\r\n    \r\n    try {\r\n      this.childProcess = spawn(config.command, config.args || [], {\r\n        stdio: ['pipe', 'pipe', 'pipe'],\r\n        env: { ...process.env, ...config.env },\r\n        cwd: config.cwd || process.cwd()\r\n      });\r\n\r\n      this.setupChildProcessHandlers();\r\n      \r\n      // Wait for the process to start\r\n      await new Promise<void>((resolve, reject) => {\r\n        const timeout = setTimeout(() => {\r\n          reject(new Error('Connection timeout'));\r\n        }, 10000);\r\n\r\n        this.childProcess!.on('spawn', () => {\r\n          clearTimeout(timeout);\r\n          this.handleConnect();\r\n          resolve();\r\n        });\r\n\r\n        this.childProcess!.on('error', (error) => {\r\n          clearTimeout(timeout);\r\n          reject(error);\r\n        });\r\n      });\r\n\r\n    } catch (error) {\r\n      throw new Error(`Failed to start MCP server: ${error}`);\r\n    }\r\n  }\r\n\r\n  async disconnect(): Promise<void> {\r\n    if (this.childProcess) {\r\n      this.childProcess.kill('SIGTERM');\r\n      \r\n      // Wait for graceful shutdown, then force kill\r\n      setTimeout(() => {\r\n        if (this.childProcess && !this.childProcess.killed) {\r\n          this.childProcess.kill('SIGKILL');\r\n        }\r\n      }, 5000);\r\n\r\n      this.childProcess = undefined;\r\n    }\r\n    \r\n    this.handleDisconnect();\r\n  }\r\n\r\n  async send(message: any): Promise<void> {\r\n    if (!this.childProcess || !this.connected) {\r\n      throw new Error('Transport not connected');\r\n    }\r\n\r\n    const jsonMessage = JSON.stringify(message) + '\\n';\r\n    \r\n    return new Promise<void>((resolve, reject) => {\r\n      this.childProcess!.stdin!.write(jsonMessage, 'utf8', (error) => {\r\n        if (error) {\r\n          reject(error);\r\n        } else {\r\n          resolve();\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  private setupChildProcessHandlers(): void {\r\n    if (!this.childProcess) return;\r\n\r\n    // Handle stdout messages\r\n    this.childProcess.stdout!.on('data', (data: Buffer) => {\r\n      this.messageBuffer += data.toString('utf8');\r\n      this.processMessages();\r\n    });\r\n\r\n    // Handle stderr for debugging\r\n    this.childProcess.stderr!.on('data', (data: Buffer) => {\r\n      console.warn(`MCP Server stderr: ${data.toString('utf8')}`);\r\n    });\r\n\r\n    // Handle process exit\r\n    this.childProcess.on('exit', (code, signal) => {\r\n      console.log(`MCP Server exited with code ${code}, signal ${signal}`);\r\n      this.handleDisconnect();\r\n      \r\n      // Auto-reconnect if configured\r\n      const config = this.config as StdioTransportConfig;\r\n      if (code !== 0 && !signal) {\r\n        this.scheduleReconnect();\r\n      }\r\n    });\r\n\r\n    // Handle process errors\r\n    this.childProcess.on('error', (error) => {\r\n      console.error('MCP Server process error:', error);\r\n      this.handleError(error);\r\n    });\r\n  }\r\n\r\n  private processMessages(): void {\r\n    const lines = this.messageBuffer.split('\\n');\r\n    this.messageBuffer = lines.pop() || ''; // Keep incomplete line in buffer\r\n\r\n    for (const line of lines) {\r\n      if (line.trim()) {\r\n        try {\r\n          const message = JSON.parse(line);\r\n          this.handleMessage(message);\r\n        } catch (error) {\r\n          console.warn('Failed to parse JSON message:', line, error);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  destroy(): void {\r\n    this.disconnect();\r\n    super.destroy();\r\n  }\r\n} ", "import { BaseTransport } from './base-transport';\r\nimport { SSETransportConfig } from '../types';\r\n\r\n// Define EventSource interface for Node.js environment\r\ninterface EventSource {\r\n  addEventListener(type: string, listener: (event: any) => void): void;\r\n  close(): void;\r\n}\r\n\r\ndeclare const EventSource: {\r\n  new (url: string): EventSource;\r\n};\r\n\r\nexport class SSETransport extends BaseTransport {\r\n  private eventSource?: EventSource;\r\n  private sessionId?: string;\r\n  private baseUrl: string;\r\n  private headers: Record<string, string>;\r\n\r\n  constructor(config: SSETransportConfig) {\r\n    super(config);\r\n    this.baseUrl = config.url;\r\n    this.headers = config.headers || {};\r\n  }\r\n\r\n  async connect(): Promise<void> {\r\n    if (this.connected || this.eventSource) {\r\n      await this.disconnect();\r\n    }\r\n\r\n    const config = this.config as SSETransportConfig;\r\n    \r\n    try {\r\n      // First, establish a session with the server\r\n      const response = await fetch(`${this.baseUrl}/sse`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          ...this.headers\r\n        },\r\n        body: JSON.stringify({\r\n          method: 'initialize',\r\n          params: {\r\n            protocolVersion: '2024-11-05',\r\n            capabilities: {\r\n              tools: true,\r\n              resources: true,\r\n              prompts: true\r\n            },\r\n            clientInfo: {\r\n              name: 'TanukiMCP Atlas',\r\n              version: '1.0.0'\r\n            }\r\n          }\r\n        })\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error(`HTTP ${response.status}: ${response.statusText}`);\r\n      }\r\n\r\n      const initResult = await response.json() as { sessionId: string };\r\n      this.sessionId = initResult.sessionId;\r\n\r\n      // Set up EventSource for receiving messages\r\n      const sseUrl = `${this.baseUrl}/sse/${this.sessionId}`;\r\n      this.eventSource = new EventSource(sseUrl);\r\n\r\n      this.setupEventSourceHandlers();\r\n\r\n      // Wait for connection confirmation\r\n      await new Promise<void>((resolve, reject) => {\r\n        const timeout = setTimeout(() => {\r\n          reject(new Error('SSE connection timeout'));\r\n        }, config.timeout || 10000);\r\n\r\n        this.eventSource!.addEventListener('open', () => {\r\n          clearTimeout(timeout);\r\n          this.handleConnect();\r\n          resolve();\r\n        });\r\n\r\n        this.eventSource!.addEventListener('error', (event) => {\r\n          clearTimeout(timeout);\r\n          reject(new Error('SSE connection failed'));\r\n        });\r\n      });\r\n\r\n    } catch (error) {\r\n      throw new Error(`Failed to connect to MCP server via SSE: ${error}`);\r\n    }\r\n  }\r\n\r\n  async disconnect(): Promise<void> {\r\n    if (this.eventSource) {\r\n      this.eventSource.close();\r\n      this.eventSource = undefined;\r\n    }\r\n\r\n    if (this.sessionId) {\r\n      // Notify server of disconnection\r\n      try {\r\n        await fetch(`${this.baseUrl}/sse/${this.sessionId}`, {\r\n          method: 'DELETE',\r\n          headers: this.headers\r\n        });\r\n      } catch (error) {\r\n        console.warn('Failed to notify server of disconnection:', error);\r\n      }\r\n      this.sessionId = undefined;\r\n    }\r\n\r\n    this.handleDisconnect();\r\n  }\r\n\r\n  async send(message: any): Promise<void> {\r\n    if (!this.sessionId || !this.connected) {\r\n      throw new Error('Transport not connected');\r\n    }\r\n\r\n    const response = await fetch(`${this.baseUrl}/sse/${this.sessionId}`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        ...this.headers\r\n      },\r\n      body: JSON.stringify(message)\r\n    });\r\n\r\n    if (!response.ok) {\r\n      throw new Error(`HTTP ${response.status}: ${response.statusText}`);\r\n    }\r\n\r\n    // For SSE, we don't return the response here as it will come via EventSource\r\n  }\r\n\r\n  private setupEventSourceHandlers(): void {\r\n    if (!this.eventSource) return;\r\n\r\n    this.eventSource.addEventListener('message', (event) => {\r\n      try {\r\n        const message = JSON.parse(event.data);\r\n        this.handleMessage(message);\r\n      } catch (error) {\r\n        console.warn('Failed to parse SSE message:', event.data, error);\r\n      }\r\n    });\r\n\r\n    this.eventSource.addEventListener('error', (event) => {\r\n      console.error('SSE connection error:', event);\r\n      this.handleError(new Error('SSE connection error'));\r\n      \r\n      // Auto-reconnect\r\n      this.scheduleReconnect();\r\n    });\r\n\r\n    // Handle custom event types\r\n    this.eventSource.addEventListener('notification', (event) => {\r\n      try {\r\n        const notification = JSON.parse(event.data);\r\n        this.handleMessage(notification);\r\n      } catch (error) {\r\n        console.warn('Failed to parse SSE notification:', event.data, error);\r\n      }\r\n    });\r\n\r\n    this.eventSource.addEventListener('progress', (event) => {\r\n      try {\r\n        const progress = JSON.parse(event.data);\r\n        this.handleMessage(progress);\r\n      } catch (error) {\r\n        console.warn('Failed to parse SSE progress:', event.data, error);\r\n      }\r\n    });\r\n  }\r\n\r\n  destroy(): void {\r\n    this.disconnect();\r\n    super.destroy();\r\n  }\r\n} ", "import { BaseTransport } from './base-transport';\r\nimport { WebSocketTransportConfig } from '../types';\r\n\r\n// Define WebSocket interface for Node.js environment\r\ninterface WebSocket {\r\n  readyState: number;\r\n  CONNECTING: number;\r\n  OPEN: number;\r\n  CLOSING: number;\r\n  CLOSED: number;\r\n  send(data: string): void;\r\n  close(code?: number, reason?: string): void;\r\n  addEventListener(type: string, listener: (event: any) => void): void;\r\n  removeEventListener(type: string, listener: (event: any) => void): void;\r\n}\r\n\r\ndeclare const WebSocket: {\r\n  new (url: string, protocols?: string[]): WebSocket;\r\n  CONNECTING: number;\r\n  OPEN: number;\r\n  CLOSING: number;\r\n  CLOSED: number;\r\n};\r\n\r\nexport class WebSocketTransport extends BaseTransport {\r\n  private webSocket?: WebSocket;\r\n  private pingInterval?: NodeJS.Timeout;\r\n  private pongTimeout?: NodeJS.Timeout;\r\n\r\n  constructor(config: WebSocketTransportConfig) {\r\n    super(config);\r\n  }\r\n\r\n  async connect(): Promise<void> {\r\n    if (this.connected || this.webSocket) {\r\n      await this.disconnect();\r\n    }\r\n\r\n    const config = this.config as WebSocketTransportConfig;\r\n    \r\n    try {\r\n      this.webSocket = new WebSocket(config.url, config.protocols);\r\n      \r\n      this.setupWebSocketHandlers();\r\n\r\n      // Wait for connection\r\n      await new Promise<void>((resolve, reject) => {\r\n        const timeout = setTimeout(() => {\r\n          reject(new Error('WebSocket connection timeout'));\r\n        }, 10000);\r\n\r\n        this.webSocket!.addEventListener('open', () => {\r\n          clearTimeout(timeout);\r\n          this.handleConnect();\r\n          this.startHeartbeat();\r\n          resolve();\r\n        });\r\n\r\n        this.webSocket!.addEventListener('error', (event: any) => {\r\n          clearTimeout(timeout);\r\n          reject(new Error(`WebSocket connection failed: ${event.message || 'Unknown error'}`));\r\n        });\r\n      });\r\n\r\n    } catch (error) {\r\n      throw new Error(`Failed to connect to MCP server via WebSocket: ${error}`);\r\n    }\r\n  }\r\n\r\n  async disconnect(): Promise<void> {\r\n    this.stopHeartbeat();\r\n\r\n    if (this.webSocket) {\r\n      if (this.webSocket.readyState === WebSocket.OPEN) {\r\n        this.webSocket.close(1000, 'Normal closure');\r\n      }\r\n      this.webSocket = undefined;\r\n    }\r\n\r\n    this.handleDisconnect();\r\n  }\r\n\r\n  async send(message: any): Promise<void> {\r\n    if (!this.webSocket || this.webSocket.readyState !== WebSocket.OPEN) {\r\n      throw new Error('WebSocket not connected');\r\n    }\r\n\r\n    const jsonMessage = JSON.stringify(message);\r\n    this.webSocket.send(jsonMessage);\r\n  }\r\n\r\n  private setupWebSocketHandlers(): void {\r\n    if (!this.webSocket) return;\r\n\r\n    this.webSocket.addEventListener('message', (event: any) => {\r\n      try {\r\n        const message = JSON.parse(event.data);\r\n        \r\n        // Handle heartbeat responses\r\n        if (message.method === 'pong') {\r\n          this.handlePong();\r\n          return;\r\n        }\r\n\r\n        this.handleMessage(message);\r\n      } catch (error) {\r\n        console.warn('Failed to parse WebSocket message:', event.data, error);\r\n      }\r\n    });\r\n\r\n    this.webSocket.addEventListener('close', (event: any) => {\r\n      console.log(`WebSocket closed: ${event.code} ${event.reason}`);\r\n      this.handleDisconnect();\r\n      \r\n      // Auto-reconnect on unexpected closure\r\n      if (event.code !== 1000 && event.code !== 1001) {\r\n        this.scheduleReconnect();\r\n      }\r\n    });\r\n\r\n    this.webSocket.addEventListener('error', (event: any) => {\r\n      console.error('WebSocket error:', event);\r\n      this.handleError(new Error(`WebSocket error: ${event.message || 'Unknown error'}`));\r\n    });\r\n  }\r\n\r\n  private startHeartbeat(): void {\r\n    this.stopHeartbeat();\r\n\r\n    // Send ping every 30 seconds\r\n    this.pingInterval = setInterval(() => {\r\n      if (this.webSocket?.readyState === WebSocket.OPEN) {\r\n        this.send({ method: 'ping', id: Date.now() });\r\n        \r\n        // Set timeout for pong response\r\n        this.pongTimeout = setTimeout(() => {\r\n          console.warn('WebSocket ping timeout - reconnecting');\r\n          this.scheduleReconnect();\r\n        }, 10000);\r\n      }\r\n    }, 30000);\r\n  }\r\n\r\n  private stopHeartbeat(): void {\r\n    if (this.pingInterval) {\r\n      clearInterval(this.pingInterval);\r\n      this.pingInterval = undefined;\r\n    }\r\n    \r\n    if (this.pongTimeout) {\r\n      clearTimeout(this.pongTimeout);\r\n      this.pongTimeout = undefined;\r\n    }\r\n  }\r\n\r\n  private handlePong(): void {\r\n    if (this.pongTimeout) {\r\n      clearTimeout(this.pongTimeout);\r\n      this.pongTimeout = undefined;\r\n    }\r\n  }\r\n\r\n  destroy(): void {\r\n    this.stopHeartbeat();\r\n    this.disconnect();\r\n    super.destroy();\r\n  }\r\n} ", "import { BaseTransport } from './base-transport';\r\nimport { StdioTransport } from './stdio-transport';\r\nimport { SSETransport } from './sse-transport';\r\nimport { WebSocketTransport } from './websocket-transport';\r\nimport { TransportConfig, StdioTransportConfig, SSETransportConfig, WebSocketTransportConfig } from '../types';\r\n\r\nexport class TransportFactory {\r\n  static create(config: TransportConfig): BaseTransport {\r\n    switch (config.type) {\r\n      case 'stdio':\r\n        return new StdioTransport(config as StdioTransportConfig);\r\n      \r\n      case 'sse':\r\n        return new SSETransport(config as SSETransportConfig);\r\n      \r\n      case 'websocket':\r\n        return new WebSocketTransport(config as WebSocketTransportConfig);\r\n      \r\n      default:\r\n        throw new Error(`Unsupported transport type: ${(config as any).type}`);\r\n    }\r\n  }\r\n\r\n  static validateConfig(config: TransportConfig): void {\r\n    if (!config.type) {\r\n      throw new Error('Transport type is required');\r\n    }\r\n\r\n    switch (config.type) {\r\n      case 'stdio':\r\n        this.validateStdioConfig(config as StdioTransportConfig);\r\n        break;\r\n      \r\n      case 'sse':\r\n        this.validateSSEConfig(config as SSETransportConfig);\r\n        break;\r\n      \r\n      case 'websocket':\r\n        this.validateWebSocketConfig(config as WebSocketTransportConfig);\r\n        break;\r\n      \r\n      default:\r\n        throw new Error(`Unsupported transport type: ${(config as any).type}`);\r\n    }\r\n  }\r\n\r\n  private static validateStdioConfig(config: StdioTransportConfig): void {\r\n    if (!config.command) {\r\n      throw new Error('Stdio transport requires a command');\r\n    }\r\n\r\n    if (typeof config.command !== 'string') {\r\n      throw new Error('Stdio transport command must be a string');\r\n    }\r\n\r\n    if (config.args && !Array.isArray(config.args)) {\r\n      throw new Error('Stdio transport args must be an array');\r\n    }\r\n\r\n    if (config.env && typeof config.env !== 'object') {\r\n      throw new Error('Stdio transport env must be an object');\r\n    }\r\n  }\r\n\r\n  private static validateSSEConfig(config: SSETransportConfig): void {\r\n    if (!config.url) {\r\n      throw new Error('SSE transport requires a URL');\r\n    }\r\n\r\n    if (typeof config.url !== 'string') {\r\n      throw new Error('SSE transport URL must be a string');\r\n    }\r\n\r\n    try {\r\n      new URL(config.url);\r\n    } catch (error) {\r\n      throw new Error(`SSE transport URL is invalid: ${config.url}`);\r\n    }\r\n\r\n    if (config.headers && typeof config.headers !== 'object') {\r\n      throw new Error('SSE transport headers must be an object');\r\n    }\r\n\r\n    if (config.timeout && typeof config.timeout !== 'number') {\r\n      throw new Error('SSE transport timeout must be a number');\r\n    }\r\n  }\r\n\r\n  private static validateWebSocketConfig(config: WebSocketTransportConfig): void {\r\n    if (!config.url) {\r\n      throw new Error('WebSocket transport requires a URL');\r\n    }\r\n\r\n    if (typeof config.url !== 'string') {\r\n      throw new Error('WebSocket transport URL must be a string');\r\n    }\r\n\r\n    try {\r\n      const url = new URL(config.url);\r\n      if (!['ws:', 'wss:'].includes(url.protocol)) {\r\n        throw new Error('WebSocket URL must use ws:// or wss:// protocol');\r\n      }\r\n    } catch (error) {\r\n      throw new Error(`WebSocket transport URL is invalid: ${config.url}`);\r\n    }\r\n\r\n    if (config.protocols && !Array.isArray(config.protocols)) {\r\n      throw new Error('WebSocket transport protocols must be an array');\r\n    }\r\n\r\n    if (config.headers && typeof config.headers !== 'object') {\r\n      throw new Error('WebSocket transport headers must be an object');\r\n    }\r\n  }\r\n\r\n  static getSupportedTransports(): string[] {\r\n    return ['stdio', 'sse', 'websocket'];\r\n  }\r\n\r\n  static getTransportDescription(type: string): string {\r\n    switch (type) {\r\n      case 'stdio':\r\n        return 'Child process with stdin/stdout communication (local servers)';\r\n      \r\n      case 'sse':\r\n        return 'Server-Sent Events over HTTP (web-based servers)';\r\n      \r\n      case 'websocket':\r\n        return 'WebSocket bidirectional communication (real-time servers)';\r\n      \r\n      default:\r\n        return 'Unknown transport type';\r\n    }\r\n  }\r\n\r\n  static getDefaultConfig(type: string): Partial<TransportConfig> {\r\n    switch (type) {\r\n      case 'stdio':\r\n        return {\r\n          type: 'stdio',\r\n          command: '',\r\n          args: [],\r\n          env: {}\r\n        };\r\n      \r\n      case 'sse':\r\n        return {\r\n          type: 'sse',\r\n          url: '',\r\n          headers: {},\r\n          timeout: 30000\r\n        };\r\n      \r\n      case 'websocket':\r\n        return {\r\n          type: 'websocket',\r\n          url: '',\r\n          protocols: [],\r\n          headers: {}\r\n        };\r\n      \r\n      default:\r\n        throw new Error(`No default config for transport type: ${type}`);\r\n    }\r\n  }\r\n} ", "import { EventEmitter } from 'events';\r\nimport { ServerHealth, ServerStatus, HealthReport, MCPServerConfig } from '../types';\r\n\r\nexport interface HealthMonitorEvents {\r\n  'health:updated': (serverId: string, health: ServerHealth) => void;\r\n  'server:unhealthy': (serverId: string, health: ServerHealth) => void;\r\n  'server:recovered': (serverId: string, health: ServerHealth) => void;\r\n}\r\n\r\nexport class HealthMonitor extends EventEmitter {\r\n  private serverHealth: Map<string, ServerHealth> = new Map();\r\n  private healthCheckIntervals: Map<string, NodeJS.Timeout> = new Map();\r\n  private responseTimers: Map<string, { start: number; messageId: string }> = new Map();\r\n  \r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  startMonitoring(serverId: string, config: MCPServerConfig): void {\r\n    // Initialize health record\r\n    const health: ServerHealth = {\r\n      serverId,\r\n      status: 'connecting',\r\n      lastSeen: new Date(),\r\n      responseTime: 0,\r\n      errorCount: 0,\r\n      connectionAttempts: 0,\r\n      toolCount: 0,\r\n      uptime: 0\r\n    };\r\n    \r\n    this.serverHealth.set(serverId, health);\r\n\r\n    // Set up periodic health checks\r\n    const interval = setInterval(() => {\r\n      this.performHealthCheck(serverId);\r\n    }, config.healthCheckInterval);\r\n    \r\n    this.healthCheckIntervals.set(serverId, interval);\r\n  }\r\n\r\n  stopMonitoring(serverId: string): void {\r\n    const interval = this.healthCheckIntervals.get(serverId);\r\n    if (interval) {\r\n      clearInterval(interval);\r\n      this.healthCheckIntervals.delete(serverId);\r\n    }\r\n    \r\n    this.serverHealth.delete(serverId);\r\n    this.responseTimers.delete(serverId);\r\n  }\r\n\r\n  updateServerStatus(serverId: string, status: ServerStatus, error?: string): void {\r\n    const health = this.serverHealth.get(serverId);\r\n    if (!health) return;\r\n\r\n    const wasUnhealthy = this.isUnhealthy(health);\r\n    \r\n    health.status = status;\r\n    health.lastSeen = new Date();\r\n    \r\n    if (error) {\r\n      health.lastError = error;\r\n      health.errorCount++;\r\n    }\r\n    \r\n    if (status === 'connected') {\r\n      health.connectionAttempts = 0;\r\n      \r\n      // Calculate uptime\r\n      const now = Date.now();\r\n      health.uptime = now;\r\n    } else if (status === 'connecting') {\r\n      health.connectionAttempts++;\r\n    }\r\n\r\n    this.serverHealth.set(serverId, health);\r\n    this.emit('health:updated', serverId, health);\r\n\r\n    // Check for health state changes\r\n    const isNowUnhealthy = this.isUnhealthy(health);\r\n    if (!wasUnhealthy && isNowUnhealthy) {\r\n      this.emit('server:unhealthy', serverId, health);\r\n    } else if (wasUnhealthy && !isNowUnhealthy) {\r\n      this.emit('server:recovered', serverId, health);\r\n    }\r\n  }\r\n\r\n  recordRequestStart(serverId: string, messageId: string): void {\r\n    this.responseTimers.set(serverId, {\r\n      start: Date.now(),\r\n      messageId\r\n    });\r\n  }\r\n\r\n  recordRequestEnd(serverId: string, messageId: string, success: boolean): void {\r\n    const timer = this.responseTimers.get(serverId);\r\n    if (!timer || timer.messageId !== messageId) return;\r\n\r\n    const responseTime = Date.now() - timer.start;\r\n    this.responseTimers.delete(serverId);\r\n\r\n    const health = this.serverHealth.get(serverId);\r\n    if (!health) return;\r\n\r\n    // Update response time (rolling average)\r\n    if (health.responseTime === 0) {\r\n      health.responseTime = responseTime;\r\n    } else {\r\n      health.responseTime = (health.responseTime * 0.8) + (responseTime * 0.2);\r\n    }\r\n\r\n    if (!success) {\r\n      health.errorCount++;\r\n    }\r\n\r\n    health.lastSeen = new Date();\r\n    this.serverHealth.set(serverId, health);\r\n    this.emit('health:updated', serverId, health);\r\n  }\r\n\r\n  updateToolCount(serverId: string, count: number): void {\r\n    const health = this.serverHealth.get(serverId);\r\n    if (!health) return;\r\n\r\n    health.toolCount = count;\r\n    this.serverHealth.set(serverId, health);\r\n    this.emit('health:updated', serverId, health);\r\n  }\r\n\r\n  updateCapabilities(serverId: string, capabilities: { tools: boolean; resources: boolean; prompts: boolean }): void {\r\n    const health = this.serverHealth.get(serverId);\r\n    if (!health) return;\r\n\r\n    health.capabilities = capabilities;\r\n    this.serverHealth.set(serverId, health);\r\n    this.emit('health:updated', serverId, health);\r\n  }\r\n\r\n  getServerHealth(serverId: string): ServerHealth | null {\r\n    return this.serverHealth.get(serverId) || null;\r\n  }\r\n\r\n  getAllServerHealth(): Map<string, ServerHealth> {\r\n    return new Map(this.serverHealth);\r\n  }\r\n\r\n  generateHealthReport(): HealthReport {\r\n    const servers: Record<string, ServerHealth> = {};\r\n    let connectedServers = 0;\r\n    let totalTools = 0;\r\n    let externalTools = 0;\r\n\r\n    for (const [serverId, health] of this.serverHealth) {\r\n      servers[serverId] = health;\r\n      \r\n      if (health.status === 'connected') {\r\n        connectedServers++;\r\n      }\r\n      \r\n      totalTools += health.toolCount;\r\n      externalTools += health.toolCount;\r\n    }\r\n\r\n    return {\r\n      generated: new Date(),\r\n      servers,\r\n      totalServers: this.serverHealth.size,\r\n      connectedServers,\r\n      totalTools,\r\n      builtinTools: 0, // Will be updated by the main hub\r\n      externalTools\r\n    };\r\n  }\r\n\r\n  private async performHealthCheck(serverId: string): Promise<void> {\r\n    const health = this.serverHealth.get(serverId);\r\n    if (!health) return;\r\n\r\n    // Simple ping check - could be enhanced with actual MCP ping\r\n    const now = new Date();\r\n    const timeSinceLastSeen = now.getTime() - health.lastSeen.getTime();\r\n    \r\n    // Consider server unhealthy if no activity for 2 minutes\r\n    if (timeSinceLastSeen > 120000 && health.status === 'connected') {\r\n      this.updateServerStatus(serverId, 'error', 'Health check timeout');\r\n    }\r\n  }\r\n\r\n  private isUnhealthy(health: ServerHealth): boolean {\r\n    return (\r\n      health.status === 'error' ||\r\n      health.status === 'disconnected' ||\r\n      health.errorCount > 10 ||\r\n      health.responseTime > 30000 // 30 seconds\r\n    );\r\n  }\r\n\r\n  // Utility methods for health analysis\r\n  getHealthScore(serverId: string): number {\r\n    const health = this.serverHealth.get(serverId);\r\n    if (!health) return 0;\r\n\r\n    let score = 100;\r\n\r\n    // Deduct points for errors\r\n    score -= Math.min(health.errorCount * 2, 50);\r\n\r\n    // Deduct points for slow response times\r\n    if (health.responseTime > 1000) {\r\n      score -= Math.min((health.responseTime - 1000) / 100, 30);\r\n    }\r\n\r\n    // Deduct points for disconnected status\r\n    if (health.status !== 'connected') {\r\n      score -= 40;\r\n    }\r\n\r\n    // Deduct points for connection attempts\r\n    score -= Math.min(health.connectionAttempts * 5, 20);\r\n\r\n    return Math.max(score, 0);\r\n  }\r\n\r\n  getServerMetrics(serverId: string): {\r\n    healthScore: number;\r\n    availability: number;\r\n    averageResponseTime: number;\r\n    errorRate: number;\r\n  } | null {\r\n    const health = this.serverHealth.get(serverId);\r\n    if (!health) return null;\r\n\r\n    const healthScore = this.getHealthScore(serverId);\r\n    \r\n    // Calculate availability based on uptime vs total time\r\n    const totalTime = Date.now() - (health.uptime || Date.now());\r\n    const availability = totalTime > 0 ? (health.uptime / totalTime) * 100 : 0;\r\n\r\n    // Error rate calculation would need more detailed tracking\r\n    const errorRate = health.errorCount > 0 ? (health.errorCount / (health.errorCount + 100)) * 100 : 0;\r\n\r\n    return {\r\n      healthScore,\r\n      availability,\r\n      averageResponseTime: health.responseTime,\r\n      errorRate\r\n    };\r\n  }\r\n\r\n  destroy(): void {\r\n    // Clear all intervals\r\n    for (const interval of this.healthCheckIntervals.values()) {\r\n      clearInterval(interval);\r\n    }\r\n    \r\n    this.healthCheckIntervals.clear();\r\n    this.serverHealth.clear();\r\n    this.responseTimers.clear();\r\n    this.removeAllListeners();\r\n  }\r\n} ", "import { EventEmitter } from 'events';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport {\r\n  IMCPHubService,\r\n  MCPServerConfig,\r\n  ToolCall,\r\n  ToolResult,\r\n  ToolCatalog,\r\n  EnhancedToolDefinition,\r\n  ToolConflict,\r\n  HealthReport,\r\n  ServerHealth,\r\n  ExecutionContext,\r\n  ErrorRecoveryResult,\r\n  MCPHubEvents\r\n} from './types';\r\nimport { TransportFactory } from './transports/transport-factory';\r\nimport { BaseTransport } from './transports/base-transport';\r\nimport { HealthMonitor } from './health/health-monitor';\r\n\r\ninterface MCPConnection {\r\n  id: string;\r\n  config: MCPServerConfig;\r\n  transport: BaseTransport;\r\n  tools: EnhancedToolDefinition[];\r\n  lastToolSync: Date;\r\n  messageQueue: any[];\r\n  connected: boolean;\r\n}\r\n\r\nexport class MCPClientHub extends EventEmitter implements IMCPHubService {\r\n  private connections: Map<string, MCPConnection> = new Map();\r\n  private configs: Map<string, MCPServerConfig> = new Map();\r\n  private healthMonitor: HealthMonitor;\r\n  private toolCache: Map<string, EnhancedToolDefinition[]> = new Map();\r\n  private conflictResolutions: Map<string, ToolConflict> = new Map();\r\n  private pendingRequests: Map<string, { resolve: any; reject: any; timeout: NodeJS.Timeout }> = new Map();\r\n  private isInitialized: boolean = false;\r\n\r\n  constructor() {\r\n    super();\r\n    this.healthMonitor = new HealthMonitor();\r\n    this.setupHealthMonitorListeners();\r\n  }\r\n\r\n  async initialize(): Promise<void> {\r\n    if (this.isInitialized) return;\r\n\r\n    console.log('Initializing MCP Client Hub...');\r\n    \r\n    // Load saved configurations\r\n    await this.loadSavedConfigurations();\r\n    \r\n    // Auto-connect to servers with autoRestart enabled\r\n    await this.autoConnectServers();\r\n    \r\n    this.isInitialized = true;\r\n    console.log('MCP Client Hub initialized');\r\n  }\r\n\r\n  async addServer(config: MCPServerConfig): Promise<void> {\r\n    console.log(`Adding MCP server: ${config.name} (${config.id})`);\r\n    \r\n    // Validate configuration\r\n    TransportFactory.validateConfig(config.transport);\r\n    \r\n    // Store configuration\r\n    this.configs.set(config.id, config);\r\n    await this.saveConfiguration(config);\r\n    \r\n    // Connect immediately\r\n    await this.connectServer(config.id);\r\n  }\r\n\r\n  async removeServer(serverId: string): Promise<void> {\r\n    console.log(`Removing MCP server: ${serverId}`);\r\n    \r\n    // Disconnect if connected\r\n    await this.disconnectServer(serverId);\r\n    \r\n    // Remove from all maps\r\n    this.configs.delete(serverId);\r\n    this.connections.delete(serverId);\r\n    this.toolCache.delete(serverId);\r\n    \r\n    // Stop health monitoring\r\n    this.healthMonitor.stopMonitoring(serverId);\r\n    \r\n    // Remove from storage\r\n    await this.removeStoredConfiguration(serverId);\r\n    \r\n    this.emit('server:removed', serverId);\r\n  }\r\n\r\n  async connectServer(serverId: string): Promise<void> {\r\n    const config = this.configs.get(serverId);\r\n    if (!config) {\r\n      throw new Error(`Server configuration not found: ${serverId}`);\r\n    }\r\n\r\n    console.log(`Connecting to MCP server: ${config.name}`);\r\n    \r\n    // Disconnect if already connected\r\n    if (this.connections.has(serverId)) {\r\n      await this.disconnectServer(serverId);\r\n    }\r\n\r\n    try {\r\n      // Create transport\r\n      const transport = TransportFactory.create(config.transport);\r\n      \r\n      // Set up transport event handlers\r\n      this.setupTransportHandlers(serverId, transport);\r\n      \r\n      // Create connection record\r\n      const connection: MCPConnection = {\r\n        id: serverId,\r\n        config,\r\n        transport,\r\n        tools: [],\r\n        lastToolSync: new Date(),\r\n        messageQueue: [],\r\n        connected: false\r\n      };\r\n      \r\n      this.connections.set(serverId, connection);\r\n      \r\n      // Start health monitoring\r\n      this.healthMonitor.startMonitoring(serverId, config);\r\n      this.healthMonitor.updateServerStatus(serverId, 'connecting');\r\n      \r\n      // Attempt connection\r\n      await transport.connect();\r\n      \r\n      // Initialize MCP session\r\n      await this.initializeMCPSession(serverId);\r\n      \r\n      console.log(`Successfully connected to MCP server: ${config.name}`);\r\n      \r\n         } catch (error) {\r\n       const errorMessage = error instanceof Error ? error.message : String(error);\r\n       console.error(`Failed to connect to MCP server ${config.name}:`, error);\r\n       this.healthMonitor.updateServerStatus(serverId, 'error', errorMessage);\r\n      \r\n      // Schedule retry if auto-restart is enabled\r\n      if (config.autoRestart) {\r\n        setTimeout(() => {\r\n          this.reconnectServer(serverId);\r\n        }, config.retryDelay);\r\n      }\r\n      \r\n      throw error;\r\n    }\r\n  }\r\n\r\n  async disconnectServer(serverId: string): Promise<void> {\r\n    const connection = this.connections.get(serverId);\r\n    if (!connection) return;\r\n\r\n    console.log(`Disconnecting from MCP server: ${connection.config.name}`);\r\n    \r\n    try {\r\n      await connection.transport.disconnect();\r\n    } catch (error) {\r\n      console.warn(`Error disconnecting from ${serverId}:`, error);\r\n    }\r\n    \r\n    connection.connected = false;\r\n    this.healthMonitor.updateServerStatus(serverId, 'disconnected');\r\n    \r\n    this.emit('server:disconnected', serverId, 'Manual disconnect');\r\n  }\r\n\r\n  async reconnectServer(serverId: string): Promise<void> {\r\n    console.log(`Reconnecting to MCP server: ${serverId}`);\r\n    \r\n    const config = this.configs.get(serverId);\r\n    if (!config) {\r\n      throw new Error(`Server configuration not found: ${serverId}`);\r\n    }\r\n    \r\n    await this.disconnectServer(serverId);\r\n    await this.connectServer(serverId);\r\n  }\r\n\r\n  async executeToolCall(toolCall: ToolCall, context: ExecutionContext): Promise<ToolResult> {\r\n    const messageId = uuidv4();\r\n    \r\n    // Find the server that provides this tool\r\n    const { serverId, tool } = this.findToolProvider(toolCall.name);\r\n    \r\n    if (serverId === 'builtin') {\r\n      // Route to built-in tools (would need integration with built-in MCP server)\r\n      throw new Error('Built-in tool execution not implemented in hub');\r\n    }\r\n    \r\n    const connection = this.connections.get(serverId);\r\n    if (!connection || !connection.connected) {\r\n      throw new Error(`Server ${serverId} is not connected`);\r\n    }\r\n    \r\n    try {\r\n      // Record request start for metrics\r\n      this.healthMonitor.recordRequestStart(serverId, messageId);\r\n      \r\n      // Send tool call request\r\n      const mcpRequest = {\r\n        jsonrpc: '2.0',\r\n        id: messageId,\r\n        method: 'tools/call',\r\n        params: {\r\n          name: toolCall.name,\r\n          arguments: toolCall.arguments\r\n        }\r\n      };\r\n      \r\n      // Send request and wait for response\r\n      const result = await this.sendRequestAndWaitForResponse(serverId, mcpRequest, context.timeoutMs);\r\n      \r\n      // Record successful completion\r\n      this.healthMonitor.recordRequestEnd(serverId, messageId, true);\r\n      \r\n      // Update tool usage metrics\r\n      this.updateToolMetrics(serverId, toolCall.name, true);\r\n      \r\n      this.emit('tool:executed', toolCall.name, serverId, Date.now() - context.timestamp.getTime(), true);\r\n      \r\n      return this.formatToolResult(result);\r\n      \r\n    } catch (error) {\r\n      // Record failed completion\r\n      this.healthMonitor.recordRequestEnd(serverId, messageId, false);\r\n      this.updateToolMetrics(serverId, toolCall.name, false);\r\n      \r\n             this.emit('tool:failed', toolCall.name, serverId, error);\r\n       \r\n       // Attempt error recovery\r\n       const errorObj = error instanceof Error ? error : new Error(String(error));\r\n       return await this.handleToolExecutionError(errorObj, toolCall, context);\r\n    }\r\n  }\r\n\r\n  async getAllAvailableTools(): Promise<ToolCatalog> {\r\n    const tools: EnhancedToolDefinition[] = [];\r\n    const sources: string[] = ['builtin'];\r\n    const categories = new Set<string>();\r\n    const conflicts: ToolConflict[] = [];\r\n    \r\n    // Add built-in tools (placeholder - would integrate with built-in MCP server)\r\n    const builtinTools = await this.getBuiltinTools();\r\n    tools.push(...builtinTools);\r\n    builtinTools.forEach(tool => categories.add(tool.category));\r\n    \r\n    // Add external tools\r\n    for (const [serverId, connection] of this.connections) {\r\n      if (connection.connected && connection.tools.length > 0) {\r\n        sources.push(serverId);\r\n        tools.push(...connection.tools);\r\n        connection.tools.forEach(tool => categories.add(tool.category));\r\n      }\r\n    }\r\n    \r\n    // Detect and resolve conflicts\r\n    const toolsByName = new Map<string, EnhancedToolDefinition[]>();\r\n    for (const tool of tools) {\r\n      if (!toolsByName.has(tool.name)) {\r\n        toolsByName.set(tool.name, []);\r\n      }\r\n      toolsByName.get(tool.name)!.push(tool);\r\n    }\r\n    \r\n    for (const [toolName, toolVersions] of toolsByName) {\r\n      if (toolVersions.length > 1) {\r\n        const conflict: ToolConflict = {\r\n          toolName,\r\n          sources: toolVersions.map(t => t.source),\r\n          resolution: 'prefer_builtin', // Default resolution\r\n          selectedSource: toolVersions.find(t => t.source === 'builtin')?.source || toolVersions[0].source\r\n        };\r\n        conflicts.push(conflict);\r\n        this.conflictResolutions.set(toolName, conflict);\r\n      }\r\n    }\r\n    \r\n    const catalog: ToolCatalog = {\r\n      tools,\r\n      lastUpdated: new Date(),\r\n      sources,\r\n      categories: Array.from(categories),\r\n      totalTools: tools.length,\r\n      conflicts\r\n    };\r\n    \r\n    this.emit('catalog:updated', catalog);\r\n    return catalog;\r\n  }\r\n\r\n  async resolveToolConflicts(): Promise<ToolConflict[]> {\r\n    return Array.from(this.conflictResolutions.values());\r\n  }\r\n\r\n  async getHealthReport(): Promise<HealthReport> {\r\n    const report = this.healthMonitor.generateHealthReport();\r\n    \r\n    // Add built-in tools count\r\n    const builtinTools = await this.getBuiltinTools();\r\n    report.builtinTools = builtinTools.length;\r\n    report.totalTools = report.externalTools + report.builtinTools;\r\n    \r\n    this.emit('health:updated', report);\r\n    return report;\r\n  }\r\n\r\n  async getServerStatus(serverId: string): Promise<ServerHealth | null> {\r\n    return this.healthMonitor.getServerHealth(serverId);\r\n  }\r\n\r\n  async testServer(serverId: string): Promise<boolean> {\r\n    const connection = this.connections.get(serverId);\r\n    if (!connection) return false;\r\n    \r\n    try {\r\n      // Send a ping request\r\n      const pingRequest = {\r\n        jsonrpc: '2.0',\r\n        id: uuidv4(),\r\n        method: 'ping'\r\n      };\r\n      \r\n      await this.sendRequestAndWaitForResponse(serverId, pingRequest, 5000);\r\n      return true;\r\n    } catch (error) {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  // Configuration management\r\n  async updateServerConfig(serverId: string, updates: Partial<MCPServerConfig>): Promise<void> {\r\n    const config = this.configs.get(serverId);\r\n    if (!config) {\r\n      throw new Error(`Server configuration not found: ${serverId}`);\r\n    }\r\n    \r\n    const updatedConfig = { ...config, ...updates };\r\n    this.configs.set(serverId, updatedConfig);\r\n    await this.saveConfiguration(updatedConfig);\r\n    \r\n    // Reconnect if transport configuration changed\r\n    if (updates.transport) {\r\n      await this.reconnectServer(serverId);\r\n    }\r\n  }\r\n\r\n  async getServerConfig(serverId: string): Promise<MCPServerConfig | null> {\r\n    return this.configs.get(serverId) || null;\r\n  }\r\n\r\n  async listServers(): Promise<MCPServerConfig[]> {\r\n    return Array.from(this.configs.values());\r\n  }\r\n\r\n  async exportConfiguration(): Promise<string> {\r\n    const configs = Array.from(this.configs.values());\r\n    return JSON.stringify(configs, null, 2);\r\n  }\r\n\r\n  async importConfiguration(configJson: string): Promise<void> {\r\n    const configs: MCPServerConfig[] = JSON.parse(configJson);\r\n    \r\n    for (const config of configs) {\r\n      await this.addServer(config);\r\n    }\r\n  }\r\n\r\n  async shutdown(): Promise<void> {\r\n    console.log('Shutting down MCP Client Hub...');\r\n    \r\n    // Disconnect all servers\r\n    const disconnectPromises = Array.from(this.connections.keys()).map(\r\n      serverId => this.disconnectServer(serverId)\r\n    );\r\n    await Promise.all(disconnectPromises);\r\n    \r\n    // Cleanup\r\n    this.healthMonitor.destroy();\r\n    this.connections.clear();\r\n    this.configs.clear();\r\n    this.toolCache.clear();\r\n    this.conflictResolutions.clear();\r\n    \r\n    // Clear pending requests\r\n    for (const pending of this.pendingRequests.values()) {\r\n      clearTimeout(pending.timeout);\r\n      pending.reject(new Error('Hub shutting down'));\r\n    }\r\n    this.pendingRequests.clear();\r\n    \r\n    this.removeAllListeners();\r\n    this.isInitialized = false;\r\n    \r\n    console.log('MCP Client Hub shutdown complete');\r\n  }\r\n\r\n  // Private helper methods\r\n  private setupTransportHandlers(serverId: string, transport: BaseTransport): void {\r\n    transport.on('connect', () => {\r\n      const connection = this.connections.get(serverId);\r\n      if (connection) {\r\n        connection.connected = true;\r\n        this.healthMonitor.updateServerStatus(serverId, 'connected');\r\n        this.emit('server:connected', serverId);\r\n      }\r\n    });\r\n\r\n    transport.on('disconnect', () => {\r\n      const connection = this.connections.get(serverId);\r\n      if (connection) {\r\n        connection.connected = false;\r\n        this.healthMonitor.updateServerStatus(serverId, 'disconnected');\r\n        this.emit('server:disconnected', serverId, 'Transport disconnected');\r\n      }\r\n    });\r\n\r\n    transport.on('message', (message) => {\r\n      this.handleIncomingMessage(serverId, message);\r\n    });\r\n\r\n    transport.on('error', (error) => {\r\n      this.healthMonitor.updateServerStatus(serverId, 'error', error.message);\r\n      this.emit('server:error', serverId, error);\r\n    });\r\n  }\r\n\r\n  private async initializeMCPSession(serverId: string): Promise<void> {\r\n    const initRequest = {\r\n      jsonrpc: '2.0',\r\n      id: uuidv4(),\r\n      method: 'initialize',\r\n      params: {\r\n        protocolVersion: '2024-11-05',\r\n        capabilities: {\r\n          tools: true,\r\n          resources: true,\r\n          prompts: true\r\n        },\r\n        clientInfo: {\r\n          name: 'TanukiMCP Atlas',\r\n          version: '1.0.0'\r\n        }\r\n      }\r\n    };\r\n\r\n    const response = await this.sendRequestAndWaitForResponse(serverId, initRequest, 10000);\r\n    \r\n    // Update capabilities\r\n    this.healthMonitor.updateCapabilities(serverId, response.capabilities || {\r\n      tools: true,\r\n      resources: true,\r\n      prompts: true\r\n    });\r\n\r\n    // Sync tools\r\n    await this.syncServerTools(serverId);\r\n  }\r\n\r\n  private async syncServerTools(serverId: string): Promise<void> {\r\n    const connection = this.connections.get(serverId);\r\n    if (!connection) return;\r\n\r\n    try {\r\n      const toolsRequest = {\r\n        jsonrpc: '2.0',\r\n        id: uuidv4(),\r\n        method: 'tools/list'\r\n      };\r\n\r\n      const response = await this.sendRequestAndWaitForResponse(serverId, toolsRequest, 10000);\r\n      \r\n      const tools: EnhancedToolDefinition[] = (response.tools || []).map((tool: any) => ({\r\n        ...tool,\r\n        source: serverId,\r\n        reliability: 'medium',\r\n        latency: 'network',\r\n        category: this.categorizeToolName(tool.name),\r\n        tags: this.extractToolTags(tool),\r\n        usageCount: 0,\r\n        averageExecutionTime: 0,\r\n        successRate: 100\r\n      }));\r\n\r\n      connection.tools = tools;\r\n      connection.lastToolSync = new Date();\r\n      \r\n      this.toolCache.set(serverId, tools);\r\n      this.healthMonitor.updateToolCount(serverId, tools.length);\r\n      \r\n      console.log(`Synced ${tools.length} tools from ${connection.config.name}`);\r\n      \r\n    } catch (error) {\r\n      console.error(`Failed to sync tools from ${serverId}:`, error);\r\n    }\r\n  }\r\n\r\n  private async sendRequestAndWaitForResponse(serverId: string, request: any, timeoutMs: number): Promise<any> {\r\n    const connection = this.connections.get(serverId);\r\n    if (!connection || !connection.connected) {\r\n      throw new Error(`Server ${serverId} is not connected`);\r\n    }\r\n\r\n    return new Promise((resolve, reject) => {\r\n      const timeout = setTimeout(() => {\r\n        this.pendingRequests.delete(request.id);\r\n        reject(new Error(`Request timeout: ${request.method}`));\r\n      }, timeoutMs);\r\n\r\n      this.pendingRequests.set(request.id, { resolve, reject, timeout });\r\n      \r\n      connection.transport.send(request).catch(error => {\r\n        this.pendingRequests.delete(request.id);\r\n        clearTimeout(timeout);\r\n        reject(error);\r\n      });\r\n    });\r\n  }\r\n\r\n  private handleIncomingMessage(serverId: string, message: any): void {\r\n    if (message.id && this.pendingRequests.has(message.id)) {\r\n      const pending = this.pendingRequests.get(message.id)!;\r\n      this.pendingRequests.delete(message.id);\r\n      clearTimeout(pending.timeout);\r\n\r\n      if (message.error) {\r\n        pending.reject(new Error(message.error.message || 'MCP error'));\r\n      } else {\r\n        pending.resolve(message.result);\r\n      }\r\n    }\r\n  }\r\n\r\n  private findToolProvider(toolName: string): { serverId: string; tool: EnhancedToolDefinition } {\r\n    // Check for conflict resolution\r\n    const conflict = this.conflictResolutions.get(toolName);\r\n    if (conflict && conflict.selectedSource) {\r\n      const serverId = conflict.selectedSource;\r\n      const tools = this.toolCache.get(serverId) || [];\r\n      const tool = tools.find(t => t.name === toolName);\r\n      if (tool) {\r\n        return { serverId, tool };\r\n      }\r\n    }\r\n\r\n    // Search all sources\r\n    for (const [serverId, tools] of this.toolCache) {\r\n      const tool = tools.find(t => t.name === toolName);\r\n      if (tool) {\r\n        return { serverId, tool };\r\n      }\r\n    }\r\n\r\n    throw new Error(`Tool not found: ${toolName}`);\r\n  }\r\n\r\n  private async handleToolExecutionError(error: Error, toolCall: ToolCall, context: ExecutionContext): Promise<ToolResult> {\r\n    // Comprehensive error recovery logic would go here\r\n    // For now, just return the error\r\n    return {\r\n      content: [{\r\n        type: 'text',\r\n        text: `Tool execution failed: ${error.message}`\r\n      }],\r\n      isError: true\r\n    };\r\n  }\r\n\r\n  private formatToolResult(result: any): ToolResult {\r\n    if (result.content) {\r\n      return result;\r\n    }\r\n\r\n    // Convert simple result to standard format\r\n    return {\r\n      content: [{\r\n        type: 'text',\r\n        text: typeof result === 'string' ? result : JSON.stringify(result)\r\n      }]\r\n    };\r\n  }\r\n\r\n  private setupHealthMonitorListeners(): void {\r\n    this.healthMonitor.on('server:unhealthy', (serverId, health) => {\r\n      console.warn(`Server ${serverId} is unhealthy:`, health);\r\n      // Could trigger auto-recovery here\r\n    });\r\n\r\n    this.healthMonitor.on('server:recovered', (serverId, health) => {\r\n      console.log(`Server ${serverId} has recovered:`, health);\r\n    });\r\n  }\r\n\r\n  // Stub methods for integration points\r\n  private async getBuiltinTools(): Promise<EnhancedToolDefinition[]> {\r\n    // This would integrate with the built-in MCP server\r\n    return [];\r\n  }\r\n\r\n  private categorizeToolName(toolName: string): string {\r\n    // Simple categorization logic\r\n    if (toolName.includes('file') || toolName.includes('read') || toolName.includes('write')) {\r\n      return 'file-operations';\r\n    }\r\n    if (toolName.includes('search') || toolName.includes('find')) {\r\n      return 'search';\r\n    }\r\n    if (toolName.includes('create') || toolName.includes('generate')) {\r\n      return 'generation';\r\n    }\r\n    return 'general';\r\n  }\r\n\r\n  private extractToolTags(tool: any): string[] {\r\n    const tags = [];\r\n    if (tool.description) {\r\n      // Extract tags from description or other metadata\r\n      if (tool.description.includes('file')) tags.push('file');\r\n      if (tool.description.includes('search')) tags.push('search');\r\n      if (tool.description.includes('create')) tags.push('create');\r\n    }\r\n    return tags;\r\n  }\r\n\r\n  private updateToolMetrics(serverId: string, toolName: string, success: boolean): void {\r\n    // Update tool usage metrics\r\n    const tools = this.toolCache.get(serverId) || [];\r\n    const tool = tools.find(t => t.name === toolName);\r\n    if (tool) {\r\n      tool.usageCount++;\r\n      if (success) {\r\n        tool.successRate = (tool.successRate * (tool.usageCount - 1) + 100) / tool.usageCount;\r\n      } else {\r\n        tool.successRate = (tool.successRate * (tool.usageCount - 1)) / tool.usageCount;\r\n      }\r\n    }\r\n  }\r\n\r\n  // Storage integration points (would integrate with main app database)\r\n  private async loadSavedConfigurations(): Promise<void> {\r\n    // Load from database\r\n  }\r\n\r\n  private async saveConfiguration(config: MCPServerConfig): Promise<void> {\r\n    // Save to database\r\n  }\r\n\r\n  private async removeStoredConfiguration(serverId: string): Promise<void> {\r\n    // Remove from database\r\n  }\r\n\r\n  private async autoConnectServers(): Promise<void> {\r\n    for (const config of this.configs.values()) {\r\n      if (config.autoRestart) {\r\n        try {\r\n          await this.connectServer(config.id);\r\n        } catch (error) {\r\n          console.warn(`Failed to auto-connect to ${config.name}:`, error);\r\n        }\r\n      }\r\n    }\r\n  }\r\n} ", "import { EventEmitter } from 'events';\r\n\r\n// Core MCP Types\r\nexport interface ToolDefinition {\r\n  name: string;\r\n  description: string;\r\n  inputSchema: {\r\n    type: string;\r\n    properties?: Record<string, any>;\r\n    required?: string[];\r\n  };\r\n}\r\n\r\nexport interface ToolCall {\r\n  name: string;\r\n  arguments: Record<string, any>;\r\n}\r\n\r\nexport interface ToolResult {\r\n  content: Array<{\r\n    type: 'text' | 'image' | 'resource';\r\n    text?: string;\r\n    data?: string;\r\n    mimeType?: string;\r\n  }>;\r\n  isError?: boolean;\r\n}\r\n\r\n// Transport Configuration\r\nexport type TransportType = 'stdio' | 'sse' | 'websocket';\r\n\r\nexport interface StdioTransportConfig {\r\n  type: 'stdio';\r\n  command: string;\r\n  args?: string[];\r\n  env?: Record<string, string>;\r\n  cwd?: string;\r\n}\r\n\r\nexport interface SSETransportConfig {\r\n  type: 'sse';\r\n  url: string;\r\n  headers?: Record<string, string>;\r\n  timeout?: number;\r\n}\r\n\r\nexport interface WebSocketTransportConfig {\r\n  type: 'websocket';\r\n  url: string;\r\n  protocols?: string[];\r\n  headers?: Record<string, string>;\r\n}\r\n\r\nexport type TransportConfig = StdioTransportConfig | SSETransportConfig | WebSocketTransportConfig;\r\n\r\n// Server Configuration\r\nexport interface MCPServerConfig {\r\n  id: string;\r\n  name: string;\r\n  description: string;\r\n  transport: TransportConfig;\r\n  \r\n  // Security and resource limits\r\n  security: {\r\n    sandboxed: boolean;\r\n    allowedPaths: string[];\r\n    maxExecutionTime: number;\r\n    maxMemoryUsage: number;\r\n    networkAccess: 'none' | 'local' | 'internet';\r\n  };\r\n  \r\n  // Auto-management\r\n  autoRestart: boolean;\r\n  healthCheckInterval: number;\r\n  maxRetries: number;\r\n  retryDelay: number;\r\n  \r\n  // Metadata\r\n  version?: string;\r\n  author?: string;\r\n  homepage?: string;\r\n  tags?: string[];\r\n  \r\n  // Runtime state\r\n  created: Date;\r\n  lastConnected?: Date;\r\n  lastDisconnected?: Date;\r\n}\r\n\r\n// Health Monitoring\r\nexport type ServerStatus = 'connected' | 'connecting' | 'disconnected' | 'error' | 'disabled';\r\n\r\nexport interface ServerHealth {\r\n  serverId: string;\r\n  status: ServerStatus;\r\n  lastSeen: Date;\r\n  responseTime: number;\r\n  errorCount: number;\r\n  connectionAttempts: number;\r\n  lastError?: string;\r\n  capabilities?: {\r\n    tools: boolean;\r\n    resources: boolean;\r\n    prompts: boolean;\r\n  };\r\n  toolCount: number;\r\n  uptime: number;\r\n}\r\n\r\nexport interface HealthReport {\r\n  generated: Date;\r\n  servers: Record<string, ServerHealth>;\r\n  totalServers: number;\r\n  connectedServers: number;\r\n  totalTools: number;\r\n  builtinTools: number;\r\n  externalTools: number;\r\n}\r\n\r\n// Tool Catalog\r\nexport interface EnhancedToolDefinition extends ToolDefinition {\r\n  source: string; // 'builtin' or server ID\r\n  reliability: 'high' | 'medium' | 'low';\r\n  latency: 'instant' | 'fast' | 'network' | 'slow';\r\n  category: string;\r\n  tags: string[];\r\n  lastUsed?: Date;\r\n  usageCount: number;\r\n  averageExecutionTime: number;\r\n  successRate: number;\r\n}\r\n\r\nexport interface ToolCatalog {\r\n  tools: EnhancedToolDefinition[];\r\n  lastUpdated: Date;\r\n  sources: string[];\r\n  categories: string[];\r\n  totalTools: number;\r\n  conflicts: ToolConflict[];\r\n}\r\n\r\nexport interface ToolConflict {\r\n  toolName: string;\r\n  sources: string[];\r\n  resolution: 'prefer_builtin' | 'prefer_external' | 'user_choice' | 'rename';\r\n  selectedSource?: string;\r\n}\r\n\r\n// Error Handling\r\nexport interface ErrorRecoveryResult {\r\n  success: boolean;\r\n  result?: ToolResult;\r\n  error?: Error;\r\n  recovery: 'none' | 'retry' | 'reconnected_and_retried' | 'fallback_used' | 'no_fallback_available';\r\n  userMessage: string;\r\n  warning?: string;\r\n  suggestions?: string[];\r\n}\r\n\r\nexport interface ExecutionContext {\r\n  sessionId: string;\r\n  messageId: string;\r\n  userId?: string;\r\n  timestamp: Date;\r\n  retryCount: number;\r\n  timeoutMs: number;\r\n}\r\n\r\n// Events\r\nexport interface MCPHubEvents {\r\n  'server:connected': (serverId: string) => void;\r\n  'server:disconnected': (serverId: string, reason: string) => void;\r\n  'server:error': (serverId: string, error: Error) => void;\r\n  'server:reconnecting': (serverId: string, attempt: number) => void;\r\n  'tool:executed': (toolName: string, source: string, executionTime: number, success: boolean) => void;\r\n  'tool:failed': (toolName: string, source: string, error: Error) => void;\r\n  'catalog:updated': (catalog: ToolCatalog) => void;\r\n  'health:updated': (report: HealthReport) => void;\r\n}\r\n\r\n// Hub Service Interface\r\nexport interface IMCPHubService extends EventEmitter {\r\n  // Server lifecycle management\r\n  addServer(config: MCPServerConfig): Promise<void>;\r\n  removeServer(serverId: string): Promise<void>;\r\n  connectServer(serverId: string): Promise<void>;\r\n  disconnectServer(serverId: string): Promise<void>;\r\n  reconnectServer(serverId: string): Promise<void>;\r\n  \r\n  // Configuration management\r\n  updateServerConfig(serverId: string, updates: Partial<MCPServerConfig>): Promise<void>;\r\n  getServerConfig(serverId: string): Promise<MCPServerConfig | null>;\r\n  listServers(): Promise<MCPServerConfig[]>;\r\n  \r\n  // Tool aggregation\r\n  getAllAvailableTools(): Promise<ToolCatalog>;\r\n  executeToolCall(toolCall: ToolCall, context: ExecutionContext): Promise<ToolResult>;\r\n  resolveToolConflicts(): Promise<ToolConflict[]>;\r\n  \r\n  // Health monitoring\r\n  getHealthReport(): Promise<HealthReport>;\r\n  getServerStatus(serverId: string): Promise<ServerHealth | null>;\r\n  \r\n  // Utility methods\r\n  testServer(serverId: string): Promise<boolean>;\r\n  exportConfiguration(): Promise<string>;\r\n  importConfiguration(config: string): Promise<void>;\r\n  \r\n  // Lifecycle\r\n  initialize(): Promise<void>;\r\n  shutdown(): Promise<void>;\r\n}\r\n\r\n// Connection Management\r\nexport interface ConnectionManager {\r\n  connect(serverId: string, config: MCPServerConfig): Promise<void>;\r\n  disconnect(serverId: string): Promise<void>;\r\n  reconnect(serverId: string): Promise<void>;\r\n  isConnected(serverId: string): boolean;\r\n  getConnectionStatus(serverId: string): ServerStatus;\r\n}\r\n\r\n// Analytics and Metrics\r\nexport interface ToolMetrics {\r\n  toolName: string;\r\n  source: string;\r\n  executionCount: number;\r\n  successCount: number;\r\n  failureCount: number;\r\n  averageExecutionTime: number;\r\n  lastExecuted: Date;\r\n  totalExecutionTime: number;\r\n}\r\n\r\nexport interface ServerMetrics {\r\n  serverId: string;\r\n  connectionTime: Date;\r\n  totalExecutions: number;\r\n  successfulExecutions: number;\r\n  failedExecutions: number;\r\n  averageResponseTime: number;\r\n  uptime: number;\r\n  downtime: number;\r\n} ", "// Main MCP Hub exports\r\nexport { MCPClientHub } from './client-hub';\r\nimport { MCPClientHub } from './client-hub';\r\nimport { TransportFactory } from './transports/transport-factory';\r\n\r\n// Types\r\nexport * from './types';\r\n\r\n// Transport implementations\r\nexport { BaseTransport } from './transports/base-transport';\r\nexport { StdioTransport } from './transports/stdio-transport';\r\nexport { SSETransport } from './transports/sse-transport';\r\nexport { WebSocketTransport } from './transports/websocket-transport';\r\nexport { TransportFactory } from './transports/transport-factory';\r\n\r\n// Health monitoring\r\nexport { HealthMonitor } from './health/health-monitor';\r\n\r\n// Utility functions for creating server configurations\r\nexport function createStdioServerConfig(options: {\r\n  id: string;\r\n  name: string;\r\n  description: string;\r\n  command: string;\r\n  args?: string[];\r\n  env?: Record<string, string>;\r\n  cwd?: string;\r\n}): any {\r\n  return {\r\n    id: options.id,\r\n    name: options.name,\r\n    description: options.description,\r\n    transport: {\r\n      type: 'stdio' as const,\r\n      command: options.command,\r\n      args: options.args || [],\r\n      env: options.env || {},\r\n      cwd: options.cwd\r\n    },\r\n    security: {\r\n      sandboxed: true,\r\n      allowedPaths: [],\r\n      maxExecutionTime: 30000,\r\n      maxMemoryUsage: 512 * 1024 * 1024, // 512MB\r\n      networkAccess: 'none' as const\r\n    },\r\n    autoRestart: true,\r\n    healthCheckInterval: 30000,\r\n    maxRetries: 3,\r\n    retryDelay: 5000,\r\n    created: new Date()\r\n  };\r\n}\r\n\r\nexport function createSSEServerConfig(options: {\r\n  id: string;\r\n  name: string;\r\n  description: string;\r\n  url: string;\r\n  headers?: Record<string, string>;\r\n  timeout?: number;\r\n}): any {\r\n  return {\r\n    id: options.id,\r\n    name: options.name,\r\n    description: options.description,\r\n    transport: {\r\n      type: 'sse' as const,\r\n      url: options.url,\r\n      headers: options.headers || {},\r\n      timeout: options.timeout || 30000\r\n    },\r\n    security: {\r\n      sandboxed: true,\r\n      allowedPaths: [],\r\n      maxExecutionTime: 30000,\r\n      maxMemoryUsage: 256 * 1024 * 1024, // 256MB\r\n      networkAccess: 'internet' as const\r\n    },\r\n    autoRestart: true,\r\n    healthCheckInterval: 30000,\r\n    maxRetries: 3,\r\n    retryDelay: 5000,\r\n    created: new Date()\r\n  };\r\n}\r\n\r\nexport function createWebSocketServerConfig(options: {\r\n  id: string;\r\n  name: string;\r\n  description: string;\r\n  url: string;\r\n  protocols?: string[];\r\n  headers?: Record<string, string>;\r\n}): any {\r\n  return {\r\n    id: options.id,\r\n    name: options.name,\r\n    description: options.description,\r\n    transport: {\r\n      type: 'websocket' as const,\r\n      url: options.url,\r\n      protocols: options.protocols || [],\r\n      headers: options.headers || {}\r\n    },\r\n    security: {\r\n      sandboxed: true,\r\n      allowedPaths: [],\r\n      maxExecutionTime: 30000,\r\n      maxMemoryUsage: 256 * 1024 * 1024, // 256MB\r\n      networkAccess: 'internet' as const\r\n    },\r\n    autoRestart: true,\r\n    healthCheckInterval: 30000,\r\n    maxRetries: 3,\r\n    retryDelay: 5000,\r\n    created: new Date()\r\n  };\r\n}\r\n\r\n// Validation functions\r\nexport function validateServerConfig(config: any): boolean {\r\n  try {\r\n    TransportFactory.validateConfig(config.transport);\r\n    return true;\r\n  } catch {\r\n    return false;\r\n  }\r\n}\r\n\r\n// Pre-configured server templates for common MCP servers\r\nexport const commonServerConfigs = {\r\n  // Example configurations for popular MCP servers\r\n  filesystem: (options: { allowedPaths: string[] }) => createStdioServerConfig({\r\n    id: 'filesystem-mcp',\r\n    name: 'Filesystem MCP Server',\r\n    description: 'Provides file system operations',\r\n    command: 'npx',\r\n    args: ['@modelcontextprotocol/server-filesystem', JSON.stringify({ allowedPaths: options.allowedPaths })]\r\n  }),\r\n\r\n  git: () => createStdioServerConfig({\r\n    id: 'git-mcp',\r\n    name: 'Git MCP Server',\r\n    description: 'Provides Git repository operations',\r\n    command: 'npx',\r\n    args: ['@modelcontextprotocol/server-git']\r\n  }),\r\n\r\n  database: (options: { connectionString: string }) => createStdioServerConfig({\r\n    id: 'database-mcp',\r\n    name: 'Database MCP Server',\r\n    description: 'Provides database operations',\r\n    command: 'npx',\r\n    args: ['@modelcontextprotocol/server-database', options.connectionString]\r\n  }),\r\n\r\n  web: (options: { baseUrl: string }) => createSSEServerConfig({\r\n    id: 'web-mcp',\r\n    name: 'Web MCP Server',\r\n    description: 'Provides web scraping and API access',\r\n    url: options.baseUrl\r\n  })\r\n};\r\n\r\n// Export everything needed for the hub\r\nexport default MCPClientHub; ", "import { Tray, Menu, BrowserWindow, app, nativeImage } from 'electron';\nimport path from 'path';\n\nexport class SystemTrayService {\n  private tray: Tray | null = null;\n  private mainWindow: BrowserWindow | null = null;\n\n  constructor(mainWindow: BrowserWindow) {\n    this.mainWindow = mainWindow;\n    this.createTray();\n  }\n\n  private createTray(): void {\n    try {\n      // Create tray icon from assets\n      const iconPath = path.join(__dirname, '../../../assets/TanukiMCPLogo.png');\n      const trayIcon = nativeImage.createFromPath(iconPath);\n      \n      // Resize icon for tray (16x16 on Windows)\n      const resizedIcon = trayIcon.resize({ width: 16, height: 16 });\n      \n      this.tray = new Tray(resizedIcon);\n      this.tray.setToolTip('TanukiMCP Atlas - AI Agentic IDE');\n      \n      this.setupTrayMenu();\n      this.setupTrayEvents();\n      \n      console.log('\u2705 System tray created successfully');\n    } catch (error) {\n      console.error('\u274C Failed to create system tray:', error);\n    }\n  }\n\n  private setupTrayMenu(): void {\n    if (!this.tray) return;\n\n    const contextMenu = Menu.buildFromTemplate([\n      {\n        label: 'TanukiMCP Atlas',\n        type: 'normal',\n        enabled: false\n      },\n      { type: 'separator' },\n      {\n        label: 'Show Atlas',\n        type: 'normal',\n        click: () => this.showMainWindow()\n      },\n      {\n        label: 'Hide Atlas',\n        type: 'normal',\n        click: () => this.hideMainWindow()\n      },\n      { type: 'separator' },\n      {\n        label: 'New Project',\n        type: 'normal',\n        accelerator: 'CmdOrCtrl+N',\n        click: () => this.sendToRenderer('new-project')\n      },\n      {\n        label: 'Open Project',\n        type: 'normal',\n        accelerator: 'CmdOrCtrl+O',\n        click: () => this.sendToRenderer('open-project')\n      },\n      { type: 'separator' },\n      {\n        label: 'AI Chat',\n        type: 'normal',\n        accelerator: 'CmdOrCtrl+Shift+C',\n        click: () => this.sendToRenderer('focus-chat')\n      },\n      {\n        label: 'Command Palette',\n        type: 'normal',\n        accelerator: 'CmdOrCtrl+Shift+P',\n        click: () => this.sendToRenderer('command-palette')\n      },\n      { type: 'separator' },\n      {\n        label: 'Settings',\n        type: 'normal',\n        click: () => this.sendToRenderer('open-settings')\n      },\n      {\n        label: 'About',\n        type: 'normal',\n        click: () => this.sendToRenderer('show-about')\n      },\n      { type: 'separator' },\n      {\n        label: 'Quit Atlas',\n        type: 'normal',\n        accelerator: process.platform === 'darwin' ? 'Cmd+Q' : 'Ctrl+Q',\n        click: () => {\n          app.quit();\n        }\n      }\n    ]);\n\n    this.tray.setContextMenu(contextMenu);\n  }  private setupTrayEvents(): void {\n    if (!this.tray || !this.mainWindow) return;\n\n    // Double-click to show/hide window\n    this.tray.on('double-click', () => {\n      if (this.mainWindow?.isVisible()) {\n        this.hideMainWindow();\n      } else {\n        this.showMainWindow();\n      }\n    });\n\n    // Single click behavior (Windows)\n    if (process.platform === 'win32') {\n      this.tray.on('click', () => {\n        if (this.mainWindow?.isVisible()) {\n          this.hideMainWindow();\n        } else {\n          this.showMainWindow();\n        }\n      });\n    }\n  }\n\n  private showMainWindow(): void {\n    if (!this.mainWindow) return;\n\n    if (this.mainWindow.isMinimized()) {\n      this.mainWindow.restore();\n    }\n    \n    this.mainWindow.show();\n    this.mainWindow.focus();\n    \n    // Bring to front on Windows\n    if (process.platform === 'win32') {\n      this.mainWindow.setAlwaysOnTop(true);\n      this.mainWindow.setAlwaysOnTop(false);\n    }\n  }\n\n  private hideMainWindow(): void {\n    if (!this.mainWindow) return;\n    this.mainWindow.hide();\n  }\n\n  private sendToRenderer(action: string, data?: any): void {\n    if (!this.mainWindow) return;\n    \n    this.showMainWindow();\n    this.mainWindow.webContents.send('tray-action', { action, data });\n  }\n\n  public updateTrayMenu(): void {\n    this.setupTrayMenu();\n  }\n\n  public destroy(): void {\n    if (this.tray) {\n      this.tray.destroy();\n      this.tray = null;\n    }\n  }\n\n  public setMainWindow(window: BrowserWindow): void {\n    this.mainWindow = window;\n  }\n}", "import { Menu, BrowserWindow, app, shell } from 'electron';\n\nexport class NativeMenuService {\n  private mainWindow: BrowserWindow | null = null;\n\n  constructor(mainWindow: BrowserWindow) {\n    this.mainWindow = mainWindow;\n    this.createApplicationMenu();\n  }\n\n  private createApplicationMenu(): void {\n    const template: Electron.MenuItemConstructorOptions[] = [\n      {\n        label: 'File',\n        submenu: [\n          {\n            label: 'New Project',\n            accelerator: 'CmdOrCtrl+N',\n            click: () => this.sendToRenderer('new-project')\n          },\n          {\n            label: 'Open Project',\n            accelerator: 'CmdOrCtrl+O',\n            click: () => this.sendToRenderer('open-project')\n          },\n          { type: 'separator' },\n          {\n            label: 'Save',\n            accelerator: 'CmdOrCtrl+S',\n            click: () => this.sendToRenderer('save-file')\n          },\n          {\n            label: 'Save As...',\n            accelerator: 'CmdOrCtrl+Shift+S',\n            click: () => this.sendToRenderer('save-file-as')\n          },\n          { type: 'separator' },\n          {\n            label: 'Exit',\n            accelerator: process.platform === 'darwin' ? 'Cmd+Q' : 'Ctrl+Q',\n            click: () => app.quit()\n          }\n        ]\n      },\n      {\n        label: 'Edit',\n        submenu: [\n          { role: 'undo' },\n          { role: 'redo' },\n          { type: 'separator' },\n          { role: 'cut' },\n          { role: 'copy' },\n          { role: 'paste' },\n          { role: 'selectall' },\n          { type: 'separator' },\n          {\n            label: 'Find',\n            accelerator: 'CmdOrCtrl+F',\n            click: () => this.sendToRenderer('find')\n          },\n          {\n            label: 'Replace',\n            accelerator: 'CmdOrCtrl+H',\n            click: () => this.sendToRenderer('replace')\n          }\n        ]\n      },\n      {\n        label: 'View',\n        submenu: [\n          { role: 'reload' },\n          { role: 'forceReload' },\n          { role: 'toggleDevTools' },\n          { type: 'separator' },\n          { role: 'resetZoom' },\n          { role: 'zoomIn' },\n          { role: 'zoomOut' },\n          { type: 'separator' },\n          { role: 'togglefullscreen' },\n          { type: 'separator' },\n          {\n            label: 'Command Palette',\n            accelerator: 'CmdOrCtrl+Shift+P',\n            click: () => this.sendToRenderer('command-palette')\n          }\n        ]\n      },\n      {\n        label: 'AI',\n        submenu: [\n          {\n            label: 'Open Chat',\n            accelerator: 'CmdOrCtrl+Shift+C',\n            click: () => this.sendToRenderer('focus-chat')\n          },\n          {\n            label: 'New Agent',\n            accelerator: 'CmdOrCtrl+Shift+A',\n            click: () => this.sendToRenderer('new-agent')\n          },\n          {\n            label: 'Workflow Builder',\n            accelerator: 'CmdOrCtrl+Shift+W',\n            click: () => this.sendToRenderer('workflow-builder')\n          }\n        ]\n      },\n      {\n        label: 'Tools',\n        submenu: [\n          {\n            label: 'MCP Servers',\n            click: () => this.sendToRenderer('mcp-servers')\n          },\n          {\n            label: 'Model Manager',\n            click: () => this.sendToRenderer('model-manager')\n          },\n          { type: 'separator' },\n          {\n            label: 'Settings',\n            accelerator: 'CmdOrCtrl+,',\n            click: () => this.sendToRenderer('open-settings')\n          }\n        ]\n      },\n      {\n        label: 'Help',\n        submenu: [\n          {\n            label: 'Documentation',\n            click: () => shell.openExternal('https://tanukimcp.com/docs')\n          },\n          {\n            label: 'Community',\n            click: () => shell.openExternal('https://github.com/TanukiMCP/atlas')\n          },\n          { type: 'separator' },\n          {\n            label: 'About TanukiMCP Atlas',\n            click: () => this.sendToRenderer('show-about')\n          }\n        ]\n      }\n    ];\n\n    const menu = Menu.buildFromTemplate(template);\n    Menu.setApplicationMenu(menu);\n  }\n\n  private sendToRenderer(action: string, data?: any): void {\n    if (!this.mainWindow) return;\n    this.mainWindow.webContents.send('menu-action', { action, data });\n  }\n\n  public setMainWindow(window: BrowserWindow): void {\n    this.mainWindow = window;\n  }\n}", "import { autoUpdater } from 'electron-updater';\nimport { BrowserWindow, dialog, Notification } from 'electron';\n\nexport class AutoUpdaterService {\n  private mainWindow: BrowserWindow | null = null;\n  private updateAvailable = false;\n\n  constructor(mainWindow: BrowserWindow) {\n    this.mainWindow = mainWindow;\n    this.setupAutoUpdater();\n  }\n\n  private setupAutoUpdater(): void {\n    autoUpdater.autoDownload = false;\n    autoUpdater.autoInstallOnAppQuit = true;\n\n    autoUpdater.on('checking-for-update', () => {\n      console.log('\uD83D\uDD0D Checking for updates...');\n      this.sendToRenderer('update-checking');\n    });\n\n    autoUpdater.on('update-available', (info) => {\n      console.log('\uD83D\uDCE6 Update available:', info.version);\n      this.updateAvailable = true;\n      this.showUpdateAvailableNotification(info);\n      this.sendToRenderer('update-available', info);\n    });\n\n    autoUpdater.on('update-not-available', (info) => {\n      console.log('\u2705 No updates available');\n      this.sendToRenderer('update-not-available', info);\n    });\n\n    autoUpdater.on('error', (err) => {\n      console.error('\u274C Update error:', err);\n      this.sendToRenderer('update-error', err.message);\n    });\n\n    autoUpdater.on('download-progress', (progressObj) => {\n      const message = `Downloaded ${progressObj.percent.toFixed(1)}%`;\n      console.log('\uD83D\uDCE5', message);\n      this.sendToRenderer('update-download-progress', progressObj);\n    });\n\n    autoUpdater.on('update-downloaded', (info) => {\n      console.log('\u2705 Update downloaded:', info.version);\n      this.showUpdateReadyNotification(info);\n      this.sendToRenderer('update-downloaded', info);\n    });\n  }  private showUpdateAvailableNotification(info: any): void {\n    if (Notification.isSupported()) {\n      const notification = new Notification({\n        title: 'TanukiMCP Atlas Update Available',\n        body: `Version ${info.version} is available. Click to download.`,\n        icon: require('path').join(__dirname, '../../../assets/TanukiMCPLogo.png')\n      });\n\n      notification.on('click', () => {\n        this.downloadUpdate();\n      });\n\n      notification.show();\n    }\n  }\n\n  private showUpdateReadyNotification(info: any): void {\n    if (Notification.isSupported()) {\n      const notification = new Notification({\n        title: 'TanukiMCP Atlas Update Ready',\n        body: `Version ${info.version} has been downloaded. Restart to apply.`,\n        icon: require('path').join(__dirname, '../../../assets/TanukiMCPLogo.png')\n      });\n\n      notification.on('click', () => {\n        this.installUpdate();\n      });\n\n      notification.show();\n    }\n  }\n\n  public async checkForUpdates(): Promise<void> {\n    try {\n      await autoUpdater.checkForUpdates();\n    } catch (error) {\n      console.error('Failed to check for updates:', error);\n    }\n  }\n\n  public async downloadUpdate(): Promise<void> {\n    try {\n      await autoUpdater.downloadUpdate();\n    } catch (error) {\n      console.error('Failed to download update:', error);\n    }\n  }\n\n  public installUpdate(): void {\n    autoUpdater.quitAndInstall();\n  }\n\n  private sendToRenderer(action: string, data?: any): void {\n    if (!this.mainWindow) return;\n    this.mainWindow.webContents.send('updater-action', { action, data });\n  }\n\n  public setMainWindow(window: BrowserWindow): void {\n    this.mainWindow = window;\n  }\n}", "import { Notification, BrowserWindow } from 'electron';\nimport path from 'path';\n\nexport interface NotificationOptions {\n  title: string;\n  body: string;\n  icon?: string;\n  silent?: boolean;\n  onClick?: () => void;\n}\n\nexport class NotificationService {\n  private mainWindow: BrowserWindow | null = null;\n  private defaultIcon: string;\n\n  constructor(mainWindow: BrowserWindow) {\n    this.mainWindow = mainWindow;\n    this.defaultIcon = path.join(__dirname, '../../../assets/TanukiMCPLogo.png');\n  }\n\n  public showNotification(options: NotificationOptions): void {\n    if (!Notification.isSupported()) {\n      console.warn('Notifications not supported on this platform');\n      return;\n    }\n\n    const notification = new Notification({\n      title: options.title,\n      body: options.body,\n      icon: options.icon || this.defaultIcon,\n      silent: options.silent || false\n    });\n\n    if (options.onClick) {\n      notification.on('click', options.onClick);\n    }\n\n    notification.show();\n  }\n\n  public showBuildComplete(projectName: string): void {\n    this.showNotification({\n      title: 'Build Complete',\n      body: `${projectName} has been built successfully`,\n      onClick: () => this.focusMainWindow()\n    });\n  }  public showError(title: string, message: string): void {\n    this.showNotification({\n      title: `Error: ${title}`,\n      body: message,\n      onClick: () => this.focusMainWindow()\n    });\n  }\n\n  private focusMainWindow(): void {\n    if (!this.mainWindow) return;\n    \n    if (this.mainWindow.isMinimized()) {\n      this.mainWindow.restore();\n    }\n    \n    this.mainWindow.show();\n    this.mainWindow.focus();\n  }\n\n  public setMainWindow(window: BrowserWindow): void {\n    this.mainWindow = window;\n  }\n}", "import { crashReporter, BrowserWindow, dialog } from 'electron';\nimport { writeFileSync, existsSync, mkdirSync } from 'fs';\nimport { join } from 'path';\nimport { app } from 'electron';\n\nexport class CrashReporterService {\n  private mainWindow: BrowserWindow | null = null;\n  private crashLogDir: string;\n\n  constructor(mainWindow: BrowserWindow) {\n    this.mainWindow = mainWindow;\n    this.crashLogDir = join(app.getPath('userData'), 'crash-logs');\n    this.setupCrashReporter();\n  }\n\n  private setupCrashReporter(): void {\n    if (!existsSync(this.crashLogDir)) {\n      mkdirSync(this.crashLogDir, { recursive: true });\n    }\n\n    crashReporter.start({\n      productName: 'TanukiMCP Atlas',\n      companyName: 'TanukiMCP',\n      submitURL: '',\n      uploadToServer: false,\n      ignoreSystemCrashHandler: false,\n      rateLimit: true,\n      compress: true\n    });\n\n    console.log('\u2705 Crash reporter initialized');\n  }\n\n  public logCrash(error: Error, context?: string): void {\n    const timestamp = new Date().toISOString();\n    const crashLog = {\n      timestamp,\n      context: context || 'Unknown',\n      error: {\n        name: error.name,\n        message: error.message,\n        stack: error.stack\n      },\n      system: {\n        platform: process.platform,\n        arch: process.arch,\n        version: process.version,\n        appVersion: app.getVersion()\n      }\n    };    const logFile = join(this.crashLogDir, `crash-${Date.now()}.json`);\n    \n    try {\n      writeFileSync(logFile, JSON.stringify(crashLog, null, 2));\n      console.log('\uD83D\uDCA5 Crash logged to:', logFile);\n    } catch (writeError) {\n      console.error('Failed to write crash log:', writeError);\n    }\n  }\n\n  public async showCrashDialog(error: Error): Promise<void> {\n    const result = await dialog.showMessageBox(this.mainWindow!, {\n      type: 'error',\n      title: 'Application Error',\n      message: 'TanukiMCP Atlas encountered an unexpected error',\n      detail: `${error.message}\\n\\nThe error has been logged for debugging.`,\n      buttons: ['Restart', 'Close', 'Report Issue'],\n      defaultId: 0,\n      cancelId: 1\n    });\n\n    switch (result.response) {\n      case 0: // Restart\n        app.relaunch();\n        app.exit();\n        break;\n      case 2: // Report Issue\n        require('electron').shell.openExternal('https://github.com/TanukiMCP/atlas/issues');\n        break;\n    }\n  }\n\n  public setMainWindow(window: BrowserWindow): void {\n    this.mainWindow = window;\n  }\n}", "import { app, BrowserWindow } from 'electron';\n\nexport class ProtocolHandlerService {\n  private mainWindow: BrowserWindow | null = null;\n\n  constructor(mainWindow: BrowserWindow) {\n    this.mainWindow = mainWindow;\n    this.setupProtocolHandler();\n  }\n\n  private setupProtocolHandler(): void {\n    if (!app.isDefaultProtocolClient('tanukimcp')) {\n      app.setAsDefaultProtocolClient('tanukimcp');\n    }\n\n    app.on('second-instance', (event, commandLine, workingDirectory) => {\n      if (this.mainWindow) {\n        if (this.mainWindow.isMinimized()) {\n          this.mainWindow.restore();\n        }\n        this.mainWindow.focus();\n      }\n\n      const url = commandLine.find(arg => arg.startsWith('tanukimcp://'));\n      if (url) {\n        this.handleProtocolUrl(url);\n      }\n    });\n\n    app.on('open-url', (event, url) => {\n      event.preventDefault();\n      this.handleProtocolUrl(url);\n    });\n\n    console.log('\u2705 Protocol handler registered for tanukimcp://');\n  }\n\n  private handleProtocolUrl(url: string): void {\n    console.log('\uD83D\uDD17 Handling protocol URL:', url);\n\n    try {\n      const parsedUrl = new URL(url);\n      const action = parsedUrl.hostname;\n      const params = Object.fromEntries(parsedUrl.searchParams);\n\n      this.focusMainWindow();\n      this.sendToRenderer('protocol-action', { action, params, url });\n    } catch (error) {\n      console.error('Failed to parse protocol URL:', error);\n    }\n  }  private focusMainWindow(): void {\n    if (!this.mainWindow) return;\n    \n    if (this.mainWindow.isMinimized()) {\n      this.mainWindow.restore();\n    }\n    \n    this.mainWindow.show();\n    this.mainWindow.focus();\n  }\n\n  private sendToRenderer(action: string, data?: any): void {\n    if (!this.mainWindow) return;\n    this.mainWindow.webContents.send('protocol-action', { action, data });\n  }\n\n  public setMainWindow(window: BrowserWindow): void {\n    this.mainWindow = window;\n  }\n}", "import { app, BrowserWindow } from 'electron';\nimport path from 'path';\nimport { createWindow } from './window';\nimport { setupIPC } from './ipc/handlers';\nimport { initializeDatabase } from './database/connection';\nimport { OpenRouterService } from './services/openrouter-service';\nimport { SystemMonitor } from './services/system-monitor';\nimport { MCPClientHub } from '../../mcp-hub/src';\nimport { SystemTrayService } from './services/system-tray';\nimport { NativeMenuService } from './services/native-menu';\nimport { AutoUpdaterService } from './services/auto-updater';\nimport { NotificationService } from './services/notification-service';\nimport { CrashReporterService } from './services/crash-reporter';\nimport { ProtocolHandlerService } from './services/protocol-handler';\nimport { enhancedLLMService } from '../../llm-enhanced/src';\n\nclass TanukiMCPApp {\n  private mainWindow: BrowserWindow | null = null;\n  private trayService!: SystemTrayService;\n  private menuService!: NativeMenuService;\n  private autoUpdaterService!: AutoUpdaterService;\n  private notificationService!: NotificationService;\n  private crashReporterService!: CrashReporterService;\n  private protocolHandlerService!: ProtocolHandlerService;\n\n  // Services that might be initialized later or conditionally\n  private openrouterService!: OpenRouterService;\n  private systemMonitor!: SystemMonitor;\n  private mcpHubService!: MCPClientHub;\n  private isQuitting = false;\n\n  constructor() {\n    this.setupEventHandlers();\n  }\n  \n  private async initializeServices(): Promise<void> {\n    console.log('\uD83D\uDD27 Initializing services...');\n    \n    // Initialize core services - keep only what's needed for OpenRouter\n    this.openrouterService = new OpenRouterService();\n    this.systemMonitor = new SystemMonitor();\n    // Initialize MCP hub service\n    this.mcpHubService = new MCPClientHub();\n    await this.mcpHubService.initialize();\n    \n    // Skip hardware-specific services since we're using OpenRouter free models only\n    \n    console.log('\u2705 Core services initialized');\n    \n    // Initialize Enhanced LLM and MCP Hub\n    console.log('\uD83D\uDD27 Initializing desktop integration...');\n    \n    // Initialize crash reporter first\n    if (this.mainWindow) {\n      this.crashReporterService = new CrashReporterService(this.mainWindow);\n      \n      // Initialize notification service\n      this.notificationService = new NotificationService(this.mainWindow);\n      \n      // Initialize system tray\n      this.trayService = new SystemTrayService(this.mainWindow);\n      \n      // Initialize native menu\n      this.menuService = new NativeMenuService(this.mainWindow);\n      \n      // Initialize protocol handler\n      this.protocolHandlerService = new ProtocolHandlerService(this.mainWindow);\n      \n      // Initialize auto-updater (only in production)\n      if (process.env.NODE_ENV === 'production') {\n        this.autoUpdaterService = new AutoUpdaterService(this.mainWindow);\n        // Check for updates on startup (after a delay)\n        setTimeout(() => {\n          this.autoUpdaterService?.checkForUpdates();\n        }, 5000);\n      }\n    }\n    \n    console.log('\u2705 Desktop integration services initialized');\n  }\n\n  private setupEventHandlers(): void {\n    // Set up app event handlers\n    app.whenReady().then(() => this.onReady());\n    app.on('window-all-closed', this.onWindowAllClosed.bind(this));\n    app.on('activate', this.onActivate.bind(this));\n    app.on('before-quit', this.onBeforeQuit.bind(this));\n    \n    // Handle certificate errors (for local development)\n    app.on('certificate-error', (event, webContents, url, error, certificate, callback) => {\n      if (url.startsWith('http://localhost')) {\n        // Ignore certificate errors for localhost\n        event.preventDefault();\n        callback(true);\n      } else {\n        // Use default behavior for other URLs\n        callback(false);\n      }\n    });\n  }\n\n  private async onReady(): Promise<void> {\n    try {\n      console.log('\uD83D\uDE80 TanukiMCP Atlas starting...');\n      \n      // Initialize services\n      await this.initializeServices();\n      \n      // Initialize database\n      console.log('\uD83D\uDCCA Initializing database...');\n      await initializeDatabase();\n      console.log('\u2705 Database initialized');\n      \n      // Connect to OpenRouter service\n      console.log('\uD83D\uDD0C Connecting to OpenRouter...');\n      await this.loadStoredApiKey();\n      const status = await this.openrouterService.checkHealth();\n      if (status.isConnected) {\n        console.log('\u2705 Connected to OpenRouter service');\n      } else {\n        console.log('\u26A0\uFE0F Not connected to OpenRouter - free models will still be available');\n      }\n      \n      // Initialize Enhanced LLM Service with OpenRouter and MCP hub\n      console.log('\uD83D\uDD27 Initializing Enhanced LLM Service...');\n      await enhancedLLMService.initialize(this.openrouterService, this.mcpHubService);\n      console.log('\u2705 Enhanced LLM Service ready');\n      \n      // Create main window\n      console.log('\uD83E\uDE9F Creating main window...');\n      this.mainWindow = createWindow();\n      \n      // Initialize desktop integration services\n      await this.initializeDesktopServices();\n      \n      // Setup IPC handlers\n      console.log('\uD83D\uDD0C Setting up IPC handlers...');\n      setupIPC();\n      console.log('\u2705 IPC handlers ready');\n      \n      // Load the application\n      await this.loadApplication();\n      \n      console.log('\uD83C\uDF89 TanukiMCP Atlas ready!');\n    } catch (error) {\n      console.error('\u274C Failed to initialize TanukiMCP Atlas:', error);\n      app.quit();\n    }\n  }\n\n  private async loadApplication(): Promise<void> {\n    if (!this.mainWindow) return;\n\n    // Determine URL based on environment\n    if (process.env.NODE_ENV === 'development') {\n      // Development mode - load from Vite dev server\n      const devServerUrl = 'http://localhost:5173';\n      console.log(`\uD83D\uDD27 Loading from dev server: ${devServerUrl}`);\n      \n      try {\n        await this.mainWindow.loadURL(devServerUrl);\n        this.mainWindow.webContents.openDevTools();\n      } catch (error) {\n        console.error('Failed to load dev server, falling back to file:', error);\n        await this.loadProductionFile();\n      }\n    } else {\n      // Production mode - load from built files\n      await this.loadProductionFile();\n    }\n  }\n\n  private async loadProductionFile(): Promise<void> {\n    if (!this.mainWindow) return;\n    \n    // __dirname is packages/main/dist\n    // ../../../ should resolve to the project root (e.g., tanukimcp-atlas)\n    const projectRoot = path.resolve(__dirname, '../../../');\n    const indexPath = path.join(projectRoot, 'packages/renderer/dist/index.html');\n    console.log(`\uD83D\uDCC1 Loading from file: ${indexPath} (using projectRoot: ${projectRoot}, __dirname: ${__dirname})`);\n    await this.mainWindow.loadFile(indexPath);\n  }\n\n  private onWindowAllClosed(): void {\n    // On macOS, keep app running even when all windows are closed\n    if (process.platform !== 'darwin') {\n      app.quit();\n    }\n  }\n\n  private onActivate(): void {\n    // On macOS, re-create window when dock icon is clicked\n    if (BrowserWindow.getAllWindows().length === 0) {\n      this.mainWindow = createWindow();\n      this.loadApplication();\n    }\n  }\n\n  private onBeforeQuit(): void {\n    this.isQuitting = true;\n  }\n\n  private async initializeDesktopServices(): Promise<void> {\n    if (!this.mainWindow) return;\n\n    try {\n      // Initialize crash reporter first\n      this.crashReporterService = new CrashReporterService(this.mainWindow);\n      \n      // Initialize notification service\n      this.notificationService = new NotificationService(this.mainWindow);\n      \n      // Initialize system tray\n      this.trayService = new SystemTrayService(this.mainWindow);\n      \n      // Initialize native menu\n      this.menuService = new NativeMenuService(this.mainWindow);\n      \n      // Initialize protocol handler\n      this.protocolHandlerService = new ProtocolHandlerService(this.mainWindow);\n      \n      // Initialize auto-updater (only in production)\n      if (process.env.NODE_ENV === 'production') {\n        this.autoUpdaterService = new AutoUpdaterService(this.mainWindow);\n        // Check for updates on startup (after a delay)\n        setTimeout(() => {\n          this.autoUpdaterService?.checkForUpdates();\n        }, 5000);\n      }\n      \n      console.log('\u2705 Desktop integration services initialized');\n    } catch (error) {\n      console.error('\u274C Failed to initialize desktop services:', error);\n      this.crashReporterService?.logCrash(error as Error, 'Desktop Services Initialization');\n    }\n  }\n\n  private async loadStoredApiKey(): Promise<void> {\n    try {\n      const { app } = require('electron');\n      const path = require('path');\n      const fs = require('fs').promises;\n      \n      const userDataPath = app.getPath('userData');\n      const storageFile = path.join(userDataPath, 'secure-storage.json');\n      \n      try {\n        const data = await fs.readFile(storageFile, 'utf8');\n        const storage = JSON.parse(data);\n        const apiKey = storage['openrouter_api_key'];\n        \n        if (apiKey && this.openrouterService) {\n          this.openrouterService.setApiKey(apiKey);\n          console.log('\uD83D\uDD11 Loaded stored OpenRouter API key');\n        }\n      } catch (error) {\n        // File doesn't exist or is invalid, no stored API key\n        console.log('\u2139\uFE0F  No stored OpenRouter API key found');\n      }\n    } catch (error) {\n      console.error('Failed to load stored API key:', error);\n    }\n  }\n\n  public getMainWindow(): BrowserWindow | null {\n    return this.mainWindow;\n  }\n  \n  // Expose services for IPC handlers\n  public getServices() {\n    return {\n      openrouter: this.openrouterService,\n      systemMonitor: this.systemMonitor,\n      systemTray: this.trayService,\n      nativeMenu: this.menuService,\n      autoUpdater: this.autoUpdaterService,\n      notification: this.notificationService,\n      crashReporter: this.crashReporterService,\n      protocolHandler: this.protocolHandlerService,\n      mcpHub: this.mcpHubService\n    };\n  }\n}\n\n// Create and initialize the application\nconst tanukiApp = new TanukiMCPApp();\n\n// Export for potential external access\nexport { tanukiApp };\n\n// Handle uncaught exceptions gracefully\nprocess.on('uncaughtException', (error) => {\n  console.error('Uncaught Exception:', error);\n  tanukiApp.getServices().crashReporter?.logCrash(error, 'Uncaught Exception');\n  tanukiApp.getServices().crashReporter?.showCrashDialog(error);\n});\n\nprocess.on('unhandledRejection', (reason, promise) => {\n  console.error('Unhandled Rejection at:', promise, 'reason:', reason);\n  const error = reason instanceof Error ? reason : new Error(String(reason));\n  tanukiApp.getServices().crashReporter?.logCrash(error, 'Unhandled Rejection');\n}); "],
  "mappings": "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G;AAAA,MAAG;AAAA,MAAG;AAAA,MAAG;AAAA,MAAG;AAAA,MAAG;AAAA,MAAG;AAAA,MAAG;AAAA,MAAG;AAAA;AAAA,MAC7C;AAAA,MAAG;AAAA,MAAG;AAAA,MAAG;AAAA,MAAG;AAAA,MAAG;AAAA,MAAG;AAAA,MAAG;AAAA,MAAG;AAAA,MAAG;AAAA,MAAG;AAAA,MAAG;AAAA,MAAG;AAAA,MAAG;AAAA,MAAG;AAAA,MAAG;AAAA;AAAA,MAC7C;AAAA,MAAG;AAAA,MAAG;AAAA,MAAG;AAAA,MAAG;AAAA,MAAG;AAAA,MAAG;AAAA,MAAG;AAAA,MAAG;AAAA,MAAG;AAAA,MAAG;AAAA,MAAG;AAAA,MAAG;AAAA,MAAG;AAAA,MAAG;AAAA,MAAG;AAAA;AAAA,MAC7C;AAAA,MAAG;AAAA,MAAG;AAAA,MAAG;AAAA,MAAG;AAAA,MAAG;AAAA,MAAG;AAAA,MAAG;AAAA,MAAG;AAAA,MAAG;AAAA,MAAG;AAAA,MAAG;AAAA,MAAG;AAAA,MAAG;AAAA,MAAG;AAAA,MAAG;AAAA;AAAA,MAC7C;AAAA,MAAG;AAAA,MAAG;AAAA,MAAG;AAAA,MAAG;AAAA,MAAG;AAAA,MAAG;AAAA,MAAG;AAAA,MAAG;AAAA,MAAG;AAAA,MAAG;AAAA,MAAG;AAAA,MAAG;AAAA,MAAG;AAAA,MAAG;AAAA,MAAG;AAAA;AAAA,MAC7C;AAAA,MAAG;AAAA,MAAG;AAAA,MAAG;AAAA,MAAG;AAAA,MAAG;AAAA,MAAG;AAAA,MAAG;AAAA,MAAG;AAAA,MAAG;AAAA,MAAG;AAAA,MAAG;AAAA,MAAG;AAAA,MAAG;AAAA,MAAG;AAAA,MAAG;AAAA;AAAA,MAC7C;AAAA,MAAG;AAAA,MAAG;AAAA,MAAG;AAAA,MAAG;AAAA,MAAG;AAAA,MAAG;AAAA,MAAG;AAAA,MAAG;AAAA,MAAG;AAAA,MAAG;AAAA,MAAG;AAAA,MAAG;AAAA,MAAG;AAAA,MAAG;AAAA,MAAG;AAAA;AAAA,MAC7C;AAAA,MAAG;AAAA,MAAG;AAAA,MAAG;AAAA,MAAG;AAAA,MAAG;AAAA,MAAG;AAAA,MAAG;AAAA,MAAG;AAAA,MAAG;AAAA,MAAG;AAAA,M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",
  "names": ["path", "crypto", "import_crypto", "crypto", "path", "Database", "sqlite", "import_better_sqlite3", "import_path", "import_electron", "RequestComplexity", "llmService", "llmService", "llmService", "llmService", "llmService", "exports", "module", "EventEmitter", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "data", "exports", "module", "exports", "module", "Receiver", "exports", "module", "Sender", "blob", "exports", "module", "exports", "module", "exports", "module", "EventEmitter", "randomBytes", "URL", "Receiver", "Sender", "WebSocket", "key", "exports", "module", "WebSocket", "createWebSocketStream", "err", "exports", "module", "protocol", "exports", "module", "EventEmitter", "WebSocket", "WebSocketServer", "exports", "module", "exports", "exports", "exports", "module", "exports", "module", "exports", "exports", "exports", "module", "exports", "exports", "exports", "exports", "module", "exports", "exports", "exports", "exports", "exports", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "exports", "path", "exports", "exports", "module", "exports", "exports", "module", "exports", "module", "exports", "module", "require_constants", "exports", "module", "exports", "module", "exports", "module", "exports", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "exports", "module", "exports", "exports", "module", "inflatedData", "exports", "module", "exports", "exports", "require_utils", "exports", "require_png", "exports", "fs", "path", "exports", "path", "fs", "exports", "exports", "foregroundWhite", "foregroundBlack", "require_terminal", "exports", "exports", "path", "exports", "path", "fs", "exports", "exports", "text", "exports", "text", "path", "data", "exports", "module", "import_crypto", "import_electron", "path", "WebSocketServer", "qrcode", "WebSocket", "db", "app", "fs", "path", "BrowserWindow", "ipcMain", "proxyServer", "mainWindow", "import_electron", "import_events", "import_events", "import_events", "init_types", "init_src", "init_types", "import_electron", "import_path", "path", "import_electron", "import_electron", "import_electron", "import_path", "path", "import_electron", "import_path", "import_electron", "import_electron", "import_path", "init_src", "path", "app", "fs"]
}
