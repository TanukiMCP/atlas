"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.MCPServersView = void 0;
const jsx_runtime_1 = require("react/jsx-runtime");
const card_1 = require("../ui/card");
const button_1 = require("../ui/button");
const badge_1 = require("../ui/badge");
const lucide_react_1 = require("lucide-react");
const MCPServersView = ({ onViewChange, currentModel, isConnected, subjectMode, agentMode, onProcessingChange }) => {
    return ((0, jsx_runtime_1.jsx)("div", { className: "flex-1 p-6 overflow-y-auto", children: (0, jsx_runtime_1.jsxs)("div", { className: "max-w-6xl mx-auto space-y-6", children: [(0, jsx_runtime_1.jsxs)("div", { className: "flex items-center justify-between", children: [(0, jsx_runtime_1.jsxs)("div", { className: "flex items-center gap-3", children: [(0, jsx_runtime_1.jsx)(lucide_react_1.Server, { className: "w-8 h-8 text-primary" }), (0, jsx_runtime_1.jsxs)("div", { children: [(0, jsx_runtime_1.jsx)("h1", { className: "text-3xl font-bold", children: "MCP Servers" }), (0, jsx_runtime_1.jsx)("p", { className: "text-muted-foreground", children: "Manage Model Context Protocol server connections" })] })] }), (0, jsx_runtime_1.jsxs)("div", { className: "flex items-center gap-2", children: [(0, jsx_runtime_1.jsxs)(button_1.Button, { variant: "outline", size: "sm", children: [(0, jsx_runtime_1.jsx)(lucide_react_1.RefreshCw, { className: "w-4 h-4 mr-2" }), "Refresh"] }), (0, jsx_runtime_1.jsxs)(button_1.Button, { variant: "default", size: "sm", children: [(0, jsx_runtime_1.jsx)(lucide_react_1.Plus, { className: "w-4 h-4 mr-2" }), "Add Server"] })] })] }), (0, jsx_runtime_1.jsxs)("div", { className: "grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6", children: [(0, jsx_runtime_1.jsxs)(card_1.Card, { children: [(0, jsx_runtime_1.jsxs)(card_1.CardHeader, { children: [(0, jsx_runtime_1.jsxs)(card_1.CardTitle, { className: "flex items-center gap-2", children: [(0, jsx_runtime_1.jsx)("div", { className: "w-3 h-3 bg-green-500 rounded-full" }), "File System Server"] }), (0, jsx_runtime_1.jsx)(card_1.CardDescription, { children: "Local file operations and management" })] }), (0, jsx_runtime_1.jsx)(card_1.CardContent, { children: (0, jsx_runtime_1.jsxs)("div", { className: "space-y-2", children: [(0, jsx_runtime_1.jsxs)("div", { className: "flex items-center justify-between", children: [(0, jsx_runtime_1.jsx)("span", { className: "text-sm text-muted-foreground", children: "Status" }), (0, jsx_runtime_1.jsx)(badge_1.Badge, { variant: "default", children: "Connected" })] }), (0, jsx_runtime_1.jsxs)("div", { className: "flex items-center justify-between", children: [(0, jsx_runtime_1.jsx)("span", { className: "text-sm text-muted-foreground", children: "Tools" }), (0, jsx_runtime_1.jsx)("span", { className: "text-sm", children: "8 available" })] })] }) })] }), (0, jsx_runtime_1.jsxs)(card_1.Card, { children: [(0, jsx_runtime_1.jsxs)(card_1.CardHeader, { children: [(0, jsx_runtime_1.jsxs)(card_1.CardTitle, { className: "flex items-center gap-2", children: [(0, jsx_runtime_1.jsx)("div", { className: "w-3 h-3 bg-blue-500 rounded-full" }), "Web Search Server"] }), (0, jsx_runtime_1.jsx)(card_1.CardDescription, { children: "Internet search and web scraping" })] }), (0, jsx_runtime_1.jsx)(card_1.CardContent, { children: (0, jsx_runtime_1.jsxs)("div", { className: "space-y-2", children: [(0, jsx_runtime_1.jsxs)("div", { className: "flex items-center justify-between", children: [(0, jsx_runtime_1.jsx)("span", { className: "text-sm text-muted-foreground", children: "Status" }), (0, jsx_runtime_1.jsx)(badge_1.Badge, { variant: "default", children: "Connected" })] }), (0, jsx_runtime_1.jsxs)("div", { className: "flex items-center justify-between", children: [(0, jsx_runtime_1.jsx)("span", { className: "text-sm text-muted-foreground", children: "Tools" }), (0, jsx_runtime_1.jsx)("span", { className: "text-sm", children: "4 available" })] })] }) })] }), (0, jsx_runtime_1.jsxs)(card_1.Card, { children: [(0, jsx_runtime_1.jsxs)(card_1.CardHeader, { children: [(0, jsx_runtime_1.jsxs)(card_1.CardTitle, { className: "flex items-center gap-2", children: [(0, jsx_runtime_1.jsx)("div", { className: "w-3 h-3 bg-yellow-500 rounded-full" }), "Code Execution Server"] }), (0, jsx_runtime_1.jsx)(card_1.CardDescription, { children: "Safe code execution environment" })] }), (0, jsx_runtime_1.jsx)(card_1.CardContent, { children: (0, jsx_runtime_1.jsxs)("div", { className: "space-y-2", children: [(0, jsx_runtime_1.jsxs)("div", { className: "flex items-center justify-between", children: [(0, jsx_runtime_1.jsx)("span", { className: "text-sm text-muted-foreground", children: "Status" }), (0, jsx_runtime_1.jsx)(badge_1.Badge, { variant: "secondary", children: "Disconnected" })] }), (0, jsx_runtime_1.jsxs)("div", { className: "flex items-center justify-between", children: [(0, jsx_runtime_1.jsx)("span", { className: "text-sm text-muted-foreground", children: "Tools" }), (0, jsx_runtime_1.jsx)("span", { className: "text-sm", children: "0 available" })] })] }) })] })] }), (0, jsx_runtime_1.jsxs)(card_1.Card, { children: [(0, jsx_runtime_1.jsxs)(card_1.CardHeader, { children: [(0, jsx_runtime_1.jsxs)(card_1.CardTitle, { className: "flex items-center gap-2", children: [(0, jsx_runtime_1.jsx)(lucide_react_1.Settings, { className: "w-5 h-5" }), "Server Configuration"] }), (0, jsx_runtime_1.jsx)(card_1.CardDescription, { children: "Configure MCP server connections and settings" })] }), (0, jsx_runtime_1.jsx)(card_1.CardContent, { children: (0, jsx_runtime_1.jsxs)("div", { className: "text-center py-8 text-muted-foreground", children: [(0, jsx_runtime_1.jsx)(lucide_react_1.Server, { className: "w-12 h-12 mx-auto mb-3 opacity-50" }), (0, jsx_runtime_1.jsx)("p", { children: "MCP server management interface coming soon" }), (0, jsx_runtime_1.jsxs)(button_1.Button, { variant: "outline", className: "mt-4", children: [(0, jsx_runtime_1.jsx)(lucide_react_1.Settings, { className: "w-4 h-4 mr-2" }), "Configure Servers"] })] }) })] })] }) }));
};
exports.MCPServersView = MCPServersView;
//# sourceMappingURL=MCPServersView.js.map