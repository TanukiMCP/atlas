"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.LLMPromptsSettingsTab = void 0;
const jsx_runtime_1 = require("react/jsx-runtime");
/**
 * TanukiMCP Atlas - LLM Prompts Settings Tab
 * Settings tab integration for prompt management overview
 */
const react_1 = require("react");
const prompt_store_1 = require("../../stores/prompt-store");
const LLMPromptsSettingsTab = ({ onOpenFullInterface }) => {
    const { searchResults, isLoading, error, initialize, resetAllPrompts, exportAllModified } = (0, prompt_store_1.usePromptStore)();
    (0, react_1.useEffect)(() => {
        initialize();
    }, [initialize]);
    const totalPrompts = searchResults?.totalCount || 0;
    const modifiedPrompts = searchResults?.prompts.filter(p => p.isModified).length || 0;
    const categories = searchResults?.facets.categories || [];
    const handleResetAll = async () => {
        if (window.confirm('Reset all modified prompts to their defaults? This cannot be undone.')) {
            await resetAllPrompts();
        }
    };
    if (isLoading) {
        return ((0, jsx_runtime_1.jsx)("div", { className: "p-6", children: (0, jsx_runtime_1.jsxs)("div", { className: "animate-pulse", children: [(0, jsx_runtime_1.jsx)("div", { className: "h-4 bg-gray-200 rounded w-1/4 mb-4" }), (0, jsx_runtime_1.jsx)("div", { className: "h-3 bg-gray-200 rounded w-1/2 mb-2" }), (0, jsx_runtime_1.jsx)("div", { className: "h-3 bg-gray-200 rounded w-1/3" })] }) }));
    }
    return ((0, jsx_runtime_1.jsxs)("div", { className: "p-6 space-y-6", children: [(0, jsx_runtime_1.jsxs)("div", { className: "flex items-center justify-between", children: [(0, jsx_runtime_1.jsxs)("div", { children: [(0, jsx_runtime_1.jsx)("h2", { className: "text-xl font-semibold text-gray-900 dark:text-white", children: "\uD83E\uDDE0 LLM System Prompts" }), (0, jsx_runtime_1.jsx)("p", { className: "text-sm text-gray-600 dark:text-gray-400 mt-1", children: "Manage system prompts that guide all LLM agents in TanukiMCP Atlas" })] }), (0, jsx_runtime_1.jsx)("button", { onClick: onOpenFullInterface, className: "px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors", children: "Open Full Interface" })] }), "      ", error && ((0, jsx_runtime_1.jsx)("div", { className: "p-4 bg-red-50 dark:bg-red-900/20 border border-red-200 dark:border-red-800 rounded-lg", children: (0, jsx_runtime_1.jsx)("div", { className: "text-red-700 dark:text-red-300", children: error }) })), (0, jsx_runtime_1.jsxs)("div", { className: "grid grid-cols-1 md:grid-cols-3 gap-4", children: [(0, jsx_runtime_1.jsx)("div", { className: "bg-white dark:bg-gray-800 p-4 rounded-lg border border-gray-200 dark:border-gray-700", children: (0, jsx_runtime_1.jsxs)("div", { className: "flex items-center space-x-3", children: [(0, jsx_runtime_1.jsx)("div", { className: "text-2xl", children: "\uD83D\uDCCA" }), (0, jsx_runtime_1.jsxs)("div", { children: [(0, jsx_runtime_1.jsx)("div", { className: "text-2xl font-bold text-gray-900 dark:text-white", children: totalPrompts }), (0, jsx_runtime_1.jsx)("div", { className: "text-sm text-gray-600 dark:text-gray-400", children: "Total Prompts" })] })] }) }), (0, jsx_runtime_1.jsx)("div", { className: "bg-white dark:bg-gray-800 p-4 rounded-lg border border-gray-200 dark:border-gray-700", children: (0, jsx_runtime_1.jsxs)("div", { className: "flex items-center space-x-3", children: [(0, jsx_runtime_1.jsx)("div", { className: "text-2xl", children: "\u270F\uFE0F" }), (0, jsx_runtime_1.jsxs)("div", { children: [(0, jsx_runtime_1.jsx)("div", { className: "text-2xl font-bold text-yellow-600 dark:text-yellow-400", children: modifiedPrompts }), (0, jsx_runtime_1.jsx)("div", { className: "text-sm text-gray-600 dark:text-gray-400", children: "Modified Prompts" })] })] }) }), (0, jsx_runtime_1.jsx)("div", { className: "bg-white dark:bg-gray-800 p-4 rounded-lg border border-gray-200 dark:border-gray-700", children: (0, jsx_runtime_1.jsxs)("div", { className: "flex items-center space-x-3", children: [(0, jsx_runtime_1.jsx)("div", { className: "text-2xl", children: "\uD83D\uDCC1" }), (0, jsx_runtime_1.jsxs)("div", { children: [(0, jsx_runtime_1.jsx)("div", { className: "text-2xl font-bold text-blue-600 dark:text-blue-400", children: categories.length }), (0, jsx_runtime_1.jsx)("div", { className: "text-sm text-gray-600 dark:text-gray-400", children: "Categories" })] })] }) })] }), "      ", (0, jsx_runtime_1.jsxs)("div", { className: "bg-white dark:bg-gray-800 p-4 rounded-lg border border-gray-200 dark:border-gray-700", children: [(0, jsx_runtime_1.jsx)("h3", { className: "text-lg font-medium text-gray-900 dark:text-white mb-4", children: "Prompt Categories" }), (0, jsx_runtime_1.jsx)("div", { className: "grid grid-cols-1 md:grid-cols-2 gap-3", children: categories.map(category => ((0, jsx_runtime_1.jsxs)("div", { className: "flex items-center justify-between p-2 bg-gray-50 dark:bg-gray-700 rounded", children: [(0, jsx_runtime_1.jsx)("span", { className: "text-sm text-gray-700 dark:text-gray-300", children: category.name }), (0, jsx_runtime_1.jsxs)("span", { className: "text-sm text-gray-500 dark:text-gray-400", children: [category.count, " prompts"] })] }, category.id))) })] }), (0, jsx_runtime_1.jsxs)("div", { className: "bg-white dark:bg-gray-800 p-4 rounded-lg border border-gray-200 dark:border-gray-700", children: [(0, jsx_runtime_1.jsx)("h3", { className: "text-lg font-medium text-gray-900 dark:text-white mb-4", children: "Quick Actions" }), (0, jsx_runtime_1.jsxs)("div", { className: "flex flex-wrap gap-3", children: [(0, jsx_runtime_1.jsx)("button", { onClick: onOpenFullInterface, className: "px-4 py-2 bg-blue-600 text-white rounded hover:bg-blue-700 transition-colors", children: "\uD83D\uDCDD Edit Prompts" }), modifiedPrompts > 0 && ((0, jsx_runtime_1.jsxs)(jsx_runtime_1.Fragment, { children: [(0, jsx_runtime_1.jsx)("button", { onClick: exportAllModified, className: "px-4 py-2 bg-green-600 text-white rounded hover:bg-green-700 transition-colors", children: "\uD83D\uDCE4 Export Modified" }), (0, jsx_runtime_1.jsx)("button", { onClick: handleResetAll, className: "px-4 py-2 bg-red-600 text-white rounded hover:bg-red-700 transition-colors", children: "\uD83D\uDD04 Reset All" })] }))] })] }), (0, jsx_runtime_1.jsxs)("div", { className: "bg-blue-50 dark:bg-blue-900/20 p-4 rounded-lg border border-blue-200 dark:border-blue-800", children: [(0, jsx_runtime_1.jsx)("h4", { className: "font-medium text-blue-900 dark:text-blue-300 mb-2", children: "\uD83D\uDCA1 About LLM Prompt Management" }), (0, jsx_runtime_1.jsx)("p", { className: "text-sm text-blue-800 dark:text-blue-400", children: "System prompts control how AI agents behave throughout TanukiMCP Atlas. You can customize these prompts to better suit your needs, workflow, or preferences. All changes are stored locally and can be reset to defaults at any time." })] })] }));
};
exports.LLMPromptsSettingsTab = LLMPromptsSettingsTab;
//# sourceMappingURL=llm-prompts-settings-tab.js.map