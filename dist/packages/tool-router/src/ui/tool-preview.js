"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ToolPreview = void 0;
const jsx_runtime_1 = require("react/jsx-runtime");
const react_1 = require("react");
const ToolPreview = ({ toolId, toolRouter }) => {
    const [preview, setPreview] = (0, react_1.useState)(null);
    const [isLoading, setIsLoading] = (0, react_1.useState)(true);
    const [error, setError] = (0, react_1.useState)(null);
    (0, react_1.useEffect)(() => {
        loadPreview();
    }, [toolId]);
    const loadPreview = async () => {
        try {
            setIsLoading(true);
            setError(null);
            const previewData = await toolRouter.getToolPreview(toolId);
            setPreview(previewData);
        }
        catch (err) {
            setError(err.message);
        }
        finally {
            setIsLoading(false);
        }
    };
    if (isLoading) {
        return ((0, jsx_runtime_1.jsx)("div", { className: "p-4 flex items-center justify-center", children: (0, jsx_runtime_1.jsx)("div", { className: "animate-spin rounded-full h-6 w-6 border-b-2 border-blue-500" }) }));
    }
    if (error) {
        return ((0, jsx_runtime_1.jsxs)("div", { className: "p-4 text-center text-red-600 dark:text-red-400", children: [(0, jsx_runtime_1.jsx)("div", { className: "text-2xl mb-2", children: "\u26A0\uFE0F" }), (0, jsx_runtime_1.jsx)("div", { className: "text-sm", children: "Failed to load preview" })] }));
    }
    if (!preview) {
        return ((0, jsx_runtime_1.jsxs)("div", { className: "p-4 text-center text-gray-500 dark:text-gray-400", children: [(0, jsx_runtime_1.jsx)("div", { className: "text-2xl mb-2", children: "\uD83D\uDCC4" }), (0, jsx_runtime_1.jsx)("div", { className: "text-sm", children: "No preview available" })] }));
    }
    return ((0, jsx_runtime_1.jsxs)("div", { className: "p-4 h-full overflow-y-auto", children: [(0, jsx_runtime_1.jsxs)("div", { className: "mb-4", children: [(0, jsx_runtime_1.jsxs)("div", { className: "flex items-center space-x-2 mb-2", children: [(0, jsx_runtime_1.jsx)("span", { className: "text-2xl", children: preview.tool.category.icon }), (0, jsx_runtime_1.jsx)("h3", { className: "font-semibold text-lg text-gray-900 dark:text-white", children: preview.tool.name })] }), (0, jsx_runtime_1.jsx)("p", { className: "text-sm text-gray-600 dark:text-gray-400", children: preview.tool.description })] }), (0, jsx_runtime_1.jsxs)("div", { className: "mb-4", children: [(0, jsx_runtime_1.jsx)("h4", { className: "font-medium text-gray-900 dark:text-white mb-2", children: "Performance" }), (0, jsx_runtime_1.jsxs)("div", { className: "grid grid-cols-2 gap-2 text-sm", children: [(0, jsx_runtime_1.jsxs)("div", { className: "bg-gray-50 dark:bg-gray-800 p-2 rounded", children: [(0, jsx_runtime_1.jsx)("div", { className: "text-gray-500 dark:text-gray-400", children: "Success Rate" }), (0, jsx_runtime_1.jsxs)("div", { className: "font-medium", children: [preview.performanceMetrics.successRate, "%"] })] }), (0, jsx_runtime_1.jsxs)("div", { className: "bg-gray-50 dark:bg-gray-800 p-2 rounded", children: [(0, jsx_runtime_1.jsx)("div", { className: "text-gray-500 dark:text-gray-400", children: "Avg Time" }), (0, jsx_runtime_1.jsx)("div", { className: "font-medium", children: preview.performanceMetrics.averageExecutionTime < 1000
                                            ? `${preview.performanceMetrics.averageExecutionTime}ms`
                                            : `${(preview.performanceMetrics.averageExecutionTime / 1000).toFixed(1)}s` })] }), (0, jsx_runtime_1.jsxs)("div", { className: "bg-gray-50 dark:bg-gray-800 p-2 rounded", children: [(0, jsx_runtime_1.jsx)("div", { className: "text-gray-500 dark:text-gray-400", children: "Usage" }), (0, jsx_runtime_1.jsx)("div", { className: "font-medium", children: preview.performanceMetrics.usageFrequency })] }), (0, jsx_runtime_1.jsxs)("div", { className: "bg-gray-50 dark:bg-gray-800 p-2 rounded", children: [(0, jsx_runtime_1.jsx)("div", { className: "text-gray-500 dark:text-gray-400", children: "Trend" }), (0, jsx_runtime_1.jsx)("div", { className: "font-medium", children: preview.performanceMetrics.trendDirection === 'up' ? '📈' :
                                            preview.performanceMetrics.trendDirection === 'down' ? '📉' : '➡️' })] })] })] }), "      ", preview.recentUsage.length > 0 && ((0, jsx_runtime_1.jsxs)("div", { className: "mb-4", children: [(0, jsx_runtime_1.jsx)("h4", { className: "font-medium text-gray-900 dark:text-white mb-2", children: "Recent Usage" }), (0, jsx_runtime_1.jsx)("div", { className: "space-y-2", children: preview.recentUsage.slice(0, 3).map((usage, index) => ((0, jsx_runtime_1.jsxs)("div", { className: "bg-gray-50 dark:bg-gray-800 p-2 rounded text-sm", children: [(0, jsx_runtime_1.jsxs)("div", { className: "flex justify-between items-center", children: [(0, jsx_runtime_1.jsx)("span", { className: "text-gray-600 dark:text-gray-400", children: usage.timestamp.toLocaleDateString() }), (0, jsx_runtime_1.jsx)("span", { className: usage.success ? 'text-green-600' : 'text-red-600', children: usage.success ? '✅' : '❌' })] }), (0, jsx_runtime_1.jsxs)("div", { className: "text-xs text-gray-500 dark:text-gray-400 mt-1", children: [usage.executionTime, "ms \u2022 ", usage.context] })] }, index))) })] })), preview.documentation && ((0, jsx_runtime_1.jsxs)("div", { className: "mb-4", children: [(0, jsx_runtime_1.jsx)("h4", { className: "font-medium text-gray-900 dark:text-white mb-2", children: "Documentation" }), preview.documentation.parameters.length > 0 && ((0, jsx_runtime_1.jsxs)("div", { className: "mb-3", children: [(0, jsx_runtime_1.jsx)("h5", { className: "text-sm font-medium text-gray-700 dark:text-gray-300 mb-1", children: "Parameters" }), (0, jsx_runtime_1.jsx)("div", { className: "space-y-1", children: preview.documentation.parameters.map((param, index) => ((0, jsx_runtime_1.jsxs)("div", { className: "text-xs bg-gray-50 dark:bg-gray-800 p-2 rounded", children: [(0, jsx_runtime_1.jsxs)("div", { className: "flex items-center space-x-2", children: [(0, jsx_runtime_1.jsx)("code", { className: "text-blue-600 dark:text-blue-400", children: param.name }), (0, jsx_runtime_1.jsxs)("span", { className: "text-gray-500", children: ["(", param.type, ")"] }), param.required && (0, jsx_runtime_1.jsx)("span", { className: "text-red-500", children: "*" })] }), (0, jsx_runtime_1.jsx)("div", { className: "text-gray-600 dark:text-gray-400 mt-1", children: param.description })] }, index))) })] })), preview.documentation.examples.length > 0 && ((0, jsx_runtime_1.jsxs)("div", { className: "mb-3", children: [(0, jsx_runtime_1.jsx)("h5", { className: "text-sm font-medium text-gray-700 dark:text-gray-300 mb-1", children: "Examples" }), (0, jsx_runtime_1.jsx)("div", { className: "space-y-2", children: preview.documentation.examples.slice(0, 2).map((example, index) => ((0, jsx_runtime_1.jsxs)("div", { className: "text-xs bg-gray-50 dark:bg-gray-800 p-2 rounded", children: [(0, jsx_runtime_1.jsx)("div", { className: "font-medium text-gray-900 dark:text-white mb-1", children: example.title }), (0, jsx_runtime_1.jsx)("div", { className: "text-gray-600 dark:text-gray-400 mb-1", children: example.description }), (0, jsx_runtime_1.jsx)("pre", { className: "text-xs bg-gray-100 dark:bg-gray-700 p-1 rounded overflow-x-auto", children: JSON.stringify(example.input, null, 2) })] }, index))) })] }))] })), preview.similarTools.length > 0 && ((0, jsx_runtime_1.jsxs)("div", { children: [(0, jsx_runtime_1.jsx)("h4", { className: "font-medium text-gray-900 dark:text-white mb-2", children: "Similar Tools" }), (0, jsx_runtime_1.jsx)("div", { className: "space-y-1", children: preview.similarTools.slice(0, 3).map(tool => ((0, jsx_runtime_1.jsxs)("div", { className: "flex items-center space-x-2 p-2 bg-gray-50 dark:bg-gray-800 rounded text-sm", children: [(0, jsx_runtime_1.jsx)("span", { children: tool.category.icon }), (0, jsx_runtime_1.jsxs)("div", { className: "flex-1 min-w-0", children: [(0, jsx_runtime_1.jsx)("div", { className: "font-medium text-gray-900 dark:text-white truncate", children: tool.name }), (0, jsx_runtime_1.jsx)("div", { className: "text-xs text-gray-500 dark:text-gray-400 truncate", children: tool.description })] })] }, tool.id))) })] }))] }));
};
exports.ToolPreview = ToolPreview;
//# sourceMappingURL=tool-preview.js.map